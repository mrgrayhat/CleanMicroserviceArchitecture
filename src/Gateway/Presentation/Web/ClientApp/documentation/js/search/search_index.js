var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AccordionComponent.html",[0,0.136,1,0.863]],["body/components/AccordionComponent.html",[0,0.209,1,1.426,2,1.076,3,0.078,4,0.078,5,0.692,6,0.888,7,0.908,8,0.073,9,3.801,10,1.374,11,2.441,12,0.759,13,1.673,14,1.88,15,5.957,16,1.177,17,5.957,18,0.168,19,0.696,20,2.635,21,2.987,22,6.043,23,1.577,24,0.799,25,5.957,26,0.178,27,0.009,28,5.131,29,4.299,30,0.543,31,1.436,32,0.207,33,0.931,34,0.178,35,2.086,36,0.078,37,0.247,38,5.957,39,5.957,40,0.794,41,1.258,42,1.203,43,0.692,44,1.558,45,0.908,46,0.476,47,0.908,48,0.831,49,1.843,50,1.076,51,1.258,52,0.831,53,0.908,54,0.831,55,0.908,56,0.794,57,0.908,58,0.831,59,0.908,60,0.831,61,0.908,62,0.908,63,0.812,64,0.908,65,0.812,66,0.908,67,0.831,68,0.543,69,1.258,70,0.812,71,0.849,72,0.831,73,0.908,74,0.831,75,0.908,76,0.794,77,1.758,78,0.794,79,0.63,80,1.258,81,0.794,82,0.908,83,0.794,84,0.645,85,1.443,86,0.794,87,0.908,88,0.831,89,0.615,90,0.759,91,0.908,92,0.794,93,0.908,94,0.794,95,0.908,96,0.794,97,1.258,98,0.794,99,0.794,100,0.888,101,0.794,102,0.908,103,0.831,104,0.888,105,0.908,106,0.794,107,0.908,108,0.794,109,0.908,110,0.831,111,0.908,112,0.831,113,0.908,114,0.831,115,0.908,116,1.443,117,0.831,118,0.888,119,0.908,120,0.831,121,0.831,122,0.908,123,0.812,124,0.908,125,0.831,126,0.742,127,0.908,128,0.812,129,0.908,130,0.831,131,0.849,132,0.812,133,0.868,134,0.908,135,0.831,136,0.849,137,0.908,138,0.831,139,0.908,140,0.812,141,0.908,142,0.831,143,0.908,144,0.812,145,0.908,146,0.812,147,0.908,148,0.831,149,0.908,150,0.831,151,0.908,152,0.908,153,0.831,154,0.908,155,0.794,156,0.794,157,0.908,158,0.812,159,0.908,160,0.812,161,0.888,162,0.888,163,0.908,164,0.812,165,0.908,166,0.812,167,0.759,168,0.888,169,0.908,170,0.004,171,0.006,172,0.004]],["title/components/ActionButtonComponent.html",[0,0.136,48,0.863]],["body/components/ActionButtonComponent.html",[0,0.194,1,0.726,2,0.978,3,0.069,4,0.069,5,0.605,6,0.776,7,0.793,8,0.067,10,1.249,12,0.663,13,1.664,14,1.854,16,1.07,18,0.147,19,0.633,24,0.897,26,0.263,27,0.009,30,0.93,31,1.531,32,0.221,33,0.512,34,0.155,35,1.823,36,0.069,37,0.216,40,0.694,41,1.144,42,1.094,43,0.605,44,1.468,45,0.793,46,0.513,47,0.793,48,1.343,49,1.827,50,1.489,51,1.144,52,0.726,53,0.793,54,0.726,55,0.793,56,0.694,57,0.793,58,0.726,59,0.793,60,0.726,61,0.793,62,0.793,63,0.71,64,0.793,65,0.71,66,0.793,67,0.726,68,0.474,69,1.144,70,0.71,71,0.742,72,0.726,73,0.793,74,0.726,75,0.793,76,0.694,77,1.721,78,0.694,79,0.93,80,1.144,81,0.694,82,0.793,83,0.694,84,0.564,85,1.341,86,0.694,87,0.793,88,0.726,89,0.537,90,0.663,91,0.793,92,0.694,93,0.793,94,0.694,95,0.793,96,0.694,97,1.144,98,0.694,99,0.694,100,0.776,101,0.694,102,0.793,103,0.726,104,0.776,105,0.793,106,0.694,107,0.793,108,0.694,109,0.793,110,0.726,111,0.793,112,0.726,113,0.793,114,0.726,115,0.793,116,1.341,117,0.726,118,0.776,119,0.793,120,0.726,121,0.726,122,0.793,123,0.71,124,0.793,125,0.726,126,0.648,127,0.793,128,0.71,129,0.793,130,0.726,131,0.742,132,0.71,133,0.759,134,0.793,135,0.726,136,0.742,137,0.793,138,0.726,139,0.793,140,0.71,141,0.793,142,0.726,143,0.793,144,0.71,145,0.793,146,0.71,147,0.793,148,0.726,149,0.793,150,0.726,151,0.793,152,0.793,153,0.726,154,0.793,155,0.694,156,0.694,157,0.793,158,0.71,159,0.793,160,0.71,161,0.776,162,0.776,163,0.793,164,0.71,165,0.793,166,0.71,167,0.663,168,0.776,169,0.793,170,0.003,171,0.005,172,0.003,173,0.947,174,6.388,175,6.992,176,3.035,177,5.614,178,1.277,179,5.614,180,4.788,181,0.568,182,2.066,183,4.915,184,4.065,185,4.374,186,6.949,187,6.143,188,5.217,189,3.819,190,3.757,191,0.737,192,0.552,193,5.415,194,4.038,195,3.757,196,3.757,197,0.852,198,3.757,199,1.313,200,3.757,201,3.757,202,2.183,203,2.183,204,2.385,205,4.065,206,2.649,207,3.757,208,1.67,209,3.757,210,1.766,211,2.278,212,3.757,213,4.214,214,3.757,215,7.366,216,3.035,217,3.757,218,2.183,219,3.757,220,2.649,221,3.757,222,2.82,223,1.277,224,3.035,225,4.374]],["title/components/ActionButtonsComponent.html",[0,0.136,52,0.863]],["body/components/ActionButtonsComponent.html",[0,0.197,1,0.745,2,0.996,3,0.07,4,0.07,5,0.621,6,0.796,7,0.814,8,0.068,10,1.273,12,0.681,13,1.666,14,1.858,16,1.09,18,0.151,19,0.645,24,0.869,26,0.291,27,0.009,30,0.888,31,1.696,32,0.192,33,0.525,34,0.159,36,0.07,37,0.221,40,0.712,41,1.165,42,1.114,43,0.621,44,1.485,45,0.814,46,0.539,47,0.814,48,0.745,49,1.832,50,1.499,51,1.165,52,1.359,53,0.814,54,0.745,55,0.814,56,0.712,57,0.814,58,0.745,59,0.814,60,0.745,61,0.814,62,0.814,63,0.728,64,0.814,65,0.728,66,0.814,67,0.745,68,0.487,69,1.165,70,0.728,71,0.762,72,0.745,73,0.814,74,0.745,75,0.814,76,0.712,77,1.728,78,0.712,79,0.565,80,1.165,81,0.712,82,0.814,83,0.712,84,0.578,85,1.36,86,0.712,87,0.814,88,0.745,89,0.551,90,0.681,91,0.814,92,0.712,93,0.814,94,0.712,95,0.814,96,0.712,97,1.165,98,0.712,99,0.712,100,0.796,101,0.712,102,0.814,103,0.745,104,0.796,105,0.814,106,0.712,107,0.814,108,0.712,109,0.814,110,0.745,111,0.814,112,0.745,113,0.814,114,0.745,115,0.814,116,1.36,117,0.745,118,0.796,119,0.814,120,0.745,121,0.745,122,0.814,123,0.728,124,0.814,125,0.745,126,0.665,127,0.814,128,0.728,129,0.814,130,0.745,131,0.762,132,0.728,133,0.779,134,0.814,135,0.745,136,0.762,137,0.814,138,0.745,139,0.814,140,0.728,141,0.814,142,0.745,143,0.814,144,0.728,145,0.814,146,0.728,147,0.814,148,0.745,149,0.814,150,0.745,151,0.814,152,0.814,153,0.745,154,0.814,155,0.712,156,0.712,157,0.814,158,0.728,159,0.814,160,0.728,161,0.796,162,0.796,163,0.814,164,0.728,165,0.814,166,0.728,167,0.681,168,0.796,169,0.814,170,0.004,171,0.005,172,0.004,173,0.972,174,6.252,177,5.695,178,1.301,181,0.578,182,2.001,183,4.965,184,4.141,187,6.217,189,3.89,191,0.877,192,0.656,194,4.737,199,1.042,202,2.24,203,2.24,204,2.447,206,2.718,208,0.814,210,1.812,226,6.843,227,3.408,228,5.516,229,6.442,230,5.516,231,4.141,232,4.141,233,3.855,234,5.516,235,3.855,236,3.855,237,5.516,238,3.855,239,3.855,240,3.855,241,3.855,242,5.516,243,3.89,244,5.516,245,4.877]],["title/components/AppComponent.html",[0,0.136,54,0.863]],["body/components/AppComponent.html",[0,0.19,1,0.7,2,0.953,3,0.066,4,0.066,5,0.584,6,0.749,7,0.765,8,0.065,10,1.217,11,2.221,12,0.64,13,1.661,14,1.848,16,1.042,18,0.142,19,0.616,20,2.44,23,1.217,24,0.798,26,0.218,27,0.009,30,0.786,31,1.272,32,0.253,33,0.494,34,0.15,36,0.066,37,0.208,40,0.669,41,1.114,42,1.066,43,0.584,44,1.443,45,0.765,46,0.528,47,0.765,48,0.7,49,1.82,50,0.953,51,1.114,52,0.7,53,0.765,54,1.32,55,0.765,56,0.669,57,0.765,58,0.7,59,0.765,60,0.7,61,0.765,62,0.765,63,0.685,64,0.765,65,0.685,66,0.765,67,0.7,68,0.458,69,1.114,70,0.685,71,0.716,72,0.7,73,0.765,74,0.7,75,0.765,76,0.669,77,1.711,78,0.669,79,0.531,80,1.114,81,0.669,82,0.765,83,0.669,84,0.544,85,1.314,86,0.669,87,0.765,88,0.7,89,0.518,90,0.64,91,0.765,92,0.669,93,0.765,94,0.669,95,0.765,96,0.669,97,1.114,98,0.669,99,0.669,100,0.749,101,0.669,102,0.765,103,0.7,104,0.749,105,0.765,106,0.669,107,0.765,108,0.669,109,0.765,110,0.7,111,0.765,112,0.7,113,0.765,114,0.7,115,0.765,116,1.314,117,0.7,118,0.749,119,0.765,120,0.7,121,0.7,122,0.765,123,0.685,124,0.765,125,0.7,126,0.625,127,0.765,128,0.685,129,0.765,130,0.7,131,0.716,132,0.685,133,0.732,134,0.765,135,0.7,136,0.716,137,0.765,138,0.7,139,1.114,140,0.685,141,0.765,142,0.7,143,0.765,144,0.685,145,0.765,146,0.685,147,0.765,148,0.7,149,0.765,150,0.7,151,0.765,152,0.765,153,0.7,154,0.765,155,0.669,156,0.669,157,0.765,158,0.685,159,0.765,160,0.685,161,0.749,162,0.749,163,0.765,164,0.685,165,0.765,166,0.685,167,0.64,168,0.749,169,0.765,170,0.003,171,0.005,172,0.003,173,0.914,178,1.244,182,1.828,191,0.718,192,0.538,208,1.114,246,3.204,247,2.034,248,6.221,249,5.276,250,5.276,251,2.366,252,6.833,253,3.204,254,4.811,255,3.446,256,7.823,257,4.744,258,5.22,259,3.624,260,5.276,261,3.624,262,3.624,263,3.624,264,3.624,265,2.556,266,1.817,267,5.276,268,1.817,269,4.262,270,3.624,271,2.106,272,3.624,273,3.624,274,3.624,275,3.624,276,3.624,277,2.418,278,3.624,279,2.335,280,2.301,281,6.221,282,5.276,283,3.624,284,3.624,285,3.204,286,2.301,287,1.262,288,3.961,289,3.204,290,3.624,291,3.204,292,3.624,293,3.624,294,3.624,295,3.624,296,3.624,297,2.418,298,4.387,299,5.276,300,4.262,301,3.624,302,3.624,303,3.624,304,2.556,305,2.556,306,2.556,307,2.927]],["title/directives/AppFileInputDirective.html",[43,0.719,156,0.825]],["body/directives/AppFileInputDirective.html",[3,0.079,4,0.079,8,0.105,10,1.378,12,0.762,13,1.054,18,0.169,19,0.698,21,2.994,23,1.378,24,1.017,26,0.347,27,0.009,30,0.98,31,2.079,32,0.208,33,0.932,34,0.178,36,0.079,37,0.248,43,0.961,46,0.593,155,0.797,156,1.265,170,0.004,171,0.006,172,0.004,181,0.626,182,1.936,191,1.093,192,0.818,194,2.507,197,0.939,199,1.516,210,2.028,223,2.328,251,2.29,308,3.886,309,7.093,310,3.485,311,6.848,312,3.334,313,5.531,314,5.971,315,6.848,316,6.848,317,5.971,318,5.971,319,5.971,320,5.971,321,5.971,322,3.79,323,3.098,324,7.39,325,4.314,326,5.548,327,6.848,328,7.39,329,4.314,330,5.971,331,4.314,332,4.314,333,5.971,334,4.314,335,5.971,336,4.314,337,5.971,338,2.164,339,4.314,340,7.39,341,2.243,342,5.971,343,4.314,344,5.971,345,4.314,346,5.971,347,5.971,348,3.711,349,4.314,350,4.314,351,4.314,352,4.314,353,4.314,354,4.314,355,5.971,356,4.314,357,5.279,358,5.279,359,1.707,360,1.539,361,3.239,362,3.814,363,3.485,364,2.08,365,3.814,366,3.239,367,4.314,368,4.314,369,4.314,370,4.314,371,4.314,372,4.314,373,6.848,374,5.971,375,3.485,376,4.314,377,2.616,378,4.314,379,4.314,380,4.314,381,4.314,382,1.707]],["title/components/AppFormComponent.html",[0,0.136,56,0.825]],["body/components/AppFormComponent.html",[0,0.163,1,0.542,2,0.786,3,0.051,4,0.051,5,0.452,6,0.58,7,0.593,8,0.054,10,1.004,11,1.904,12,0.495,13,1.638,14,1.81,16,0.86,18,0.171,19,0.509,20,2.145,21,2.183,23,0.648,24,1.024,26,0.341,27,0.009,30,0.983,31,1.789,32,0.186,33,0.885,34,0.116,35,1.362,36,0.051,37,0.161,40,0.518,41,0.919,42,0.879,43,0.452,44,1.269,45,0.593,46,0.568,47,0.593,48,0.542,49,1.744,50,0.786,51,0.919,52,0.542,53,0.593,54,0.542,55,0.593,56,1.11,57,0.593,58,0.542,59,0.593,60,0.542,61,0.593,62,0.593,63,0.53,64,0.593,65,0.53,66,0.593,67,0.542,68,0.354,69,0.919,70,0.53,71,0.554,72,0.542,73,0.593,74,0.542,75,0.593,76,0.518,77,1.696,78,0.518,79,0.411,80,0.919,81,0.518,82,0.593,83,0.518,84,0.421,85,1.126,86,0.518,87,0.593,88,0.542,89,0.401,90,0.495,91,0.593,92,0.518,93,0.593,94,0.518,95,0.593,96,0.518,97,0.919,98,0.518,99,0.518,100,0.58,101,0.518,102,0.593,103,0.542,104,0.58,105,0.593,106,0.518,107,0.593,108,0.518,109,0.593,110,0.542,111,0.593,112,0.542,113,0.593,114,0.542,115,0.593,116,1.126,117,0.542,118,0.58,119,0.593,120,0.542,121,0.542,122,0.593,123,0.53,124,0.593,125,0.542,126,0.484,127,0.593,128,0.53,129,0.593,130,0.542,131,0.554,132,0.53,133,0.567,134,0.593,135,0.542,136,0.554,137,0.593,138,0.542,139,0.593,140,0.53,141,0.593,142,0.542,143,0.593,144,0.53,145,0.593,146,0.53,147,0.593,148,0.542,149,0.593,150,0.542,151,0.593,152,0.593,153,0.542,154,0.593,155,0.518,156,0.518,157,0.593,158,0.53,159,0.593,160,0.53,161,0.58,162,0.58,163,0.593,164,0.53,165,0.593,166,0.53,167,0.495,168,0.58,169,0.593,170,0.003,171,0.004,172,0.003,173,0.708,178,1.027,181,0.456,191,0.937,192,0.701,197,1.082,199,1.228,208,1.7,223,0.954,323,2.259,338,2.137,348,1.242,359,1.111,360,1.85,364,2.093,377,1.702,382,1.723,383,2.481,384,4.307,385,4.353,386,4.353,387,5.332,388,4.353,389,5.332,390,5.557,391,4.353,392,6.008,393,4.853,394,4.353,395,3.814,396,4.353,397,4.353,398,6.008,399,2.241,400,5.332,401,4.237,402,5.312,403,4.714,404,4.307,405,5.332,406,2.807,407,6.008,408,2.807,409,4.353,410,4.353,411,2.807,412,2.807,413,4.353,414,2.14,415,2.807,416,5.332,417,4.714,418,2.807,419,2.807,420,2.807,421,4.353,422,2.807,423,2.807,424,4.353,425,6.88,426,2.807,427,4.353,428,2.807,429,2.807,430,2.807,431,4.307,432,2.807,433,1.979,434,4.353,435,2.905,436,2.807,437,2.481,438,2.807,439,2.807,440,2.481,441,2.807,442,2.807,443,2.807,444,2.807,445,2.807,446,2.807,447,2.807,448,2.807,449,2.807,450,2.107,451,1.979,452,1.319,453,2.807,454,2.807,455,2.807,456,2.807,457,2.807,458,2.53,459,2.267,460,2.807,461,2.807,462,2.807,463,2.807,464,2.807,465,1.054,466,4.353,467,2.807,468,2.267,469,2.807,470,2.807,471,4.353,472,2.807,473,4.353,474,2.807,475,2.807,476,2.807,477,2.807,478,2.807,479,2.807,480,1.242,481,2.807,482,2.807,483,2.807,484,2.807,485,2.807,486,2.763,487,2.807,488,2.807,489,2.807,490,2.807,491,2.112,492,1.207,493,2.807,494,2.481,495,2.807,496,2.807,497,2.807,498,2.481,499,2.807,500,2.807,501,2.807,502,2.807,503,1.873,504,2.807,505,2.107,506,2.807,507,2.807,508,2.267,509,2.807,510,2.807,511,2.807,512,2.807,513,2.807,514,1.979,515,2.807,516,2.807,517,2.807]],["title/modules/AppModule.html",[518,2.401,519,3.352]],["body/modules/AppModule.html",[2,1.243,3,0.097,4,0.097,8,0.066,27,0.009,32,0.316,34,0.221,36,0.097,37,0.306,40,0.986,49,1.078,54,1.754,74,1.649,112,1.649,114,1.649,138,1.649,167,0.942,170,0.005,171,0.006,172,0.005,247,2.057,265,4.854,266,2.675,268,2.675,312,2.98,395,3.387,518,2.869,519,6.944,520,3.235,521,3.235,522,5.084,523,3.821,524,3.56,525,4.717,526,4.717,527,4.717,528,4.717,529,5.174,530,4.593,531,2.508,532,5.336,533,4.854,534,5.336,535,6.883,536,4.593,537,6.883,538,5.336,539,3.763,540,5.336,541,5.336,542,5.336,543,5.336,544,4.717,545,4.006,546,4.717,547,3.101,548,5.336,549,5.336,550,5.336,551,5.336,552,5.336,553,5.336,554,5.336,555,4.717,556,5.336,557,5.336,558,5.336,559,5.336,560,5.336,561,6.883,562,5.336,563,5.336,564,5.336]],["title/injectables/AppService.html",[257,2.707,565,1.125]],["body/injectables/AppService.html",[3,0.107,4,0.107,8,0.072,18,0.23,19,0.854,23,1.352,24,0.93,26,0.242,27,0.009,30,0.74,32,0.277,34,0.242,36,0.107,37,0.337,46,0.408,170,0.005,171,0.007,172,0.005,182,1.413,191,0.798,192,0.597,197,1.252,208,1.76,247,2.259,251,2.349,257,4.43,265,4.133,266,2.938,323,3.79,348,3.233,360,1.883,565,1.842,566,2.672,567,4.734,568,7.579,569,7.036,570,4.399,571,8.866,572,6.656,573,5.861,574,5.151,575,5.861,576,3.434,577,5.861,578,5.861,579,4.133,580,5.861,581,4.734,582,5.181,583,2.383,584,4.133,585,7.366,586,7.305,587,7.305,588,5.861,589,5.861,590,4.734,591,5.861,592,5.861,593,3.544,594,1.616,595,5.861,596,5.861,597,5.861]],["title/interfaces/ApplicationPathsType.html",[598,0.67,599,3.352]],["body/interfaces/ApplicationPathsType.html",[3,0.08,4,0.08,8,0.054,18,0.171,26,0.378,27,0.009,32,0.152,36,0.147,126,1.473,170,0.004,171,0.006,172,0.004,181,0.63,197,1.494,287,2.095,360,2.076,531,2.049,545,3.273,546,3.854,598,0.654,599,5.573,600,1.38,601,3.522,602,6.886,603,6.886,604,6.886,605,6.886,606,7.119,607,7.119,608,7.119,609,6.886,610,7.119,611,7.119,612,7.119,613,5.929,614,7.119,615,7.119,616,7.119,617,7.296,618,7.119,619,6.195,620,7.119,621,2.435,622,3.854,623,3.854,624,3.854,625,3.854,626,3.522,627,3.818,628,4.013,629,2.909,630,3.074,631,4.241,632,2.534,633,3.074,634,3.522,635,3.779,636,3.854,637,3.854,638,3.854,639,3.854,640,3.854,641,3.854,642,3.854,643,3.854,644,3.854,645,3.854,646,3.854,647,4.36,648,4.36,649,4.36,650,4.36,651,4.36,652,4.36,653,4.36,654,9.136]],["title/interceptors/AuthInterceptor.html",[655,3.148,656,3.148]],["body/interceptors/AuthInterceptor.html",[3,0.11,4,0.11,8,0.075,10,1.396,18,0.237,19,0.871,23,1.396,24,0.871,26,0.308,27,0.009,30,0.764,32,0.301,34,0.25,36,0.11,37,0.348,46,0.519,170,0.006,171,0.007,172,0.006,191,1.015,192,0.759,208,1.574,247,2.333,253,5.351,254,5.593,268,3.035,465,2.273,565,1.879,583,2.461,656,5.255,657,4.544,658,5.351,659,5.595,660,6.053,661,6.02,662,6.326,663,5.388,664,6.326,665,6.053,666,4.889,667,4.049,668,5.595,669,4.544,670,7.452,671,3.842,672,6.053,673,2.396,674,4.889,675,2.678,676,5.351,677,6.053,678,6.053,679,5.351,680,6.053,681,6.053]],["title/guards/AuthorizeGuard.html",[682,3.606,683,3.606]],["body/guards/AuthorizeGuard.html",[3,0.102,4,0.102,8,0.069,10,1.295,18,0.22,19,0.831,23,1.295,24,0.912,26,0.323,27,0.009,30,0.898,31,1.353,32,0.301,34,0.232,36,0.102,37,0.322,46,0.543,170,0.005,171,0.007,172,0.005,191,1.062,192,0.795,199,1.599,208,1.185,247,2.163,251,2.421,254,5.574,268,2.813,465,2.108,565,1.792,576,3.341,583,2.282,629,3.744,635,2.722,667,3.912,673,2.221,675,2.483,683,5.742,684,5.611,685,4.961,686,8.203,687,7.108,688,4.961,689,3.856,690,5.611,691,6.284,692,7.108,693,8.203,694,4.261,695,8.782,696,5.611,697,5.611,698,7.108,699,5.611,700,4.131,701,4.961,702,3.018,703,3.018,704,5.611,705,5.611,706,5.611,707,4.532,708,5.611,709,5.611]],["title/injectables/AuthorizeService.html",[565,1.125,689,2.099]],["body/injectables/AuthorizeService.html",[3,0.049,4,0.049,8,0.033,18,0.104,19,0.602,24,1.001,26,0.329,27,0.009,30,1.03,32,0.221,34,0.11,36,0.128,37,0.153,46,0.522,50,0.481,90,1.44,126,0.46,170,0.002,171,0.004,172,0.002,181,0.438,182,2.106,191,0.993,192,0.743,197,1.297,199,0.974,208,1.844,210,2.424,218,2.996,223,1.753,247,1.026,251,2.63,266,1.335,287,1.796,322,2.652,323,2.168,338,1.126,348,1.178,360,1.505,364,2.21,377,1.615,382,2.311,458,1.548,480,1.849,503,3.44,531,1.252,565,1.053,566,1.214,576,3.605,583,1.083,593,1.292,594,1.856,598,0.876,621,2.333,632,1.548,635,1.292,667,3.758,673,1.054,675,1.178,689,1.964,694,3.415,700,3.394,702,1.432,703,1.432,710,1.615,711,3.636,712,3.636,713,4.747,714,3.636,715,4.433,716,3.375,717,4.178,718,4.178,719,4.118,720,4.118,721,4.233,722,4.118,723,4.178,724,4.07,725,4.178,726,4.118,727,3.44,728,4.444,729,2.946,730,2.663,731,2.534,732,2.946,733,2.663,734,2.946,735,2.663,736,1.615,737,2.663,738,2.946,739,2.663,740,4.697,741,2.663,742,2.663,743,2.663,744,2.946,745,2.663,746,2.946,747,2.663,748,2.663,749,2.946,750,2.663,751,2.946,752,2.663,753,2.946,754,2.663,755,3.707,756,2.663,757,2.663,758,2.663,759,2.996,760,2.428,761,2.663,762,2.354,763,2.663,764,2.663,765,1.878,766,1.69,767,2.428,768,2.946,769,1.382,770,1.548,771,3.44,772,1.69,773,2.534,774,2.534,775,2.534,776,3.62,777,2.428,778,2.428,779,2.428,780,1.178,781,1.487,782,3.44,783,1.026,784,3.636,785,1.878,786,1.69,787,1.878,788,1.878,789,1.878,790,1.777,791,2.946,792,4.027,793,1.69,794,1.878,795,1.878,796,3.636,797,1.878,798,1.878,799,1.878,800,4.233,801,1.878,802,1.878,803,2.946,804,1.878,805,1.878,806,1.878,807,1.878,808,2.946,809,1.878,810,1.878,811,1.878,812,5.117,813,3.273,814,1.777,815,1.878,816,1.878,817,1.777,818,1.878,819,1.878,820,1.878,821,2.946,822,1.878,823,2.946,824,1.878,825,1.615,826,4.118,827,3.636,828,1.878,829,2.946,830,1.69,831,1.878,832,1.878,833,1.615,834,1.878,835,1.69,836,4.555,837,4.118,838,1.878,839,2.946,840,3.636,841,4.964,842,2.946,843,1.878,844,2.946,845,1.878,846,3.636,847,2.502,848,2.946,849,2.946,850,1.878,851,2.946,852,1.878,853,2.946,854,1.878,855,1.878,856,1.878,857,1.69,858,1.878,859,2.946,860,1.878,861,1.878,862,2.946,863,2.946,864,2.946,865,1.878,866,1.878,867,1.878,868,1.878,869,1.878,870,1.878,871,1.878,872,2.946,873,1.878,874,1.878,875,3.636,876,3.636,877,1.878,878,1.878,879,1.878,880,1.878,881,1.878,882,1.878,883,1.878,884,1.878,885,1.777,886,1.878,887,1.878,888,1.878,889,2.946,890,1.777,891,1.777,892,1.878,893,1.878,894,1.878,895,1.777,896,2.946,897,1.878,898,1.878,899,1.878,900,1.878,901,1.878,902,1.878,903,1.878,904,1.878,905,1.878]],["title/components/CardComponent.html",[0,0.136,58,0.863]],["body/components/CardComponent.html",[0,0.197,1,0.746,2,0.998,3,0.07,4,0.07,5,0.622,6,0.798,7,0.816,8,0.068,10,1.275,11,2.303,12,0.682,13,1.666,14,1.865,16,1.091,18,0.151,19,0.646,20,2.513,21,2.77,23,0.891,24,0.97,26,0.32,27,0.009,30,0.698,31,1.697,32,0.135,33,1.014,34,0.16,36,0.07,37,0.222,40,0.714,41,1.167,42,1.116,43,0.622,44,1.486,45,0.816,46,0.49,47,0.816,48,0.746,49,1.821,50,0.998,51,1.167,52,0.746,53,0.816,54,0.746,55,0.816,56,0.714,57,0.816,58,1.36,59,0.816,60,0.746,61,1.362,62,0.816,63,0.73,64,0.816,65,0.73,66,0.816,67,0.746,68,0.488,69,1.167,70,0.73,71,0.763,72,0.746,73,0.816,74,0.746,75,0.816,76,0.714,77,1.729,78,0.714,79,0.566,80,1.167,81,0.714,82,0.816,83,0.714,84,0.58,85,1.362,86,0.714,87,0.816,88,0.746,89,0.552,90,0.682,91,0.816,92,0.714,93,0.816,94,0.714,95,0.816,96,0.714,97,1.167,98,0.714,99,0.714,100,0.798,101,0.714,102,0.816,103,0.746,104,0.798,105,0.816,106,0.714,107,0.816,108,0.714,109,0.816,110,0.746,111,0.816,112,0.746,113,0.816,114,0.746,115,0.816,116,1.362,117,0.746,118,0.798,119,0.816,120,0.746,121,0.746,122,0.816,123,0.73,124,0.816,125,0.746,126,0.667,127,0.816,128,0.73,129,0.816,130,0.746,131,0.763,132,0.73,133,0.78,134,0.816,135,0.746,136,0.763,137,0.816,138,0.746,139,0.816,140,0.73,141,0.816,142,0.746,143,0.816,144,0.73,145,0.816,146,0.73,147,0.816,148,0.746,149,0.816,150,0.746,151,0.816,152,0.816,153,0.746,154,0.816,155,0.714,156,0.714,157,0.816,158,0.73,159,0.816,160,0.73,161,0.798,162,0.798,163,0.816,164,0.73,165,0.816,166,0.73,167,0.682,168,0.798,169,0.816,170,0.004,171,0.005,172,0.004,181,0.579,191,0.526,192,0.394,197,1.218,199,1.044,255,3.201,279,1.709,364,1.924,433,2.724,435,3.686,450,4.841,451,2.724,465,1.451,594,1.065,906,3.415,907,5.525,908,5.702,909,6.449,910,5.685,911,5.251,912,4.841,913,3.896,914,6.449,915,3.863,916,6.222,917,5.525,918,5.525,919,2.773,920,3.863,921,3.863,922,3.863,923,4.548,924,3.863,925,3.863,926,3.863,927,5.525,928,3.863,929,3.507,930,3.863,931,3.863,932,3.863,933,3.863]],["title/components/CardDeckComponent.html",[0,0.136,60,0.863]],["body/components/CardDeckComponent.html",[0,0.191,1,0.704,2,0.957,3,0.066,4,0.066,5,0.587,6,0.753,7,0.77,8,0.065,10,1.223,11,2.229,12,0.644,13,1.661,14,1.856,16,1.047,18,0.143,19,0.619,20,2.447,21,2.657,22,5.519,23,1.44,24,0.995,26,0.344,27,0.009,30,0.669,31,1.505,32,0.185,33,1.132,34,0.151,35,1.769,36,0.066,37,0.209,40,0.673,41,1.119,42,1.07,43,0.587,44,1.447,45,0.77,46,0.477,47,0.77,48,0.704,49,1.808,50,0.957,51,1.119,52,0.704,53,0.77,54,0.704,55,0.77,56,0.673,57,0.77,58,0.704,59,0.77,60,1.324,61,1.696,62,0.77,63,0.689,64,0.77,65,0.689,66,0.77,67,0.704,68,0.46,69,1.119,70,0.689,71,0.72,72,0.704,73,0.77,74,0.704,75,0.77,76,0.673,77,1.712,78,0.673,79,0.534,80,1.119,81,0.673,82,0.77,83,0.673,84,0.547,85,1.318,86,0.673,87,0.77,88,0.704,89,0.521,90,0.644,91,0.77,92,0.673,93,0.77,94,0.673,95,0.77,96,0.673,97,1.119,98,0.673,99,0.673,100,0.753,101,0.673,102,0.77,103,0.704,104,0.753,105,0.77,106,0.673,107,0.77,108,0.673,109,0.77,110,0.704,111,0.77,112,0.704,113,0.77,114,0.704,115,0.77,116,1.318,117,0.704,118,0.753,119,0.77,120,0.704,121,0.704,122,0.77,123,0.689,124,0.77,125,0.704,126,0.629,127,0.77,128,0.689,129,0.77,130,0.704,131,0.72,132,0.689,133,0.736,134,0.77,135,0.704,136,0.72,137,0.77,138,0.704,139,0.77,140,0.689,141,0.77,142,0.704,143,0.77,144,0.689,145,0.77,146,0.689,147,0.77,148,0.704,149,0.77,150,0.704,151,0.77,152,0.77,153,0.704,154,0.77,155,0.673,156,0.673,157,0.77,158,0.689,159,0.77,160,0.689,161,0.753,162,0.753,163,0.77,164,0.689,165,0.77,166,0.689,167,0.644,168,0.753,169,0.77,170,0.003,171,0.005,172,0.003,173,0.919,178,1.25,191,0.496,192,0.372,194,3.079,197,1.195,199,1.001,255,2.684,508,5.535,593,1.769,594,1.005,908,5.519,912,4.686,913,3.736,923,4.402,929,3.364,934,7.601,935,7.601,936,3.223,937,5.299,938,6.242,939,5.299,940,5.299,941,6.242,942,6.242,943,6.242,944,6.242,945,6.242,946,5.299,947,3.646,948,3.646,949,3.646,950,3.646,951,3.646,952,3.646,953,3.646,954,3.646,955,3.646,956,5.299,957,6.242,958,3.646,959,2.571,960,3.646,961,5.299,962,5.299,963,2.571,964,2.571,965,2.119,966,3.646,967,4.685,968,2.314]],["title/components/ChatComponent.html",[0,0.136,63,0.843]],["body/components/ChatComponent.html",[0,0.189,1,0.695,2,0.948,3,0.066,4,0.066,5,0.58,6,0.743,7,0.76,8,0.065,10,1.211,11,2.213,12,0.635,13,1.66,14,1.847,16,1.037,18,0.141,19,0.613,20,2.432,23,0.83,24,0.912,26,0.331,27,0.009,30,0.663,31,1.494,32,0.237,33,0.49,34,0.149,36,0.066,37,0.207,40,0.665,41,1.109,42,1.061,43,0.58,44,1.438,45,0.76,46,0.544,47,0.76,48,0.695,49,1.818,50,0.948,51,1.109,52,0.695,53,0.76,54,0.695,55,0.76,56,1.258,57,0.76,58,0.695,59,0.76,60,0.695,61,0.76,62,0.76,63,1.287,64,0.76,65,0.68,66,0.76,67,0.695,68,0.455,69,1.109,70,0.68,71,0.711,72,0.695,73,0.76,74,0.695,75,0.76,76,0.665,77,1.751,78,0.665,79,0.769,80,1.109,81,0.665,82,0.76,83,0.665,84,0.54,85,1.309,86,0.665,87,0.76,88,0.695,89,0.515,90,0.635,91,0.76,92,0.665,93,0.76,94,0.665,95,0.76,96,0.665,97,1.109,98,0.665,99,0.665,100,0.743,101,0.665,102,0.76,103,0.695,104,0.743,105,0.76,106,0.665,107,0.76,108,0.665,109,0.76,110,0.695,111,0.76,112,0.695,113,0.76,114,0.695,115,0.76,116,1.309,117,0.695,118,0.743,119,0.76,120,0.695,121,0.695,122,0.76,123,0.68,124,0.76,125,0.695,126,0.621,127,0.76,128,0.68,129,0.76,130,0.695,131,0.711,132,0.68,133,0.727,134,0.76,135,0.695,136,0.711,137,0.76,138,0.695,139,0.76,140,0.68,141,0.76,142,0.695,143,0.76,144,0.68,145,0.76,146,0.68,147,0.76,148,0.695,149,0.76,150,0.695,151,0.76,152,0.76,153,0.695,154,0.76,155,0.665,156,0.665,157,0.76,158,0.68,159,0.76,160,0.68,161,0.743,162,0.743,163,0.76,164,0.68,165,0.76,166,0.68,167,0.635,168,0.743,169,0.76,170,0.003,171,0.005,172,0.003,173,0.907,178,1.238,181,0.55,182,1.494,191,0.715,192,0.535,197,1.139,223,1.224,251,2.01,271,2.092,287,2.719,338,0.97,359,1.425,360,1.597,364,1.829,390,5.502,399,1.872,414,1.788,433,2.538,435,3.503,451,2.538,452,1.692,459,2.907,491,1.746,505,2.702,570,2.702,574,3.702,579,2.538,584,2.538,593,3.007,594,0.992,969,3.182,970,4.24,971,6.197,972,5.25,973,5.479,974,7.242,975,5.25,976,5.25,977,3.6,978,5.25,979,3.6,980,4.641,981,3.6,982,5.005,983,3.6,984,3.6,985,2.907,986,2.702,987,3.182,988,3.6,989,3.182,990,2.907,991,3.6,992,3.6,993,3.6,994,3.182,995,2.323,996,3.182,997,3.182,998,1.805,999,3.6,1000,4.641,1001,3.6,1002,3.6,1003,5.25,1004,3.6,1005,2.907,1006,3.6,1007,4.641,1008,3.182,1009,3.182,1010,3.182,1011,3.182,1012,2.907]],["title/injectables/ConfigService.html",[565,1.125,1013,3.606]],["body/injectables/ConfigService.html",[3,0.117,4,0.117,8,0.079,18,0.251,19,0.901,23,1.909,24,1.004,26,0.265,27,0.009,30,0.808,32,0.223,34,0.265,36,0.117,37,0.367,170,0.006,171,0.007,172,0.006,181,0.808,208,1.628,247,2.466,323,4,360,1.649,399,2.499,401,5.834,437,5.657,468,6.683,565,1.943,566,2.917,576,3.624,583,2.602,715,4.45,836,4.305,895,5.731,1013,6.227,1014,5.657,1015,7.709,1016,6.398,1017,6.398,1018,6.398,1019,6.398,1020,6.398]],["title/injectables/CustomDateFormatter.html",[565,1.125,1021,3.352]],["body/injectables/CustomDateFormatter.html",[3,0.095,4,0.095,8,0.064,18,0.203,19,0.79,24,0.79,26,0.28,27,0.009,30,0.854,32,0.236,33,0.707,34,0.215,36,0.145,37,0.298,46,0.471,68,1.044,167,0.917,170,0.005,171,0.006,172,0.005,191,0.921,192,0.689,197,1.332,208,1.868,247,2.002,338,2.027,341,2.825,348,3.526,360,1.339,401,4.769,480,2.298,523,2.604,565,1.705,566,2.367,583,2.112,783,2.607,825,4.101,830,3.297,1021,5.077,1022,5.646,1023,4.195,1024,6.65,1025,5.979,1026,6.764,1027,6.764,1028,6.842,1029,5.193,1030,6.764,1031,5.193,1032,3.149,1033,4.591,1034,2.825,1035,5.193,1036,3.899,1037,5.979,1038,5.193,1039,4.591,1040,5.193,1041,5.463,1042,4.591,1043,5.193,1044,7.522,1045,7.522,1046,6.075,1047,6.075,1048,6.075,1049,7.522,1050,6.764,1051,6.764,1052,5.193,1053,5.193,1054,5.193,1055,5.193,1056,5.193,1057,5.193,1058,4.591]],["title/injectables/CustomNgbDateNativeUTCAdapter.html",[565,1.125,1059,3.352]],["body/injectables/CustomNgbDateNativeUTCAdapter.html",[3,0.104,4,0.104,8,0.07,18,0.223,19,0.838,24,0.838,26,0.297,27,0.009,30,0.906,32,0.273,34,0.235,36,0.104,37,0.327,46,0.499,68,1.17,167,1.004,170,0.005,171,0.007,172,0.005,191,0.976,192,0.731,197,1.297,208,1.741,247,2.193,277,3.796,348,3.173,360,1.466,480,3.474,523,2.852,565,1.808,566,2.593,583,2.313,594,1.568,783,2.764,1022,5.894,1028,7.008,1032,3.45,1046,5.792,1047,5.792,1048,5.792,1058,5.03,1059,5.383,1060,5.03,1061,6.942,1062,7.17,1063,7.17,1064,7.17,1065,5.689,1066,7.17,1067,5.689,1068,5.689,1069,4.595,1070,5.689,1071,5.689,1072,5.689,1073,5.03,1074,5.689,1075,5.689,1076,5.689,1077,5.689,1078,5.689,1079,7.17,1080,5.689,1081,5.689]],["title/components/CustomersComponent.html",[0,0.136,65,0.843]],["body/components/CustomersComponent.html",[0,0.203,1,0.789,2,1.038,3,0.075,4,0.075,5,0.658,6,0.844,7,0.863,8,0.071,10,1.326,11,2.375,12,0.721,13,1.67,14,1.867,16,1.136,18,0.16,19,0.672,20,2.577,23,0.942,24,0.843,26,0.275,27,0.009,30,0.516,31,0.985,32,0.232,33,0.556,34,0.169,36,0.075,37,0.235,40,0.755,41,1.214,42,1.161,43,0.658,44,1.524,45,0.863,46,0.53,47,0.863,48,0.789,49,1.843,50,1.038,51,1.214,52,0.789,53,0.863,54,0.789,55,0.863,56,0.755,57,0.863,58,0.789,59,0.863,60,0.789,61,0.863,62,0.863,63,0.772,64,0.863,65,1.363,66,0.863,67,0.789,68,0.516,69,1.214,70,0.772,71,0.807,72,0.789,73,0.863,74,0.789,75,0.863,76,0.755,77,1.744,78,0.755,79,0.598,80,1.214,81,0.755,82,0.863,83,0.755,84,0.613,85,1.404,86,0.755,87,0.863,88,0.789,89,0.951,90,0.721,91,0.863,92,0.755,93,0.863,94,0.755,95,0.863,96,0.755,97,1.214,98,0.755,99,0.755,100,0.844,101,0.755,102,0.863,103,0.789,104,0.844,105,0.863,106,0.755,107,0.863,108,0.755,109,0.863,110,0.789,111,0.863,112,0.789,113,0.863,114,0.789,115,0.863,116,1.404,117,0.789,118,0.844,119,0.863,120,0.789,121,0.789,122,0.863,123,0.772,124,0.863,125,0.789,126,0.705,127,0.863,128,0.772,129,0.863,130,0.789,131,0.807,132,0.772,133,0.825,134,0.863,135,0.789,136,0.807,137,0.863,138,0.789,139,0.863,140,0.772,141,0.863,142,0.789,143,0.863,144,0.772,145,0.863,146,0.772,147,0.863,148,0.789,149,0.863,150,0.789,151,0.863,152,0.863,153,0.789,154,0.863,155,0.755,156,0.755,157,0.863,158,0.772,159,0.863,160,0.772,161,0.844,162,0.844,163,0.863,164,0.772,165,0.863,166,0.772,167,0.721,168,0.844,169,0.863,170,0.004,171,0.005,172,0.004,173,1.03,178,1.356,181,0.603,191,0.556,192,0.416,271,2.374,364,2.514,465,1.534,767,2.374,769,2.982,1082,3.612,1083,6.546,1084,6.651,1085,5.748,1086,5.372,1087,4.085,1088,6.38,1089,4.085,1090,5.748,1091,4.085,1092,4.438,1093,4.085,1094,5.88,1095,4.085,1096,3.612,1097,4.085,1098,4.085,1099,4.085,1100,3.612,1101,3.3,1102,4.315]],["title/injectables/DataService.html",[565,1.125,572,3.352]],["body/injectables/DataService.html",[3,0.086,4,0.086,6,0.975,8,0.058,18,0.185,19,0.742,23,1.089,24,1.001,26,0.371,27,0.009,30,1.064,32,0.25,34,0.195,36,0.086,37,0.271,46,0.587,77,0.933,170,0.004,171,0.006,172,0.004,181,0.666,182,2.209,191,1.214,192,0.859,197,1.452,208,1.742,223,1.605,243,4.478,247,1.82,251,1.874,322,2.997,338,1.273,341,1.774,403,4.175,565,1.601,566,2.153,572,4.768,574,5.06,579,3.33,583,1.92,584,3.33,667,4.542,671,2.997,673,1.869,731,5.001,911,6.041,965,2.744,1103,4.175,1104,6.351,1105,6.351,1106,6.351,1107,6.351,1108,4.722,1109,7.176,1110,7.674,1111,6.351,1112,5.615,1113,6.351,1114,4.722,1115,4.435,1116,6.351,1117,4.722,1118,6.351,1119,4.722,1120,6.351,1121,4.722,1122,6.351,1123,4.722,1124,6.351,1125,7.674,1126,4.722,1127,6.351,1128,4.722,1129,4.175,1130,4.722,1131,4.175,1132,4.722,1133,4.722,1134,6.351,1135,4.722,1136,4.722,1137,4.722,1138,4.722,1139,4.722]],["title/components/DateFilterComponent.html",[0,0.136,67,0.863]],["body/components/DateFilterComponent.html",[0,0.191,1,0.706,2,0.959,3,0.067,4,0.067,5,0.589,6,0.755,7,0.772,8,0.065,12,0.646,13,1.662,14,1.856,16,1.049,18,0.143,19,0.62,24,0.917,26,0.315,27,0.009,30,0.92,31,1.833,32,0.218,33,0.498,34,0.151,36,0.067,37,0.21,40,0.675,41,1.121,42,1.073,43,0.589,44,1.449,45,0.772,46,0.546,47,0.772,48,0.706,49,1.809,50,0.959,51,1.121,52,0.706,53,0.772,54,0.706,55,0.772,56,0.675,57,0.772,58,0.706,59,0.772,60,0.706,61,0.772,62,0.772,63,0.691,64,0.772,65,0.691,66,0.772,67,1.326,68,1.131,69,1.121,70,0.691,71,0.722,72,0.706,73,0.772,74,0.706,75,0.772,76,0.675,77,1.713,78,0.675,79,0.536,80,1.121,81,0.675,82,0.772,83,0.675,84,0.549,85,1.32,86,0.675,87,0.772,88,0.706,89,0.523,90,0.646,91,0.772,92,0.675,93,0.772,94,0.675,95,0.772,96,0.675,97,1.121,98,0.675,99,0.675,100,0.755,101,0.675,102,0.772,103,0.706,104,0.755,105,0.772,106,0.675,107,0.772,108,0.675,109,0.772,110,0.706,111,0.772,112,0.706,113,0.772,114,0.706,115,0.772,116,1.32,117,0.706,118,0.755,119,0.772,120,0.706,121,0.706,122,0.772,123,0.691,124,0.772,125,0.706,126,0.631,127,0.772,128,0.691,129,0.772,130,0.706,131,0.722,132,0.691,133,0.739,134,0.772,135,0.706,136,0.722,137,0.772,138,0.706,139,0.772,140,0.691,141,0.772,142,0.706,143,0.772,144,0.691,145,0.772,146,0.691,147,0.772,148,0.706,149,0.772,150,0.706,151,0.772,152,0.772,153,0.706,154,0.772,155,0.675,156,0.675,157,0.772,158,0.691,159,0.772,160,0.691,161,0.755,162,0.755,163,0.772,164,0.691,165,0.772,166,0.691,167,0.937,168,0.755,169,0.772,170,0.003,171,0.005,172,0.003,173,0.922,178,1.253,181,0.557,183,4.863,184,3.986,189,3.745,191,0.934,192,0.699,202,2.125,203,2.125,206,2.578,208,0.772,251,2.244,348,1.618,375,4.289,480,1.618,523,1.833,594,1.008,769,2.755,963,3.745,964,3.745,1028,5.543,1032,2.217,1140,7.104,1141,7.104,1142,2.745,1143,5.051,1144,4.289,1145,6.862,1146,5.31,1147,5.31,1148,6.862,1149,3.657,1150,5.31,1151,6.862,1152,3.657,1153,3.657,1154,3.657,1155,5.31,1156,3.657,1157,5.31,1158,5.31,1159,3.657,1160,3.657,1161,3.657,1162,2.321,1163,6.253,1164,3.657,1165,3.657,1166,3.657,1167,5.31,1168,3.657,1169,3.657,1170,3.657,1171,3.745,1172,3.371,1173,3.986,1174,3.657,1175,3.657,1176,2.953]],["title/directives/DraggableDirective.html",[43,0.719,158,0.843]],["body/directives/DraggableDirective.html",[3,0.089,4,0.089,8,0.06,10,1.501,11,2.61,12,0.865,13,1.149,18,0.192,19,0.76,20,2.781,23,1.13,24,0.974,26,0.322,27,0.009,30,0.822,31,1.569,32,0.271,34,0.203,36,0.089,37,0.281,42,1.638,43,1.048,46,0.341,155,0.905,158,1.229,170,0.005,171,0.006,172,0.005,181,0.682,182,1.762,191,0.667,192,0.499,197,1.15,208,1.374,251,2.51,279,3.234,306,4.589,326,6.086,360,2.148,570,3.676,574,4.589,579,3.453,584,3.453,594,1.35,673,1.938,675,2.167,770,2.846,982,5.903,985,3.956,986,3.676,1036,4.885,1177,6.869,1178,4.33,1179,5.903,1180,5.753,1181,7.308,1182,5.903,1183,6.29,1184,6.507,1185,4.897,1186,4.897,1187,4.897,1188,4.897,1189,4.33,1190,4.33,1191,4.33,1192,4.897,1193,4.33,1194,4.897,1195,4.897,1196,5.753,1197,4.897,1198,4.885,1199,3.676,1200,4.33,1201,4.33,1202,5.753,1203,5.753,1204,5.753,1205,4.33,1206,5.753,1207,4.33,1208,4.33,1209,4.33,1210,5.753,1211,4.33,1212,4.33,1213,5.753,1214,4.33,1215,4.33,1216,5.753,1217,4.33,1218,5.753,1219,4.33,1220,4.33,1221,4.33,1222,4.33,1223,4.33,1224,4.33,1225,4.33,1226,5.753,1227,4.33,1228,4.33,1229,5.753,1230,5.753,1231,4.33,1232,5.753,1233,4.897,1234,4.33]],["title/components/DropdownFloatingFilterComponent.html",[0,0.136,70,0.843]],["body/components/DropdownFloatingFilterComponent.html",[0,0.188,1,0.686,2,0.939,3,0.065,4,0.065,5,0.572,6,0.733,7,0.75,8,0.064,10,1.199,12,0.627,13,1.659,14,1.844,16,1.027,18,0.139,19,0.607,24,0.908,26,0.311,27,0.009,30,0.777,31,1.737,32,0.214,33,0.837,34,0.147,36,0.095,37,0.389,40,0.656,41,1.098,42,1.05,43,0.572,44,1.429,45,0.75,46,0.524,47,0.75,48,0.686,49,1.816,50,0.939,51,1.098,52,0.686,53,0.75,54,0.686,55,0.75,56,0.656,57,0.75,58,0.686,59,0.75,60,0.686,61,0.75,62,0.75,63,0.671,64,0.75,65,0.671,66,0.75,67,0.686,68,0.449,69,1.098,70,1.279,71,1.575,72,0.686,73,0.75,74,0.686,75,0.75,76,0.656,77,1.705,78,0.656,79,0.52,80,1.098,81,0.656,82,0.75,83,0.656,84,0.533,85,1.299,86,0.656,87,0.75,88,0.686,89,0.508,90,0.627,91,0.75,92,0.656,93,0.75,94,0.656,95,0.75,96,0.656,97,1.098,98,0.656,99,0.656,100,0.733,101,0.656,102,0.75,103,0.686,104,0.733,105,0.75,106,0.656,107,0.75,108,0.656,109,0.75,110,0.686,111,0.75,112,0.686,113,0.75,114,0.686,115,0.75,116,1.299,117,0.686,118,0.733,119,0.75,120,0.686,121,0.686,122,0.75,123,0.671,124,0.75,125,0.686,126,0.613,127,0.75,128,0.671,129,0.75,130,0.686,131,0.702,132,0.671,133,0.717,134,0.75,135,0.686,136,0.702,137,0.75,138,0.686,139,0.75,140,0.671,141,0.75,142,0.686,143,0.75,144,0.671,145,0.75,146,0.671,147,0.75,148,0.686,149,0.75,150,0.686,151,0.75,152,0.75,153,0.686,154,0.75,155,0.656,156,0.656,157,0.75,158,0.671,159,0.75,160,0.671,161,0.733,162,0.733,163,0.75,164,0.671,165,0.75,166,0.671,167,0.627,168,0.733,169,0.75,170,0.003,171,0.005,172,0.003,173,0.895,178,1.226,181,0.545,182,1.815,183,4.806,184,3.902,189,3.666,191,0.837,192,0.627,197,1.184,202,3.933,203,3.021,204,2.254,206,2.504,223,1.207,251,1.815,288,2.666,338,2.028,598,0.533,769,3.511,783,1.369,1142,2.666,1143,4.967,1144,4.199,1162,2.254,1235,6.438,1236,6.438,1237,5.436,1238,5.436,1239,5.436,1240,5.08,1241,5.198,1242,5.198,1243,4.596,1244,4.596,1245,3.551,1246,5.649,1247,3.551,1248,4.596,1249,5.983,1250,3.551,1251,4.596,1252,4.596,1253,3.551,1254,3.551,1255,3.551,1256,3.551,1257,2.868,1258,4.596,1259,3.139,1260,3.139,1261,3.139,1262,3.139,1263,5.436,1264,3.139,1265,3.139,1266,3.139,1267,3.139,1268,3.139,1269,3.139,1270,3.139,1271,2.504,1272,3.139,1273,3.139,1274,3.139,1275,2.868,1276,2.868,1277,3.139,1278,4.596]],["title/interfaces/DropdownFloatingFilterParams.html",[598,0.67,1246,3.352]],["body/interfaces/DropdownFloatingFilterParams.html",[0,0.218,3,0.103,4,0.103,8,0.069,10,1.301,13,0.995,16,1.114,18,0.221,26,0.295,27,0.009,31,1.719,32,0.272,33,0.768,34,0.233,36,0.13,37,0.409,49,1.139,70,1.065,71,1.545,170,0.005,171,0.007,172,0.005,178,1.33,181,0.747,182,1.719,183,4.757,189,3.975,197,1.333,202,4.544,203,4.143,204,3.578,206,3.975,251,1.664,288,4.232,338,2.37,598,0.846,600,1.784,769,4.057,783,2.748,1142,4.232,1143,4.553,1144,4.553,1162,3.578,1235,4.553,1236,4.553,1237,6.303,1238,6.303,1239,4.984,1240,6.362,1244,4.984,1246,6.168,1248,4.984,1249,6.303,1251,4.984,1252,4.984,1257,4.553,1258,6.912,1259,4.984,1260,4.984,1261,4.984,1262,4.984,1263,6.912,1264,4.984,1265,4.984,1266,4.984,1267,4.984,1268,4.984,1269,4.984,1270,4.984,1271,3.975,1272,4.984,1273,4.984,1274,4.984,1275,4.553,1276,4.553,1277,4.984]],["title/components/ExamplesComponent.html",[0,0.136,72,0.863]],["body/components/ExamplesComponent.html",[0,0.212,1,0.851,2,1.094,3,0.08,4,0.08,5,0.71,6,0.91,7,0.931,8,0.075,10,1.398,11,2.473,12,0.778,13,1.675,14,1.878,16,1.197,18,0.173,19,0.708,20,2.663,23,1.598,24,0.708,27,0.008,30,0.557,31,1.063,32,0.153,33,0.6,34,0.182,36,0.08,37,0.253,40,0.814,41,1.28,42,1.224,43,0.71,44,1.575,45,0.931,46,0.482,47,0.931,48,0.851,49,1.857,50,1.094,51,1.28,52,0.851,53,0.931,54,0.851,55,0.931,56,0.814,57,0.931,58,0.851,59,0.931,60,0.851,61,0.931,62,0.931,63,0.832,64,0.931,65,0.832,66,0.931,67,0.851,68,0.557,69,1.28,70,0.832,71,0.871,72,1.441,73,0.931,74,0.851,75,0.931,76,0.814,77,1.764,78,0.814,79,0.646,80,1.28,81,0.814,82,0.931,83,0.814,84,0.661,85,1.462,86,0.814,87,0.931,88,0.851,89,0.63,90,0.778,91,0.931,92,0.814,93,0.931,94,0.814,95,0.931,96,0.814,97,1.28,98,0.814,99,0.814,100,0.91,101,0.814,102,0.931,103,0.851,104,0.91,105,0.931,106,0.814,107,0.931,108,0.814,109,0.931,110,0.851,111,0.931,112,0.851,113,0.931,114,0.851,115,0.931,116,1.462,117,0.851,118,0.91,119,0.931,120,0.851,121,0.851,122,0.931,123,0.832,124,0.931,125,0.851,126,0.76,127,0.931,128,0.832,129,0.931,130,0.851,131,0.871,132,0.832,133,0.89,134,0.931,135,0.851,136,0.871,137,0.931,138,0.851,139,0.931,140,0.832,141,0.931,142,0.851,143,0.931,144,0.832,145,0.931,146,0.832,147,0.931,148,0.851,149,0.931,150,0.851,151,0.931,152,0.931,153,0.851,154,0.931,155,0.814,156,0.814,157,0.931,158,0.832,159,0.931,160,0.832,161,0.91,162,0.91,163,0.931,164,0.832,165,0.931,166,0.832,167,0.778,168,0.91,169,0.931,170,0.004,171,0.006,172,0.004,173,1.111,178,1.429,1279,3.896,1280,6.059,1281,6.925,1282,6.059,1283,4.407,1284,4.407,1285,6.059,1286,5.357]],["title/modules/ExamplesModule.html",[518,2.401,1287,3.352]],["body/modules/ExamplesModule.html",[3,0.114,4,0.114,8,0.077,27,0.009,32,0.309,34,0.258,36,0.114,37,0.358,40,1.15,72,1.714,103,1.714,170,0.006,171,0.007,172,0.006,268,3.122,271,3.618,312,3.477,395,3.952,518,3.348,520,3.775,521,3.775,522,5.456,523,3.122,524,4.154,529,5.379,530,5.059,531,2.926,533,5.347,536,5.059,539,4.39,547,3.618,1287,6.894,1288,5.504,1289,5.504,1290,6.226,1291,6.226,1292,6.226,1293,6.226,1294,6.226,1295,5.029,1296,6.226,1297,5.029]],["title/interfaces/FailureAuthenticationResult.html",[598,0.67,774,2.707]],["body/interfaces/FailureAuthenticationResult.html",[3,0.059,4,0.059,8,0.04,18,0.127,19,0.379,26,0.241,27,0.009,32,0.242,34,0.134,36,0.138,37,0.186,46,0.226,50,0.586,90,1.468,126,0.56,170,0.003,171,0.004,172,0.003,181,0.509,182,1.872,197,1.249,199,0.918,208,1.891,210,2.74,218,1.884,223,1.102,247,1.25,251,2.387,266,1.626,287,2.416,322,3.085,348,1.435,360,1.669,364,2.255,377,1.966,382,2.562,458,1.884,480,2.15,503,3.889,531,1.524,565,1.225,576,3.26,583,1.318,593,1.573,594,1.912,598,0.971,600,1.026,621,2.714,632,1.884,635,1.573,667,3.477,673,1.283,675,1.435,689,1.524,694,2.828,700,1.884,702,1.744,703,1.744,710,1.966,711,2.287,712,2.287,713,4.11,714,2.287,715,3.729,719,2.287,720,2.287,721,2.164,722,2.287,724,3.873,726,3.427,727,2.164,728,4.529,729,2.287,732,2.287,734,2.287,738,2.287,740,4.32,744,2.287,746,2.287,749,2.287,751,2.287,753,2.287,755,3.7,759,2.824,760,1.884,765,2.287,766,2.058,767,2.824,768,3.427,769,1.682,770,1.884,771,3.889,772,2.058,773,2.947,774,3.534,775,2.947,776,4.27,777,2.824,778,3.762,779,2.824,780,1.435,781,1.811,782,3.889,783,1.25,784,4.11,785,2.287,786,2.058,787,2.287,788,2.287,789,2.287,790,2.164,791,3.427,792,4.402,793,2.058,794,2.287,795,2.287,796,4.11,797,2.287,798,2.287,799,2.287,800,4.627,801,2.287,802,2.287,803,3.427,804,2.287,805,2.287,806,2.287,807,2.287,808,3.427,809,2.287,810,2.287,811,2.287,812,5.395,813,3.7,814,2.164,815,2.287,816,2.287,817,2.164,818,2.287,819,2.287,820,2.287,821,3.427,822,2.287,823,3.427,824,2.287,825,1.966,826,4.565,827,4.11,828,2.287,829,3.427,830,2.058,831,2.287,832,2.287,833,1.966,834,2.287,835,2.058,836,4.74,837,4.565,838,2.287,839,3.427,840,4.11,841,5.323,842,3.427,843,2.287,844,3.427,845,2.287,846,4.11,847,2.828,848,3.427,849,3.427,850,2.287,851,3.427,852,2.287,853,3.427,854,2.287,855,2.287,856,2.287,857,2.058,858,2.287,859,3.427,860,2.287,861,2.287,862,3.427,863,3.427,864,3.427,865,2.287,866,2.287,867,2.287,868,2.287,869,2.287,870,2.287,871,2.287,872,3.427,873,2.287,874,2.287,875,4.11,876,4.11,877,2.287,878,2.287,879,2.287,880,2.287,881,2.287,882,2.287,883,2.287,884,2.287,885,2.164,886,2.287,887,2.287,888,2.287,889,3.427,890,2.164,891,2.164,892,2.287,893,2.287,894,2.287,895,2.164,896,3.427,897,2.287,898,2.287,899,2.287,900,2.287,901,2.287,902,2.287,903,2.287,904,2.287,905,2.287]],["title/interfaces/Field.html",[89,0.638,598,0.67]],["body/interfaces/Field.html",[3,0.1,4,0.1,5,0.879,8,0.086,18,0.214,26,0.289,27,0.009,32,0.243,33,0.744,34,0.226,36,0.164,46,0.38,68,0.883,79,1.024,84,1.048,89,0.999,170,0.005,171,0.006,172,0.005,181,0.732,197,1.445,199,1.586,255,2.348,287,1.903,338,2.077,341,2.052,359,2.162,360,1.408,382,2.162,399,2.453,414,2.343,452,3.284,491,2.65,492,2.348,594,1.506,598,1.326,600,1.728,780,2.417,919,2.348,995,2.417,998,2.739,1034,3.05,1115,2.937,1298,2.937,1299,3.312,1300,3.758,1301,3.05,1302,3.174,1303,3.05,1304,3.092,1305,3.05,1306,3.312,1307,3.312,1308,3.312,1309,3.312,1310,3.05,1311,3.312,1312,3.312,1313,3.312,1314,3.05,1315,3.05,1316,3.312,1317,3.312,1318,3.05,1319,2.834,1320,2.834,1321,3.284,1322,2.92,1323,3.004,1324,3.284,1325,3.39,1326,3.284,1327,3.39,1328,3.902,1329,2.834,1330,2.937,1331,2.567,1332,2.834]],["title/interfaces/Field-1.html",[89,0.532,480,1.645,598,0.558]],["body/interfaces/Field-1.html",[3,0.106,4,0.106,8,0.089,18,0.227,26,0.3,27,0.009,32,0.202,33,0.789,36,0.151,46,0.404,68,0.916,79,1.063,84,1.088,89,1.037,170,0.005,171,0.007,172,0.005,181,0.76,197,1.419,199,1.568,338,1.956,341,3.117,359,2.294,366,4.351,382,2.294,399,2.507,414,2.394,452,3.41,458,3.368,491,2.812,492,2.492,598,1.188,600,1.834,780,2.565,995,2.565,998,2.906,1034,2.975,1300,3.902,1304,2.565,1319,3.007,1320,3.007,1321,3.41,1322,3.032,1323,3.119,1324,3.41,1325,3.52,1326,3.41,1327,3.52,1329,3.007,1330,3.117,1331,2.724,1332,3.007,1333,4.087,1334,4.841,1335,4.351,1336,3.868,1337,4.841,1338,4.682,1339,5.116,1340,4.682,1341,4.682,1342,4.682,1343,4.682,1344,4.682,1345,4.682]],["title/injectables/FieldBaseComponent.html",[565,1.125,1346,2.035]],["body/injectables/FieldBaseComponent.html",[3,0.104,4,0.104,8,0.07,10,1.313,18,0.223,19,0.838,23,1.313,24,1.014,26,0.352,27,0.009,30,0.719,32,0.296,34,0.235,35,2.76,36,0.104,37,0.327,43,1.155,46,0.499,56,1.57,77,1.124,89,1.025,170,0.005,171,0.007,172,0.005,181,0.752,182,2.049,191,0.976,192,0.731,199,1.355,208,1.514,323,3.72,359,2.252,399,2.49,414,2.503,431,6.864,565,1.808,566,2.593,1346,3.269,1347,7.788,1348,7.788,1349,5.03,1350,3.875,1351,4.123,1352,3.479,1353,5.689,1354,3.455,1355,7.17,1356,3.479,1357,5.689,1358,7.17,1359,5.689,1360,5.689,1361,5.689,1362,5.689,1363,4.595,1364,5.689,1365,5.689]],["title/directives/FieldColorValidationDirective.html",[43,0.719,160,0.843]],["body/directives/FieldColorValidationDirective.html",[2,1.07,3,0.108,4,0.108,8,0.073,12,1.046,13,1.299,18,0.232,23,1.367,24,0.935,26,0.331,27,0.009,32,0.279,34,0.245,36,0.108,37,0.34,43,1.184,46,0.413,56,1.545,155,1.095,160,1.39,161,1.519,162,1.519,170,0.005,171,0.007,172,0.005,182,1.774,191,0.807,192,0.604,199,1.58,208,1.553,251,2.171,359,2.346,404,6.461,514,5.187,968,5.31,1243,6.503,1257,4.787,1366,7.395,1367,5.239,1368,7.356,1369,8.365,1370,4.851,1371,5.926,1372,8.365,1373,7.072,1374,5.926,1375,5.926,1376,5.926,1377,5.926,1378,5.926,1379,7.356,1380,5.926,1381,7.356,1382,5.926,1383,7.356,1384,6.503,1385,5.926,1386,5.926]],["title/interfaces/FieldOption.html",[598,0.67,1339,3.148]],["body/interfaces/FieldOption.html",[3,0.103,4,0.103,8,0.088,18,0.22,26,0.34,27,0.009,32,0.196,33,0.765,36,0.15,46,0.391,68,0.899,79,1.042,84,1.067,89,0.804,170,0.005,171,0.007,172,0.005,181,0.746,192,0.725,197,1.444,199,1.634,338,2.282,341,3.083,359,2.224,366,4.219,382,2.224,399,1.697,414,2.053,452,3.344,458,3.266,491,2.727,492,2.416,598,1.171,600,1.778,780,2.487,995,2.487,998,2.818,1034,3.18,1300,3.826,1304,3.632,1319,2.916,1320,2.916,1321,3.344,1322,2.974,1323,3.059,1324,3.344,1325,3.452,1326,3.344,1327,3.452,1329,2.916,1330,3.022,1331,2.642,1332,4.258,1333,3.963,1334,4.748,1335,4.219,1336,3.75,1337,4.748,1338,4.539,1339,5.506,1340,4.539,1341,4.539,1342,4.539,1343,4.539,1344,4.539,1345,4.539]],["title/components/FooterComponent.html",[0,0.136,74,0.863]],["body/components/FooterComponent.html",[0,0.212,1,0.857,2,1.1,3,0.081,4,0.081,5,0.715,6,0.917,7,0.937,8,0.075,12,0.784,13,1.675,14,1.879,16,1.203,27,0.008,32,0.155,33,0.604,34,0.184,36,0.081,37,0.255,40,0.82,41,1.286,42,1.23,43,0.715,44,1.58,45,0.937,46,0.484,47,0.937,48,0.857,49,1.858,50,1.1,51,1.286,52,0.857,53,0.937,54,0.857,55,0.937,56,0.82,57,0.937,58,0.857,59,0.937,60,0.857,61,0.937,62,0.937,63,0.838,64,0.937,65,0.838,66,0.937,67,0.857,68,0.561,69,1.286,70,0.838,71,0.877,72,0.857,73,0.937,74,1.445,75,0.937,76,0.82,77,1.766,78,0.82,79,0.65,80,1.286,81,0.82,82,0.937,83,0.82,84,0.666,85,1.468,86,0.82,87,0.937,88,0.857,89,0.635,90,0.784,91,0.937,92,0.82,93,0.937,94,0.82,95,0.937,96,0.82,97,1.286,98,0.82,99,0.82,100,0.917,101,0.82,102,0.937,103,0.857,104,0.917,105,0.937,106,0.82,107,0.937,108,0.82,109,0.937,110,0.857,111,0.937,112,0.857,113,0.937,114,0.857,115,0.937,116,1.468,117,0.857,118,0.917,119,0.937,120,0.857,121,0.857,122,0.937,123,0.838,124,0.937,125,0.857,126,0.766,127,0.937,128,0.838,129,0.937,130,0.857,131,0.877,132,0.838,133,0.897,134,0.937,135,0.857,136,0.877,137,0.937,138,0.857,139,0.937,140,0.838,141,0.937,142,0.857,143,0.937,144,0.838,145,0.937,146,0.838,147,0.937,148,0.857,149,0.937,150,0.857,151,0.937,152,0.937,153,0.857,154,0.937,155,0.82,156,0.82,157,0.937,158,0.838,159,0.937,160,0.838,161,0.917,162,0.917,163,0.937,164,0.838,165,0.937,166,0.838,167,0.784,168,0.917,169,0.937,170,0.004,171,0.006,172,0.004,173,1.119,178,1.436,279,1.964,307,4.918,1387,3.924,1388,5.614,1389,6.951,1390,6.089,1391,4.438,1392,6.089,1393,4.918,1394,4.571,1395,3.585,1396,2.478,1397,3.13,1398,4.063,1399,4.438]],["title/interfaces/ForgotPassword.html",[598,0.67,1400,3.352]],["body/interfaces/ForgotPassword.html",[3,0.125,4,0.125,8,0.085,18,0.269,26,0.284,27,0.008,36,0.147,170,0.006,171,0.007,172,0.006,181,0.843,197,1.441,598,1.207,600,2.175,1322,3.675,1400,6.039,1401,5.553,1402,5.161,1403,6.078,1404,5.161,1405,6.078,1406,6.078]],["title/components/FormButtonComponent.html",[0,0.136,76,0.825]],["body/components/FormButtonComponent.html",[0,0.205,1,0.803,2,1.051,3,0.076,4,0.076,5,0.67,6,0.859,7,0.878,8,0.072,12,0.734,13,1.671,14,1.875,16,1.15,18,0.163,19,0.68,24,0.85,26,0.301,27,0.008,30,0.525,32,0.203,33,0.566,34,0.172,36,0.076,37,0.239,40,0.768,41,1.229,42,1.176,43,0.67,44,1.536,45,0.878,46,0.506,47,0.878,48,0.803,49,1.836,50,1.051,51,1.229,52,0.803,53,0.878,54,0.803,55,0.878,56,1.075,57,0.878,58,0.803,59,0.878,60,0.803,61,0.878,62,0.878,63,0.786,64,0.878,65,0.786,66,0.878,67,0.803,68,0.525,69,1.229,70,0.786,71,0.822,72,0.803,73,0.878,74,0.803,75,0.878,76,1.344,77,1.801,78,0.768,79,0.984,80,1.229,81,0.768,82,0.878,83,0.768,84,0.624,85,1.418,86,0.768,87,0.878,88,0.803,89,0.832,90,0.734,91,0.878,92,0.768,93,0.878,94,0.768,95,0.878,96,0.768,97,1.229,98,0.768,99,0.768,100,0.859,101,0.768,102,0.878,103,0.803,104,0.859,105,0.878,106,0.768,107,0.878,108,0.768,109,0.878,110,0.803,111,0.878,112,0.803,113,0.878,114,0.803,115,0.878,116,1.418,117,0.803,118,0.859,119,0.878,120,0.803,121,0.803,122,0.878,123,0.786,124,0.878,125,0.803,126,0.718,127,0.878,128,0.786,129,0.878,130,0.803,131,0.822,132,0.786,133,0.84,134,0.878,135,0.803,136,0.822,137,0.878,138,0.803,139,0.878,140,0.786,141,0.878,142,0.803,143,0.878,144,0.786,145,0.878,146,0.786,147,0.878,148,0.803,149,0.878,150,0.803,151,0.878,152,0.878,153,0.803,154,0.878,155,0.768,156,0.768,157,0.878,158,0.786,159,0.878,160,0.786,161,0.859,162,0.859,163,0.878,164,0.786,165,0.878,166,0.786,167,0.734,168,0.859,169,0.878,170,0.004,171,0.005,172,0.004,173,1.048,176,3.359,178,1.373,179,5.937,180,5.146,181,0.61,182,1.754,191,0.566,192,0.424,199,0.786,308,1.84,399,2.028,414,1.937,783,2.244,1346,3.713,1350,2.736,1351,2.824,1352,2.824,1354,1.691,1356,2.018,1407,3.677,1408,3.647,1409,2.085,1410,2.085,1411,2.918,1412,2.085,1413,2.918]],["title/components/FormButtonGroupComponent.html",[0,0.136,78,0.825]],["body/components/FormButtonGroupComponent.html",[0,0.201,1,0.77,2,1.02,3,0.073,4,0.073,5,0.641,6,0.823,7,0.841,8,0.07,12,0.703,13,1.668,14,1.869,16,1.116,18,0.156,19,0.66,24,0.88,26,0.312,27,0.009,30,0.713,31,0.961,32,0.197,33,0.542,34,0.165,36,0.073,37,0.229,40,0.736,41,1.193,42,1.141,43,0.641,44,1.507,45,0.841,46,0.525,47,0.841,48,0.77,49,1.827,50,1.02,51,1.193,52,0.77,53,0.841,54,0.77,55,0.841,56,1.043,57,0.841,58,0.77,59,0.841,60,0.77,61,0.841,62,0.841,63,0.753,64,0.841,65,0.753,66,0.841,67,0.77,68,0.503,69,1.193,70,0.753,71,0.787,72,0.77,73,0.841,74,0.77,75,0.841,76,0.736,77,1.774,78,1.318,79,1.225,80,1.193,81,0.736,82,0.841,83,0.736,84,0.598,85,1.385,86,0.736,87,0.841,88,0.77,89,0.807,90,0.703,91,0.841,92,0.736,93,0.841,94,0.736,95,0.841,96,0.736,97,1.193,98,0.736,99,0.736,100,0.823,101,0.736,102,0.841,103,0.77,104,0.823,105,0.841,106,0.736,107,0.841,108,0.736,109,0.841,110,0.77,111,0.841,112,0.77,113,0.841,114,0.77,115,0.841,116,1.385,117,0.77,118,0.823,119,0.841,120,0.77,121,0.77,122,0.841,123,0.753,124,0.841,125,0.77,126,0.687,127,0.841,128,0.753,129,0.841,130,0.77,131,0.787,132,0.753,133,0.805,134,0.841,135,0.77,136,0.787,137,0.841,138,0.77,139,0.841,140,0.753,141,0.841,142,0.77,143,0.841,144,0.753,145,0.841,146,0.753,147,0.841,148,0.77,149,0.841,150,0.77,151,0.841,152,0.841,153,0.77,154,0.841,155,0.736,156,0.736,157,0.841,158,0.753,159,0.841,160,0.753,161,0.823,162,0.823,163,0.841,164,0.753,165,0.841,166,0.753,167,0.703,168,0.823,169,0.841,170,0.004,171,0.005,172,0.004,181,0.592,182,1.721,191,0.769,192,0.575,194,4.148,199,0.753,225,4.561,308,2.499,399,1.981,414,1.892,486,3.585,783,2.177,1346,3.668,1350,2.654,1351,2.74,1352,2.74,1354,1.62,1356,1.933,1408,3.578,1409,1.997,1410,1.997,1411,2.831,1412,1.997,1413,2.831,1414,4.561,1415,3.218,1416,4.992,1417,6.31,1418,5.647,1419,3.984,1420,3.984,1421,3.984,1422,3.984,1423,5.647]],["title/components/FormCheckboxComponent.html",[0,0.136,81,0.825]],["body/components/FormCheckboxComponent.html",[0,0.203,1,0.789,2,1.038,3,0.075,4,0.075,5,0.658,6,0.844,7,0.863,8,0.071,12,0.721,13,1.67,14,1.873,16,1.136,18,0.16,19,0.672,24,0.843,26,0.299,27,0.009,30,0.516,32,0.2,33,0.556,34,0.169,36,0.075,37,0.235,40,0.755,41,1.214,42,1.161,43,0.658,44,1.524,45,0.863,46,0.503,47,0.863,48,0.789,49,1.833,50,1.038,51,1.214,52,0.789,53,0.863,54,0.789,55,0.863,56,1.062,57,0.863,58,0.789,59,0.863,60,0.789,61,0.863,62,0.863,63,0.772,64,0.863,65,0.772,66,0.863,67,0.789,68,0.516,69,1.214,70,0.772,71,0.807,72,0.789,73,0.863,74,0.789,75,0.863,76,0.755,77,1.803,78,0.755,79,0.598,80,1.214,81,1.333,82,0.863,83,0.755,84,0.998,85,1.404,86,0.755,87,0.863,88,0.789,89,0.822,90,0.721,91,0.863,92,0.755,93,0.863,94,0.755,95,0.863,96,0.755,97,1.214,98,0.755,99,0.755,100,0.844,101,0.755,102,0.863,103,0.789,104,0.844,105,0.863,106,0.755,107,0.863,108,0.755,109,0.863,110,0.789,111,0.863,112,0.789,113,0.863,114,0.789,115,0.863,116,1.404,117,0.789,118,0.844,119,0.863,120,0.789,121,0.789,122,0.863,123,0.772,124,0.863,125,0.789,126,0.705,127,0.863,128,0.772,129,0.863,130,0.789,131,0.807,132,0.772,133,0.825,134,0.863,135,0.789,136,0.807,137,0.863,138,0.789,139,0.863,140,0.772,141,0.863,142,0.789,143,0.863,144,0.772,145,0.863,146,0.772,147,0.863,148,0.789,149,0.863,150,0.789,151,0.863,152,0.863,153,0.789,154,0.863,155,0.755,156,0.755,157,0.863,158,0.772,159,0.863,160,0.772,161,0.844,162,0.844,163,0.863,164,0.772,165,0.863,166,0.772,167,0.721,168,0.844,169,0.863,170,0.004,171,0.005,172,0.004,173,1.03,178,1.356,181,0.603,182,1.74,191,0.556,192,0.416,199,0.772,280,2.593,308,1.808,399,2.009,414,1.919,514,2.881,783,2.216,967,5.082,968,3.649,995,2.544,1346,3.695,1350,2.702,1351,2.789,1352,2.789,1354,1.661,1356,1.982,1408,3.619,1409,2.048,1410,2.048,1411,2.882,1412,2.048,1413,2.882,1424,3.612,1425,3.612,1426,6.651,1427,5.748,1428,3.835,1429,3.612]],["title/components/FormCheckboxListComponent.html",[0,0.136,83,0.825]],["body/components/FormCheckboxListComponent.html",[0,0.2,1,0.769,2,1.019,3,0.073,4,0.073,5,0.641,6,0.822,7,0.84,8,0.07,12,0.703,13,1.668,14,1.869,16,1.115,18,0.156,19,0.659,24,0.88,26,0.295,27,0.009,30,0.503,32,0.197,33,0.542,34,0.165,36,0.073,37,0.229,40,0.735,41,1.192,42,1.14,43,0.641,44,1.506,45,0.84,46,0.497,47,0.84,48,0.769,49,1.827,50,1.019,51,1.192,52,0.769,53,0.84,54,0.769,55,0.84,56,1.042,57,0.84,58,0.769,59,0.84,60,0.769,61,0.84,62,0.84,63,0.752,64,0.84,65,0.752,66,0.84,67,0.769,68,0.503,69,1.192,70,0.752,71,0.786,72,0.769,73,0.84,74,0.769,75,0.84,76,0.735,77,1.793,78,0.735,79,0.583,80,1.192,81,0.735,82,0.84,83,1.318,84,1.299,85,1.385,86,0.735,87,0.84,88,0.769,89,0.807,90,0.703,91,0.84,92,0.735,93,0.84,94,0.735,95,0.84,96,0.735,97,1.192,98,0.735,99,0.735,100,0.822,101,0.735,102,0.84,103,0.769,104,0.822,105,0.84,106,0.735,107,0.84,108,0.735,109,0.84,110,0.769,111,0.84,112,0.769,113,0.84,114,0.769,115,0.84,116,1.385,117,0.769,118,0.822,119,0.84,120,0.769,121,0.769,122,0.84,123,0.752,124,0.84,125,0.769,126,0.687,127,0.84,128,0.752,129,0.84,130,0.769,131,0.786,132,0.752,133,0.804,134,0.84,135,0.769,136,0.786,137,0.84,138,0.769,139,0.84,140,0.752,141,0.84,142,0.769,143,0.84,144,0.752,145,0.84,146,0.752,147,0.84,148,0.769,149,0.84,150,0.769,151,0.84,152,0.84,153,0.769,154,0.84,155,0.735,156,0.735,157,0.84,158,0.752,159,0.84,160,0.752,161,0.822,162,1.354,163,0.84,164,0.752,165,0.84,166,0.752,167,0.703,168,0.822,169,0.84,170,0.004,171,0.005,172,0.004,173,1.003,178,1.331,181,0.591,182,1.72,191,0.542,192,0.406,199,0.752,208,0.84,308,2.497,323,2.928,399,1.98,402,5.796,414,1.891,440,3.518,783,2.175,1346,3.667,1350,2.652,1351,2.738,1352,2.738,1354,1.618,1356,1.931,1370,2.413,1408,3.577,1409,1.995,1410,1.995,1411,2.829,1412,1.995,1413,2.829,1430,4.558,1431,3.214,1432,5.796,1433,4.558,1434,3.979,1435,3.979,1436,5.643,1437,2.806,1438,2.655,1439,2.413]],["title/components/FormDateComponent.html",[0,0.136,86,0.825]],["body/components/FormDateComponent.html",[0,0.203,1,0.79,2,1.039,3,0.075,4,0.075,5,0.658,6,0.845,7,0.864,8,0.071,12,0.722,13,1.67,14,1.873,16,1.136,18,0.16,19,0.672,24,0.844,26,0.299,27,0.009,30,0.517,32,0.2,33,0.783,34,0.169,36,0.075,37,0.235,40,0.755,41,1.215,42,1.162,43,0.658,44,1.525,45,0.864,46,0.503,47,0.864,48,0.79,49,1.833,50,1.039,51,1.215,52,0.79,53,0.864,54,0.79,55,0.864,56,1.063,57,0.864,58,0.79,59,0.864,60,0.79,61,0.864,62,0.864,63,0.773,64,0.864,65,0.773,66,0.864,67,0.79,68,0.84,69,1.215,70,0.773,71,0.808,72,0.79,73,0.864,74,0.79,75,0.864,76,0.755,77,1.798,78,0.755,79,0.599,80,1.215,81,0.755,82,0.864,83,0.755,84,0.614,85,1.405,86,1.334,87,0.864,88,0.79,89,0.823,90,0.722,91,0.864,92,0.755,93,0.864,94,0.755,95,0.864,96,0.755,97,1.215,98,0.755,99,0.755,100,0.845,101,0.755,102,0.864,103,0.79,104,0.845,105,0.864,106,0.755,107,0.864,108,0.755,109,0.864,110,0.79,111,0.864,112,0.79,113,0.864,114,0.79,115,0.864,116,1.405,117,0.79,118,0.845,119,0.864,120,0.79,121,0.79,122,0.864,123,0.773,124,0.864,125,0.79,126,0.706,127,0.864,128,0.773,129,0.864,130,0.79,131,0.808,132,0.773,133,0.826,134,0.864,135,0.79,136,0.808,137,0.864,138,0.79,139,0.864,140,0.773,141,0.864,142,0.79,143,0.864,144,0.773,145,0.864,146,0.773,147,0.864,148,0.79,149,0.864,150,0.79,151,0.864,152,0.864,153,0.79,154,0.864,155,0.755,156,0.755,157,0.864,158,0.773,159,0.864,160,0.773,161,0.845,162,0.845,163,0.864,164,0.773,165,0.864,166,0.773,167,0.722,168,0.845,169,0.864,170,0.004,171,0.005,172,0.004,173,1.031,178,1.357,181,0.603,182,1.741,191,0.557,192,0.417,199,0.773,308,1.81,399,2.01,414,1.92,486,2.596,783,2.217,963,2.884,964,2.884,1346,3.696,1350,2.704,1351,2.791,1352,2.791,1354,1.663,1356,1.984,1370,2.48,1408,3.62,1409,2.05,1410,2.05,1411,2.884,1412,2.05,1413,2.884,1437,2.884,1438,2.729,1439,2.48,1440,3.616,1441,3.616,1442,6.655,1443,5.753,1444,4.09]],["title/directives/FormFieldDirective.html",[43,0.719,164,0.843]],["body/directives/FormFieldDirective.html",[0,0.242,2,1.21,3,0.093,4,0.093,8,0.083,10,1.546,11,2.668,12,0.904,13,1.183,18,0.201,19,0.783,20,2.83,21,3.36,23,1.546,24,0.961,26,0.356,27,0.009,30,0.846,31,1.616,32,0.26,33,1.017,34,0.212,35,2.485,36,0.093,37,0.294,43,1.079,46,0.357,68,0.647,76,1.238,78,1.238,79,0.75,81,1.238,83,1.238,84,0.768,86,1.238,89,1.068,90,0.904,92,1.238,94,1.238,96,1.519,98,1.238,99,1.238,101,1.238,106,1.238,108,1.238,155,0.946,164,1.266,170,0.005,171,0.006,172,0.005,181,0.703,191,0.697,192,0.522,197,0.806,251,1.978,288,3.845,360,1.926,384,6.034,393,6.402,399,2.256,414,2.155,505,5.031,594,1.412,847,2.485,885,3.417,1034,1.924,1321,2.407,1322,2.14,1323,2.202,1324,2.407,1325,2.485,1326,2.407,1327,2.485,1334,3.417,1336,3.417,1337,3.417,1445,6.816,1446,4.137,1447,6.702,1448,5.121,1449,7.925,1450,7.471,1451,7.925,1452,6.702,1453,6.702,1454,5.121,1455,5.121,1456,5.121,1457,7.471,1458,6.702,1459,6.702,1460,6.702,1461,6.702,1462,5.121,1463,5.121,1464,5.121,1465,5.121,1466,5.121,1467,5.121,1468,5.121]],["title/components/FormFieldErrorComponent.html",[0,0.136,88,0.863]],["body/components/FormFieldErrorComponent.html",[0,0.187,1,0.678,2,0.93,3,0.064,4,0.064,5,0.565,6,0.724,7,0.741,8,0.063,10,1.188,11,2.18,12,0.619,13,1.658,14,1.85,16,1.018,18,0.137,19,0.602,20,2.402,21,2.583,23,0.809,24,0.875,26,0.278,27,0.009,30,0.771,31,0.846,32,0.234,33,0.831,34,0.145,35,1.702,36,0.064,37,0.201,40,0.648,41,1.088,42,1.041,43,0.565,44,1.421,45,0.741,46,0.522,47,0.741,48,0.678,49,1.8,50,0.93,51,1.088,52,0.678,53,0.741,54,0.678,55,0.741,56,1.384,57,0.741,58,0.678,59,0.741,60,0.678,61,0.741,62,0.741,63,0.663,64,0.741,65,0.663,66,0.741,67,0.678,68,0.771,69,1.088,70,0.663,71,0.693,72,0.678,73,0.741,74,0.678,75,0.741,76,0.648,77,1.773,78,0.648,79,0.514,80,1.088,81,0.648,82,0.741,83,0.648,84,0.526,85,1.289,86,0.648,87,0.741,88,1.3,89,1.288,90,1.078,91,0.741,92,0.648,93,0.741,94,0.648,95,0.741,96,0.648,97,1.088,98,0.648,99,0.648,100,0.724,101,0.648,102,0.741,103,0.678,104,0.724,105,0.741,106,0.648,107,0.741,108,0.648,109,0.741,110,0.678,111,0.741,112,0.678,113,0.741,114,0.678,115,0.741,116,1.289,117,0.678,118,0.724,119,0.741,120,0.678,121,0.678,122,0.741,123,0.663,124,0.741,125,0.678,126,0.605,127,0.741,128,0.663,129,0.741,130,0.678,131,0.693,132,0.663,133,0.709,134,0.741,135,0.678,136,0.693,137,0.741,138,0.678,139,0.741,140,0.663,141,0.741,142,0.678,143,0.741,144,0.663,145,0.741,146,0.663,147,0.741,148,0.678,149,0.741,150,0.678,151,0.741,152,0.741,153,0.678,154,0.741,155,0.648,156,0.648,157,0.741,158,0.663,159,0.741,160,0.663,161,0.724,162,0.724,163,0.741,164,0.663,165,0.741,166,0.663,167,0.619,168,0.724,169,0.741,170,0.003,171,0.005,172,0.003,173,0.884,178,1.215,181,0.54,182,1.472,191,0.701,192,0.525,197,1.127,208,1.289,251,1.802,279,1.552,308,3.426,359,1.388,360,1.574,399,1.059,414,1.761,492,1.508,514,3.632,1034,2.293,1275,2.833,1315,1.959,1322,2.153,1363,2.833,1370,4.915,1373,5.948,1384,3.101,1469,6.846,1470,3.101,1471,5.151,1472,6.105,1473,5.151,1474,7.492,1475,5.151,1476,5.397,1477,3.507,1478,5.151,1479,3.507,1480,5.151,1481,3.507,1482,3.507,1483,3.507,1484,4.554,1485,3.507,1486,3.507,1487,3.507,1488,3.507,1489,3.507,1490,3.507,1491,6.336,1492,3.507,1493,3.507,1494,5.151,1495,3.507,1496,3.507,1497,3.507,1498,4.161,1499,5.151,1500,3.101,1501,3.507,1502,3.101,1503,3.507,1504,3.101,1505,3.507,1506,3.101,1507,3.101,1508,3.101,1509,4.161,1510,3.507,1511,3.101,1512,2.833,1513,3.507,1514,3.507,1515,3.507]],["title/components/FormFileComponent.html",[0,0.136,92,0.825]],["body/components/FormFileComponent.html",[0,0.205,1,0.802,2,1.049,3,0.076,4,0.076,5,0.668,6,0.857,7,0.876,8,0.09,12,0.732,13,1.671,14,1.875,16,1.148,18,0.163,19,0.679,24,0.849,26,0.301,27,0.009,30,0.524,32,0.202,33,0.565,34,0.172,36,0.076,37,0.238,40,0.766,41,1.227,42,1.174,43,0.668,44,1.535,45,0.876,46,0.506,47,0.876,48,0.802,49,1.836,50,1.049,51,1.227,52,0.802,53,0.876,54,0.802,55,0.876,56,1.073,57,0.876,58,0.802,59,0.876,60,0.802,61,0.876,62,0.876,63,0.784,64,0.876,65,0.784,66,0.876,67,0.802,68,0.524,69,1.227,70,0.784,71,0.82,72,0.802,73,0.876,74,0.802,75,0.876,76,0.766,77,1.801,78,0.766,79,0.608,80,1.227,81,0.766,82,0.876,83,0.766,84,0.623,85,1.416,86,0.766,87,0.876,88,0.802,89,0.831,90,0.732,91,0.876,92,1.342,93,0.876,94,0.766,95,0.876,96,0.766,97,1.227,98,0.766,99,0.766,100,0.857,101,0.766,102,0.876,103,0.802,104,0.857,105,0.876,106,0.766,107,0.876,108,0.766,109,0.876,110,0.802,111,0.876,112,0.802,113,0.876,114,0.802,115,0.876,116,1.416,117,0.802,118,0.857,119,0.876,120,0.802,121,0.802,122,0.876,123,0.784,124,0.876,125,0.802,126,0.716,127,0.876,128,0.784,129,0.876,130,0.802,131,0.82,132,0.784,133,0.838,134,0.876,135,0.802,136,0.82,137,0.876,138,0.802,139,0.876,140,0.784,141,0.876,142,0.802,143,0.876,144,0.784,145,0.876,146,0.784,147,0.876,148,0.802,149,0.876,150,0.802,151,0.876,152,0.876,153,0.802,154,0.876,155,0.766,156,0.766,157,0.876,158,0.784,159,0.876,160,0.784,161,0.857,162,0.857,163,0.876,164,0.784,165,0.876,166,0.784,167,0.732,168,0.857,169,0.876,170,0.004,171,0.005,172,0.004,173,1.046,178,1.371,181,0.609,182,1.752,191,0.565,192,0.423,199,0.784,308,1.836,399,2.026,414,1.935,783,2.24,1346,3.711,1350,2.732,1351,2.82,1352,2.82,1354,1.687,1356,2.013,1408,3.644,1409,2.08,1410,2.08,1411,2.914,1412,2.08,1413,2.914,1516,3.668,1517,3.668,1518,6.707,1519,5.811]],["title/components/FormFilePathComponent.html",[0,0.136,94,0.825]],["body/components/FormFilePathComponent.html",[0,0.204,1,0.794,2,1.042,3,0.075,4,0.075,5,0.661,6,0.848,7,0.867,8,0.106,12,0.725,13,1.67,14,1.874,16,1.14,18,0.161,19,0.674,24,0.845,26,0.299,27,0.008,30,0.519,32,0.201,33,0.559,34,0.17,36,0.075,37,0.236,40,0.759,41,1.219,42,1.166,43,0.661,44,1.528,45,0.867,46,0.504,47,0.867,48,0.794,49,1.834,50,1.042,51,1.219,52,0.794,53,0.867,54,0.794,55,0.867,56,1.066,57,0.867,58,0.794,59,0.867,60,0.794,61,0.867,62,0.867,63,0.776,64,0.867,65,0.776,66,0.867,67,0.794,68,0.519,69,1.219,70,0.776,71,0.812,72,0.794,73,0.867,74,0.794,75,0.867,76,0.759,77,1.799,78,0.759,79,0.602,80,1.219,81,0.759,82,0.867,83,0.759,84,0.616,85,1.409,86,0.759,87,0.867,88,0.794,89,0.825,90,0.725,91,0.867,92,0.759,93,0.867,94,1.336,95,0.867,96,0.759,97,1.219,98,0.759,99,0.759,100,0.848,101,0.759,102,0.867,103,0.794,104,0.848,105,0.867,106,0.759,107,0.867,108,0.759,109,0.867,110,0.794,111,0.867,112,0.794,113,0.867,114,0.794,115,0.867,116,1.409,117,0.794,118,0.848,119,0.867,120,0.794,121,0.794,122,0.867,123,0.776,124,0.867,125,0.794,126,0.709,127,0.867,128,0.776,129,0.867,130,0.794,131,0.812,132,0.776,133,0.83,134,0.867,135,0.794,136,0.812,137,0.867,138,0.794,139,0.867,140,0.776,141,0.867,142,0.794,143,0.867,144,0.776,145,0.867,146,0.776,147,0.867,148,0.794,149,0.867,150,0.794,151,0.867,152,0.867,153,0.794,154,0.867,155,0.759,156,0.759,157,0.867,158,0.776,159,0.867,160,0.776,161,0.848,162,0.848,163,0.867,164,0.776,165,0.867,166,0.776,167,0.725,168,0.848,169,0.867,170,0.004,171,0.005,172,0.004,173,1.036,178,1.361,181,0.605,182,1.745,191,0.559,192,0.419,199,0.776,308,1.818,399,2.015,414,1.924,783,2.224,1346,3.7,1350,2.712,1351,2.8,1352,2.8,1354,1.67,1356,1.993,1408,3.627,1409,2.06,1410,2.06,1411,2.893,1412,2.06,1413,2.893,1520,3.632,1521,3.632,1522,4.661,1523,6.671,1524,5.771]],["title/components/FormInputComponent.html",[0,0.136,96,0.825]],["body/components/FormInputComponent.html",[0,0.205,1,0.802,2,1.049,3,0.076,4,0.076,5,0.668,6,0.857,7,0.876,8,0.072,12,0.732,13,1.671,14,1.875,16,1.148,18,0.163,19,0.679,24,0.849,26,0.301,27,0.009,30,0.524,32,0.202,33,0.913,34,0.172,36,0.076,37,0.238,40,0.766,41,1.227,42,1.174,43,0.668,44,1.535,45,0.876,46,0.506,47,0.876,48,0.802,49,1.836,50,1.049,51,1.227,52,0.802,53,0.876,54,0.802,55,0.876,56,1.073,57,0.876,58,0.802,59,0.876,60,0.802,61,0.876,62,0.876,63,0.784,64,0.876,65,0.784,66,0.876,67,0.802,68,0.524,69,1.227,70,0.784,71,0.82,72,0.802,73,0.876,74,0.802,75,0.876,76,0.766,77,1.801,78,0.766,79,0.608,80,1.227,81,0.766,82,0.876,83,0.766,84,0.623,85,1.416,86,0.766,87,0.876,88,0.802,89,0.831,90,0.732,91,0.876,92,0.766,93,0.876,94,0.766,95,0.876,96,1.342,97,1.227,98,0.766,99,0.766,100,0.857,101,0.766,102,0.876,103,0.802,104,0.857,105,0.876,106,0.766,107,0.876,108,0.766,109,0.876,110,0.802,111,0.876,112,0.802,113,0.876,114,0.802,115,0.876,116,1.416,117,0.802,118,0.857,119,0.876,120,0.802,121,0.802,122,0.876,123,0.784,124,0.876,125,0.802,126,0.716,127,0.876,128,0.784,129,0.876,130,0.802,131,0.82,132,0.784,133,0.838,134,0.876,135,0.802,136,0.82,137,0.876,138,0.802,139,0.876,140,0.784,141,0.876,142,0.802,143,0.876,144,0.784,145,0.876,146,0.784,147,0.876,148,0.802,149,0.876,150,0.802,151,0.876,152,0.876,153,0.802,154,0.876,155,0.766,156,0.766,157,0.876,158,0.784,159,0.876,160,0.784,161,0.857,162,0.857,163,0.876,164,0.784,165,0.876,166,0.784,167,0.732,168,0.857,169,0.876,170,0.004,171,0.005,172,0.004,173,1.046,178,1.371,181,0.609,182,1.752,191,0.565,192,0.423,199,0.784,308,1.836,399,2.026,414,1.935,783,2.24,1346,3.711,1350,2.732,1351,2.82,1352,2.82,1354,1.687,1356,2.013,1408,3.644,1409,2.08,1410,2.08,1411,2.914,1412,2.08,1413,2.914,1525,3.668,1526,3.351,1527,5.929,1528,5.138]],["title/components/FormInputGroupComponent.html",[0,0.136,98,0.825]],["body/components/FormInputGroupComponent.html",[0,0.202,1,0.783,2,1.032,3,0.074,4,0.074,5,0.653,6,0.837,7,0.856,8,0.07,12,0.716,13,1.669,14,1.872,16,1.129,18,0.159,19,0.668,24,0.84,26,0.298,27,0.009,30,0.512,32,0.199,33,1.159,34,0.168,36,0.074,37,0.233,40,0.749,41,1.207,42,1.155,43,0.653,44,1.519,45,0.856,46,0.501,47,0.856,48,0.783,49,1.831,50,1.032,51,1.207,52,0.783,53,0.856,54,0.783,55,0.856,56,1.056,57,0.856,58,0.783,59,0.856,60,0.783,61,0.856,62,0.856,63,0.766,64,0.856,65,0.766,66,0.856,67,0.783,68,0.512,69,1.207,70,0.766,71,0.801,72,0.783,73,0.856,74,0.783,75,0.856,76,0.749,77,1.796,78,0.749,79,0.594,80,1.207,81,0.749,82,0.856,83,0.749,84,0.608,85,1.399,86,0.749,87,0.856,88,0.783,89,0.817,90,0.716,91,0.856,92,0.749,93,0.856,94,0.749,95,0.856,96,0.749,97,1.207,98,1.329,99,0.749,100,0.837,101,0.749,102,0.856,103,0.783,104,0.837,105,0.856,106,0.749,107,0.856,108,0.749,109,0.856,110,0.783,111,0.856,112,0.783,113,0.856,114,0.783,115,0.856,116,1.399,117,0.783,118,0.837,119,0.856,120,0.783,121,0.783,122,0.856,123,0.766,124,0.856,125,0.783,126,0.699,127,0.856,128,0.766,129,0.856,130,0.783,131,0.801,132,0.766,133,0.819,134,0.856,135,0.783,136,0.801,137,0.856,138,0.783,139,0.856,140,0.766,141,0.856,142,0.783,143,0.856,144,0.766,145,0.856,146,0.766,147,0.856,148,0.783,149,0.856,150,0.783,151,0.856,152,0.856,153,0.783,154,0.856,155,0.749,156,0.749,157,0.856,158,0.766,159,0.856,160,0.766,161,0.837,162,0.837,163,0.856,164,0.766,165,0.856,166,0.766,167,0.716,168,0.837,169,0.856,170,0.004,171,0.005,172,0.004,173,1.022,178,1.348,181,0.599,182,1.734,191,0.552,192,0.413,199,0.766,308,1.794,399,2,414,1.91,486,3.629,783,2.204,1346,3.687,1350,2.687,1351,2.774,1352,2.774,1354,1.648,1356,1.967,1370,2.458,1408,3.606,1409,2.032,1410,2.032,1411,2.866,1412,2.032,1413,2.866,1414,3.274,1415,3.274,1416,5.054,1437,2.858,1438,2.705,1439,2.458,1529,6.623,1530,5.717]],["title/components/FormRadioListComponent.html",[0,0.136,99,0.825]],["body/components/FormRadioListComponent.html",[0,0.202,1,0.783,2,1.032,3,0.074,4,0.074,5,0.653,6,0.837,7,0.856,8,0.07,12,0.716,13,1.669,14,1.872,16,1.129,18,0.159,19,0.668,24,0.84,26,0.298,27,0.009,30,0.512,32,0.199,33,0.552,34,0.168,36,0.074,37,0.233,40,0.749,41,1.207,42,1.155,43,0.653,44,1.519,45,0.856,46,0.501,47,0.856,48,0.783,49,1.831,50,1.032,51,1.207,52,0.783,53,0.856,54,0.783,55,0.856,56,1.056,57,0.856,58,0.783,59,0.856,60,0.783,61,0.856,62,0.856,63,0.766,64,0.856,65,0.766,66,0.856,67,0.783,68,0.512,69,1.207,70,0.766,71,0.801,72,0.783,73,0.856,74,0.783,75,0.856,76,0.749,77,1.796,78,0.749,79,0.594,80,1.207,81,0.749,82,0.856,83,0.749,84,0.608,85,1.399,86,0.749,87,0.856,88,0.783,89,0.817,90,0.716,91,0.856,92,0.749,93,0.856,94,0.749,95,0.856,96,0.749,97,1.207,98,0.749,99,1.329,100,1.758,101,0.749,102,0.856,103,0.783,104,0.837,105,0.856,106,0.749,107,0.856,108,0.749,109,0.856,110,0.783,111,0.856,112,0.783,113,0.856,114,0.783,115,0.856,116,1.399,117,0.783,118,0.837,119,0.856,120,0.783,121,0.783,122,0.856,123,0.766,124,0.856,125,0.783,126,0.699,127,0.856,128,0.766,129,0.856,130,0.783,131,0.801,132,0.766,133,0.819,134,0.856,135,0.783,136,0.801,137,0.856,138,0.783,139,0.856,140,0.766,141,0.856,142,0.783,143,0.856,144,0.766,145,0.856,146,0.766,147,0.856,148,0.783,149,0.856,150,0.783,151,0.856,152,0.856,153,0.783,154,0.856,155,0.749,156,0.749,157,0.856,158,0.766,159,0.856,160,0.766,161,0.837,162,1.368,163,0.856,164,0.766,165,0.856,166,0.766,167,0.716,168,0.837,169,0.856,170,0.004,171,0.005,172,0.004,173,1.022,178,1.348,181,0.599,182,1.734,191,0.552,192,0.413,199,0.766,308,1.794,399,2,414,1.91,783,2.204,1346,3.687,1350,2.687,1351,2.774,1352,2.774,1354,1.648,1356,1.967,1370,2.458,1408,3.606,1409,2.032,1410,2.032,1411,2.866,1412,2.032,1413,2.866,1430,3.274,1431,3.274,1432,5.855,1433,4.618,1437,2.858,1438,2.705,1439,2.458,1531,5.717]],["title/components/FormSelectComponent.html",[0,0.136,101,0.825]],["body/components/FormSelectComponent.html",[0,0.2,1,0.766,2,1.017,3,0.072,4,0.072,5,0.639,6,0.819,7,0.838,8,0.069,12,0.7,13,1.668,14,1.869,16,1.112,18,0.155,19,0.658,24,0.879,26,0.295,27,0.009,30,0.711,31,0.957,32,0.196,33,0.54,34,0.164,36,0.072,37,0.228,40,0.733,41,1.189,42,1.137,43,0.639,44,1.504,45,0.838,46,0.524,47,0.838,48,0.766,49,1.827,50,1.017,51,1.189,52,0.766,53,0.838,54,0.766,55,0.838,56,1.04,57,0.838,58,0.766,59,0.838,60,0.766,61,0.838,62,0.838,63,0.749,64,0.838,65,0.749,66,0.838,67,0.766,68,0.501,69,1.189,70,0.749,71,0.784,72,0.766,73,0.838,74,0.766,75,0.838,76,0.733,77,1.792,78,0.733,79,0.581,80,1.189,81,0.733,82,0.838,83,0.733,84,0.595,85,1.382,86,0.733,87,0.838,88,0.766,89,0.805,90,0.7,91,0.838,92,0.733,93,0.838,94,0.733,95,0.838,96,0.733,97,1.189,98,0.733,99,0.733,100,0.819,101,1.316,102,0.838,103,0.766,104,0.819,105,0.838,106,0.733,107,0.838,108,0.733,109,0.838,110,0.766,111,0.838,112,0.766,113,0.838,114,0.766,115,0.838,116,1.382,117,0.766,118,0.819,119,0.838,120,0.766,121,0.766,122,0.838,123,0.749,124,0.838,125,0.766,126,0.684,127,0.838,128,0.749,129,0.838,130,0.766,131,0.784,132,0.749,133,0.801,134,0.838,135,0.766,136,0.784,137,0.838,138,0.766,139,0.838,140,0.749,141,0.838,142,0.766,143,0.838,144,0.749,145,0.838,146,0.749,147,0.838,148,0.766,149,0.838,150,0.766,151,0.838,152,0.838,153,0.766,154,0.838,155,0.733,156,0.733,157,0.838,158,0.749,159,0.838,160,0.749,161,0.819,162,0.819,163,0.838,164,0.749,165,0.838,166,0.749,167,0.7,168,0.819,169,0.838,170,0.004,171,0.005,172,0.004,173,1,178,1.328,181,0.59,182,1.718,191,0.767,192,0.574,194,2.305,199,0.749,308,2.491,399,1.977,414,1.888,783,2.17,1278,4.977,1326,3.348,1346,3.664,1350,2.646,1351,2.731,1352,2.731,1354,1.613,1356,1.925,1408,3.572,1409,1.989,1410,1.989,1411,2.823,1412,1.989,1413,2.823,1532,4.977,1533,3.507,1534,6.545,1535,5.63,1536,4.977,1537,5.63,1538,3.967,1539,3.967,1540,3.967,1541,5.63,1542,4.977]],["title/components/FormTextareaComponent.html",[0,0.136,106,0.825]],["body/components/FormTextareaComponent.html",[0,0.205,1,0.802,2,1.049,3,0.076,4,0.076,5,0.668,6,0.857,7,0.876,8,0.072,12,0.732,13,1.671,14,1.875,16,1.148,18,0.163,19,0.679,24,0.849,26,0.301,27,0.009,30,0.524,32,0.202,33,0.565,34,0.172,36,0.076,37,0.238,40,0.766,41,1.227,42,1.174,43,0.668,44,1.535,45,0.876,46,0.506,47,0.876,48,0.802,49,1.836,50,1.049,51,1.227,52,0.802,53,0.876,54,0.802,55,0.876,56,1.073,57,0.876,58,0.802,59,0.876,60,0.802,61,0.876,62,0.876,63,0.784,64,0.876,65,0.784,66,0.876,67,0.802,68,0.524,69,1.227,70,0.784,71,0.82,72,0.802,73,0.876,74,0.802,75,0.876,76,0.766,77,1.801,78,0.766,79,0.608,80,1.227,81,0.766,82,0.876,83,0.766,84,0.623,85,1.416,86,0.766,87,0.876,88,0.802,89,0.831,90,0.732,91,0.876,92,0.766,93,0.876,94,0.766,95,0.876,96,0.766,97,1.227,98,0.766,99,0.766,100,0.857,101,0.766,102,0.876,103,0.802,104,0.857,105,0.876,106,1.342,107,0.876,108,0.766,109,0.876,110,0.802,111,0.876,112,0.802,113,0.876,114,0.802,115,0.876,116,1.416,117,0.802,118,0.857,119,0.876,120,0.802,121,0.802,122,0.876,123,0.784,124,0.876,125,0.802,126,0.716,127,0.876,128,0.784,129,0.876,130,0.802,131,0.82,132,0.784,133,0.838,134,0.876,135,0.802,136,0.82,137,0.876,138,0.802,139,0.876,140,0.784,141,0.876,142,0.802,143,0.876,144,0.784,145,0.876,146,0.784,147,0.876,148,0.802,149,0.876,150,0.802,151,0.876,152,0.876,153,0.802,154,0.876,155,0.766,156,0.766,157,0.876,158,0.784,159,0.876,160,0.784,161,0.857,162,0.857,163,0.876,164,0.784,165,0.876,166,0.784,167,0.732,168,0.857,169,0.876,170,0.004,171,0.005,172,0.004,173,1.046,178,1.371,181,0.609,182,1.752,191,0.565,192,0.423,199,0.784,308,1.836,399,2.026,414,1.935,783,2.24,1324,2.732,1346,3.711,1350,2.732,1351,2.82,1352,2.82,1354,1.687,1356,2.013,1408,3.644,1409,2.08,1410,2.08,1411,2.914,1412,2.08,1413,2.914,1543,3.668,1544,3.668,1545,6.707,1546,5.811]],["title/components/FormTimeComponent.html",[0,0.136,108,0.825]],["body/components/FormTimeComponent.html",[0,0.204,1,0.796,2,1.045,3,0.075,4,0.075,5,0.664,6,0.851,7,0.87,8,0.071,12,0.728,13,1.67,14,1.874,16,1.143,18,0.161,19,0.676,24,0.847,26,0.3,27,0.009,30,0.521,32,0.201,33,0.561,34,0.171,36,0.075,37,0.237,40,0.761,41,1.221,42,1.168,43,0.664,44,1.53,45,0.87,46,0.504,47,0.87,48,0.796,49,1.834,50,1.045,51,1.221,52,0.796,53,0.87,54,0.796,55,0.87,56,1.068,57,0.87,58,0.796,59,0.87,60,0.796,61,0.87,62,0.87,63,0.779,64,0.87,65,0.779,66,0.87,67,0.796,68,0.521,69,1.221,70,0.779,71,0.814,72,0.796,73,0.87,74,0.796,75,0.87,76,0.761,77,1.799,78,0.761,79,0.604,80,1.221,81,0.761,82,0.87,83,0.761,84,0.618,85,1.411,86,0.761,87,0.87,88,0.796,89,0.827,90,0.728,91,0.87,92,0.761,93,0.87,94,0.761,95,0.87,96,0.761,97,1.221,98,0.761,99,0.761,100,0.851,101,0.761,102,0.87,103,0.796,104,0.851,105,0.87,106,0.761,107,0.87,108,1.338,109,0.87,110,0.796,111,0.87,112,0.796,113,0.87,114,0.796,115,0.87,116,1.411,117,0.796,118,0.851,119,0.87,120,0.796,121,0.796,122,0.87,123,0.779,124,0.87,125,0.796,126,0.711,127,0.87,128,0.779,129,0.87,130,0.796,131,0.814,132,0.779,133,0.833,134,0.87,135,0.796,136,0.814,137,0.87,138,0.796,139,0.87,140,0.779,141,0.87,142,0.796,143,0.87,144,0.779,145,0.87,146,0.779,147,0.87,148,0.796,149,0.87,150,0.796,151,0.87,152,0.87,153,0.796,154,0.87,155,0.761,156,0.761,157,0.87,158,0.779,159,0.87,160,0.779,161,0.851,162,0.851,163,0.87,164,0.779,165,0.87,166,0.779,167,0.728,168,0.851,169,0.87,170,0.004,171,0.005,172,0.004,173,1.039,178,1.364,181,0.606,182,1.747,191,0.561,192,0.42,199,0.779,308,1.824,399,2.018,414,1.928,783,2.23,1323,2.487,1346,3.704,1350,2.719,1351,2.806,1352,2.806,1354,1.676,1356,2,1370,2.499,1408,3.633,1409,2.066,1410,2.066,1411,2.9,1412,2.066,1413,2.9,1437,2.906,1438,2.75,1439,2.499,1547,3.644,1548,3.644,1549,6.683,1550,5.784]],["title/components/FormsPlaygroundComponent.html",[0,0.136,103,0.863]],["body/components/FormsPlaygroundComponent.html",[0,0.177,1,0.617,2,0.868,3,0.058,4,0.058,5,0.514,6,0.66,7,0.675,8,0.059,10,1.109,11,2.063,12,0.564,13,1.65,14,1.826,16,0.949,18,0.125,19,0.562,20,2.295,23,0.737,24,0.805,26,0.358,27,0.009,30,0.607,31,1.159,32,0.224,33,0.435,34,0.132,36,0.058,37,0.183,40,0.59,41,1.015,42,0.971,43,0.514,44,1.357,45,0.675,46,0.606,47,0.675,48,0.617,49,1.793,50,0.868,51,1.015,52,0.617,53,0.675,54,0.617,55,0.675,56,1.187,57,0.675,58,0.617,59,0.675,60,0.617,61,0.675,62,0.675,63,0.604,64,0.675,65,0.604,66,0.675,67,0.617,68,0.73,69,1.015,70,0.604,71,0.631,72,0.617,73,0.675,74,0.617,75,0.675,76,0.59,77,1.73,78,0.59,79,0.704,80,1.015,81,0.59,82,0.675,83,0.59,84,0.479,85,1.22,86,0.59,87,0.675,88,0.617,89,0.826,90,0.564,91,0.675,92,0.59,93,0.675,94,0.59,95,0.675,96,0.59,97,1.015,98,0.59,99,0.59,100,0.66,101,0.59,102,0.675,103,1.242,104,1.633,105,0.675,106,0.59,107,0.675,108,0.59,109,0.675,110,0.617,111,0.675,112,0.617,113,0.675,114,0.617,115,0.675,116,1.22,117,0.617,118,1.193,119,0.675,120,0.617,121,0.617,122,0.675,123,0.604,124,0.675,125,0.617,126,0.551,127,0.675,128,0.604,129,0.675,130,0.617,131,0.631,132,0.604,133,0.645,134,0.675,135,0.617,136,0.631,137,0.675,138,0.617,139,0.675,140,0.604,141,0.675,142,0.617,143,0.675,144,0.604,145,0.675,146,0.604,147,0.675,148,0.617,149,0.675,150,0.617,151,0.675,152,0.675,153,0.617,154,0.675,155,0.59,156,0.59,157,0.675,158,0.604,159,0.675,160,0.604,161,0.66,162,0.66,163,0.675,164,0.604,165,0.675,166,0.604,167,0.564,168,0.66,169,0.675,170,0.003,171,0.004,172,0.003,173,0.805,178,1.134,181,0.504,191,0.435,192,0.326,255,2.066,271,1.857,338,2.083,359,1.264,364,1.674,399,1.745,414,1.667,433,2.253,435,3.207,451,2.253,452,1.502,459,2.581,465,1.2,491,4.067,492,2.483,494,2.825,505,2.398,980,4.249,987,2.825,989,4.249,994,4.249,995,3.746,996,7.233,998,3.455,1129,4.249,1286,4.249,1295,5.848,1304,3.42,1321,2.259,1322,2.009,1323,1.373,1354,2.944,1417,2.825,1498,3.882,1551,6.401,1552,2.825,1553,5.777,1554,4.806,1555,3.195,1556,4.806,1557,3.195,1558,3.195,1559,3.195,1560,3.195,1561,3.195,1562,4.806,1563,4.806,1564,4.806,1565,4.249,1566,3.195,1567,3.195,1568,3.195,1569,3.195,1570,3.195,1571,3.195,1572,3.195,1573,3.195,1574,3.195,1575,3.195,1576,3.195,1577,4.806,1578,3.195,1579,4.806,1580,3.195,1581,3.195,1582,3.195,1583,4.806,1584,3.195,1585,3.195,1586,2.581,1587,3.195,1588,2.825,1589,3.195,1590,3.195,1591,3.195,1592,3.195,1593,4.806,1594,4.806,1595,4.806,1596,4.249,1597,3.195,1598,3.195,1599,3.195,1600,3.195,1601,3.195,1602,5.681,1603,4.806,1604,4.806,1605,3.195]],["title/injectables/FormsService.html",[565,1.125,1354,1.815]],["body/injectables/FormsService.html",[3,0.048,4,0.048,8,0.063,18,0.104,19,0.486,23,1.185,24,1.024,26,0.341,27,0.009,30,1.029,31,1.002,32,0.22,34,0.109,35,1.284,36,0.048,37,0.152,46,0.567,68,0.848,77,0.821,170,0.005,171,0.004,172,0.002,181,0.436,191,1.132,192,0.83,197,1.144,199,1.374,208,1.85,210,1.954,223,2.602,251,1.516,277,1.765,279,2.799,338,2.259,341,0.994,348,3.454,359,1.047,360,2.205,364,2.803,390,5.672,399,0.799,404,6.985,414,2.026,417,5.935,431,5.672,480,2.971,498,2.339,514,4.103,565,1.048,566,1.206,594,1.416,669,3.121,671,1.679,675,1.171,702,1.423,890,1.765,1034,2.186,1073,3.675,1115,3.401,1199,3.121,1304,1.171,1322,1.106,1350,3.156,1354,1.69,1370,2.521,1476,5.935,1484,7.517,1491,3.675,1498,2.137,1500,2.339,1502,2.339,1504,2.339,1506,5.144,1507,5.144,1508,4.54,1511,5.144,1606,2.339,1607,5.135,1608,5.135,1609,5.135,1610,5.135,1611,5.135,1612,5.135,1613,5.135,1614,5.135,1615,5.135,1616,5.135,1617,4.157,1618,5.819,1619,4.157,1620,4.157,1621,4.157,1622,4.157,1623,4.157,1624,4.157,1625,4.157,1626,4.157,1627,2.646,1628,4.157,1629,6.714,1630,2.646,1631,4.157,1632,2.646,1633,4.157,1634,2.646,1635,2.646,1636,4.157,1637,2.646,1638,4.157,1639,2.646,1640,4.157,1641,2.646,1642,4.157,1643,2.646,1644,4.157,1645,2.646,1646,4.157,1647,4.157,1648,2.646,1649,2.646,1650,4.157,1651,2.646,1652,4.157,1653,4.157,1654,2.646,1655,2.646,1656,4.157,1657,2.646,1658,4.157,1659,2.646,1660,2.646,1661,7.273,1662,7.273,1663,4.157,1664,4.157,1665,2.646,1666,4.157,1667,5.819,1668,2.646,1669,2.646,1670,4.157,1671,2.646,1672,2.646,1673,4.157,1674,4.157,1675,4.157,1676,4.157,1677,4.157,1678,4.157,1679,4.157,1680,4.157,1681,4.157,1682,4.157,1683,4.157,1684,4.157,1685,4.157,1686,2.646,1687,2.646,1688,2.646,1689,4.157,1690,2.646,1691,2.646,1692,2.646,1693,4.157,1694,4.157,1695,4.157,1696,4.157,1697,2.646,1698,2.646,1699,4.157,1700,2.646,1701,6.714,1702,4.157,1703,2.646,1704,2.646,1705,2.646,1706,2.646,1707,2.646,1708,2.646,1709,2.646,1710,2.646,1711,2.646,1712,2.646,1713,2.646,1714,2.646,1715,2.646,1716,2.646,1717,4.54,1718,2.646,1719,2.646,1720,2.646,1721,2.646,1722,2.646,1723,2.646,1724,2.646,1725,2.646,1726,2.646,1727,2.646,1728,2.646,1729,2.646,1730,2.646,1731,2.646,1732,2.646,1733,2.646]],["title/injectables/GlobalErrorHandler.html",[565,1.125,1734,3.352]],["body/injectables/GlobalErrorHandler.html",[3,0.104,4,0.104,8,0.07,10,1.311,18,0.223,19,0.837,23,1.311,24,0.917,26,0.325,27,0.009,30,0.905,31,1.727,32,0.249,34,0.235,36,0.104,37,0.326,46,0.546,90,1.385,126,0.98,170,0.005,171,0.007,172,0.005,191,1.068,192,0.8,208,1.2,247,2.19,251,2.316,360,1.464,465,2.134,565,1.806,566,2.589,583,2.31,679,5.022,786,3.606,847,2.756,1428,3.79,1542,5.022,1734,5.378,1735,7.284,1736,5.022,1737,7.163,1738,7.163,1739,5.68,1740,8.673,1741,5.68,1742,7.163,1743,5.68,1744,8.239,1745,7.163,1746,5.68,1747,8.239,1748,6.333,1749,4.006,1750,5.68,1751,7.163,1752,5.68,1753,5.68,1754,5.68,1755,5.68,1756,5.68,1757,5.68,1758,5.68,1759,5.68,1760,5.68,1761,5.68,1762,5.68,1763,5.68,1764,7.163,1765,5.68,1766,5.68,1767,4.588,1768,5.68,1769,5.68,1770,5.68,1771,5.68]],["title/interfaces/GridColumn.html",[598,0.67,1092,2.979]],["body/interfaces/GridColumn.html",[3,0.1,4,0.1,8,0.068,18,0.215,26,0.386,27,0.009,36,0.141,68,0.693,71,1.084,89,1.163,170,0.005,171,0.006,172,0.005,181,0.734,188,6.107,192,0.96,197,1.352,199,1.651,205,6.641,216,4.431,218,3.188,220,3.869,222,4.119,224,4.431,231,4.119,232,4.119,598,0.823,600,1.736,769,4.221,780,3.101,965,3.188,1034,3.055,1092,4.676,1102,6.107,1240,6.107,1396,4.543,1772,4.431,1773,8.135,1774,7.192,1775,7.192,1776,7.192,1777,7.192,1778,5.66,1779,6.107,1780,4.85,1781,4.431,1782,4.431,1783,4.431,1784,4.431]],["title/components/GridComponent.html",[0,0.136,110,0.863]],["body/components/GridComponent.html",[0,0.155,1,0.501,2,0.915,3,0.047,4,0.047,5,0.417,6,0.535,7,0.547,8,0.05,10,0.944,12,0.458,13,1.63,14,1.784,16,0.808,18,0.102,19,0.478,21,2.051,23,0.598,24,0.976,26,0.327,27,0.009,30,0.88,31,1.387,32,0.259,33,0.853,34,0.107,35,1.258,36,0.114,37,0.149,40,0.479,41,0.864,42,0.826,43,0.417,44,1.215,45,0.547,46,0.503,47,0.547,48,1.112,49,1.742,50,0.739,51,0.864,52,1.112,53,0.547,54,0.501,55,0.547,56,0.479,57,0.547,58,0.501,59,0.547,60,0.501,61,0.547,62,0.547,63,0.49,64,0.547,65,0.49,66,0.547,67,1.112,68,0.791,69,0.864,70,1.087,71,0.512,72,0.501,73,0.547,74,0.501,75,0.547,76,0.479,77,1.602,78,0.479,79,0.38,80,0.864,81,0.479,82,0.547,83,0.479,84,0.389,85,1.07,86,0.479,87,0.547,88,0.501,89,0.585,90,0.458,91,0.547,92,0.479,93,0.547,94,0.479,95,0.547,96,0.479,97,0.864,98,0.479,99,0.479,100,0.535,101,0.479,102,0.547,103,0.501,104,0.535,105,0.547,106,0.479,107,0.547,108,0.479,109,0.547,110,1.112,111,0.547,112,0.501,113,0.547,114,0.501,115,0.547,116,1.07,117,0.501,118,0.535,119,0.547,120,0.501,121,0.501,122,0.547,123,0.49,124,0.547,125,0.501,126,0.447,127,0.547,128,0.49,129,0.547,130,0.501,131,0.512,132,0.49,133,0.524,134,0.547,135,0.501,136,0.512,137,0.547,138,0.501,139,0.547,140,0.49,141,0.547,142,0.501,143,0.547,144,0.49,145,0.547,146,0.49,147,0.547,148,0.501,149,0.547,150,0.501,151,0.547,152,0.547,153,0.501,154,0.547,155,0.479,156,0.479,157,0.547,158,0.49,159,0.547,160,0.49,161,0.535,162,0.535,163,0.547,164,0.49,165,0.547,166,0.49,167,0.458,168,0.535,169,0.547,170,0.002,171,0.004,172,0.002,173,0.653,178,0.965,181,0.429,183,3.381,185,2.094,188,1.946,191,0.906,192,0.638,197,0.643,199,1.183,202,2.944,203,3.639,205,1.946,208,1.777,210,1.218,211,3.072,213,4.379,223,2.129,231,1.946,232,1.946,251,2.419,279,2.546,323,2.122,338,1.103,341,0.974,348,2.242,360,1.796,361,1.946,364,2.004,384,4.092,393,4.647,465,0.974,480,2.546,594,0.715,769,2.122,1025,2.291,1042,2.291,1046,3.304,1047,3.304,1048,2.094,1069,2.094,1086,4.092,1092,5.266,1100,2.291,1102,1.946,1162,1.645,1240,1.946,1331,2.382,1332,2.122,1396,1.447,1586,4.092,1775,2.291,1776,2.291,1777,2.291,1779,1.946,1781,4.092,1782,4.092,1783,2.094,1784,2.094,1785,2.291,1786,4.09,1787,4.09,1788,5.067,1789,4.09,1790,5.067,1791,5.067,1792,6.655,1793,5.067,1794,5.067,1795,5.753,1796,5.753,1797,4.09,1798,4.09,1799,4.09,1800,4.09,1801,5.067,1802,5.067,1803,5.067,1804,2.592,1805,5.884,1806,2.592,1807,2.592,1808,2.592,1809,2.592,1810,2.592,1811,2.592,1812,4.09,1813,2.592,1814,5.067,1815,5.753,1816,5.067,1817,5.067,1818,4.09,1819,2.592,1820,4.09,1821,2.592,1822,2.592,1823,4.09,1824,2.592,1825,4.09,1826,2.592,1827,4.09,1828,5.067,1829,2.592,1830,2.592,1831,5.067,1832,2.592,1833,5.753,1834,2.592,1835,2.592,1836,2.592,1837,2.592,1838,5.067,1839,2.094,1840,2.592,1841,4.09,1842,2.592,1843,2.592,1844,2.592,1845,2.592,1846,4.09,1847,2.592,1848,2.592,1849,2.592,1850,2.592,1851,2.592,1852,2.592,1853,2.592,1854,5.067,1855,2.592,1856,2.592,1857,2.592,1858,2.592,1859,2.291,1860,4.09,1861,4.09,1862,4.09,1863,2.592,1864,4.09,1865,2.592,1866,2.592,1867,2.592,1868,2.592,1869,2.592,1870,2.592,1871,2.592,1872,2.592,1873,2.592,1874,5.067,1875,4.479,1876,2.592,1877,5.067,1878,2.592,1879,2.592,1880,2.592,1881,4.09,1882,2.592,1883,2.592,1884,4.09,1885,2.291,1886,1.828,1887,2.592,1888,2.592,1889,4.09,1890,2.291,1891,2.592,1892,2.592,1893,2.592,1894,2.592,1895,2.592,1896,2.592,1897,4.09,1898,2.592,1899,2.592,1900,2.592,1901,2.291,1902,2.592,1903,4.09,1904,2.592,1905,2.592,1906,2.592,1907,2.592,1908,2.592,1909,5.753,1910,4.09,1911,2.592,1912,2.592,1913,2.592]],["title/pipes/GroupByPipe.html",[1914,2.707,1915,3.148]],["body/pipes/GroupByPipe.html",[3,0.112,4,0.112,8,0.075,10,1.413,12,1.081,19,0.715,24,0.715,26,0.253,27,0.009,30,0.773,32,0.213,34,0.253,36,0.112,37,0.352,46,0.565,170,0.006,171,0.007,172,0.006,191,0.834,192,0.624,197,1.277,208,1.787,210,2.878,300,6.556,338,1.65,348,2.709,360,1.578,486,3.887,1304,2.709,1331,2.878,1886,4.318,1901,7.176,1914,4.551,1915,5.293,1916,4.318,1917,6.635,1918,5.413,1919,7.505,1920,3.887,1921,7.505,1922,6.123,1923,7.505,1924,5.634,1925,6.123,1926,4.946,1927,6.123,1928,7.505,1929,4.596,1930,6.123,1931,6.123,1932,6.123,1933,4.764,1934,7.505,1935,6.123,1936,6.123,1937,5.413,1938,4.318,1939,6.123,1940,6.123]],["title/components/HeaderComponent.html",[0,0.136,112,0.863]],["body/components/HeaderComponent.html",[0,0.191,1,0.705,2,0.958,3,0.067,4,0.067,5,0.588,6,0.754,7,0.771,8,0.065,10,1.223,11,2.23,12,0.644,13,1.661,14,1.849,16,1.048,18,0.143,19,0.62,20,2.448,23,0.842,24,0.957,26,0.219,27,0.009,30,0.67,31,1.506,32,0.239,33,0.497,34,0.151,36,0.067,37,0.21,40,0.674,41,1.12,42,1.071,43,0.588,44,1.448,45,0.771,46,0.477,47,0.771,48,0.705,49,1.821,50,0.958,51,1.12,52,0.705,53,0.771,54,0.705,55,0.771,56,0.674,57,0.771,58,0.705,59,0.771,60,0.705,61,0.771,62,0.771,63,0.689,64,0.771,65,0.689,66,0.771,67,0.705,68,0.461,69,1.12,70,0.689,71,0.721,72,0.705,73,0.771,74,0.705,75,0.771,76,0.674,77,1.713,78,0.674,79,0.535,80,1.12,81,0.674,82,0.771,83,0.674,84,0.548,85,1.319,86,0.674,87,0.771,88,0.705,89,0.522,90,0.644,91,0.771,92,0.674,93,0.771,94,0.674,95,0.771,96,0.674,97,1.12,98,0.674,99,0.674,100,0.754,101,0.674,102,0.771,103,0.705,104,0.754,105,0.771,106,0.674,107,0.771,108,0.674,109,0.771,110,0.705,111,0.771,112,1.324,113,0.771,114,0.705,115,0.771,116,1.319,117,0.705,118,0.754,119,0.771,120,0.705,121,0.705,122,0.771,123,0.689,124,0.771,125,0.705,126,0.63,127,0.771,128,0.689,129,0.771,130,0.705,131,0.721,132,0.689,133,0.737,134,0.771,135,0.705,136,0.721,137,0.771,138,0.705,139,0.771,140,0.689,141,0.771,142,0.705,143,0.771,144,0.689,145,0.771,146,0.689,147,0.771,148,0.705,149,0.771,150,0.705,151,0.771,152,0.771,153,0.705,154,0.771,155,0.674,156,0.674,157,0.771,158,0.689,159,0.771,160,0.689,161,0.754,162,0.754,163,0.771,164,0.689,165,0.771,166,0.689,167,0.644,168,0.754,169,0.771,170,0.003,171,0.005,172,0.003,173,0.92,178,1.251,181,0.556,191,0.497,192,0.372,199,0.689,208,1.448,223,1.803,251,1.077,257,4.754,271,2.121,305,2.573,323,2.751,338,1.429,364,1.847,465,1.371,547,3.63,689,3.222,721,2.435,727,4.168,728,3.778,762,3.226,766,2.316,767,2.121,1393,4.283,1394,5.703,1395,2.948,1941,3.226,1942,6.246,1943,6.246,1944,5.303,1945,6.246,1946,6.246,1947,6.856,1948,5.522,1949,6.246,1950,3.649,1951,5.303,1952,5.303,1953,3.649,1954,3.649,1955,3.649,1956,3.649,1957,3.649,1958,3.649,1959,3.649,1960,3.649,1961,3.649,1962,3.649,1963,3.649,1964,3.649,1965,5.303,1966,3.649,1967,3.649,1968,3.649,1969,5.303,1970,5.303,1971,5.303,1972,5.303,1973,5.303,1974,5.303,1975,3.226]],["title/components/HomeComponent.html",[0,0.136,114,0.863]],["body/components/HomeComponent.html",[0,0.224,1,0.714,2,0.967,3,0.115,4,0.134,5,0.595,6,0.764,7,0.781,8,0.066,12,0.653,13,1.662,14,1.851,16,1.057,27,0.008,32,0.129,33,0.503,34,0.153,36,0.067,37,0.212,40,0.683,41,1.13,42,1.081,43,0.595,44,1.457,45,0.781,46,0.438,47,0.781,48,0.714,49,1.824,50,0.967,51,1.13,52,0.714,53,0.781,54,0.714,55,0.781,56,0.683,57,0.781,58,0.714,59,0.781,60,0.714,61,0.781,62,0.781,63,0.698,64,0.781,65,0.698,66,0.781,67,0.714,68,0.467,69,1.13,70,0.698,71,0.73,72,0.714,73,0.781,74,0.714,75,0.781,76,0.683,77,1.716,78,0.683,79,0.542,80,1.13,81,0.683,82,0.781,83,0.683,84,0.555,85,1.329,86,0.683,87,0.781,88,0.714,89,0.529,90,0.653,91,0.781,92,0.683,93,0.781,94,0.683,95,0.781,96,0.683,97,1.13,98,0.683,99,0.683,100,0.764,101,0.683,102,0.781,103,0.714,104,0.764,105,0.781,106,0.683,107,0.781,108,0.683,109,0.781,110,0.714,111,0.781,112,0.714,113,0.781,114,1.333,115,1.329,116,1.329,117,0.714,118,0.764,119,0.781,120,0.714,121,0.714,122,0.781,123,0.698,124,0.781,125,0.714,126,0.638,127,0.781,128,0.698,129,0.781,130,0.714,131,0.73,132,0.698,133,0.747,134,0.781,135,0.714,136,0.73,137,0.781,138,0.714,139,0.781,140,0.698,141,0.781,142,0.714,143,0.781,144,0.698,145,0.781,146,0.698,147,0.781,148,0.714,149,0.781,150,0.714,151,0.781,152,0.781,153,0.714,154,0.781,155,0.683,156,0.683,157,0.781,158,0.698,159,0.781,160,0.698,161,0.764,162,0.764,163,0.781,164,0.698,165,0.781,166,0.698,167,0.653,168,0.764,169,0.781,170,0.003,171,0.005,172,0.003,204,5.116,286,4.378,1101,4.323,1162,3.398,1393,4.323,1394,5.178,1509,4.323,1512,4.323,1588,4.732,1886,3.774,1976,3.268,1977,5.353,1978,5.353,1979,5.353,1980,7.631,1981,5.353,1982,7.631,1983,5.353,1984,5.353,1985,5.353,1986,5.353,1987,2.684,1988,5.353,1989,5.353,1990,6.897,1991,5.353,1992,5.353,1993,5.353,1994,5.353,1995,5.353,1996,5.353,1997,5.353,1998,5.353,1999,6.098,2000,6.897,2001,5.353,2002,5.353,2003,5.353,2004,5.353,2005,5.353,2006,6.897,2007,5.353,2008,5.353,2009,5.353,2010,5.353,2011,5.353,2012,3.571,2013,5.353,2014,5.353,2015,5.353,2016,5.353,2017,5.353,2018,5.353,2019,5.353,2020,5.353,2021,5.353,2022,5.353,2023,5.353,2024,5.353,2025,5.353,2026,5.353,2027,5.353,2028,5.353,2029,5.353,2030,5.353,2031,6.897,2032,6.897,2033,5.353,2034,5.353,2035,5.353,2036,5.353,2037,5.353,2038,5.353,2039,5.353,2040,5.353,2041,5.353]],["title/interfaces/IAccordionItem.html",[28,3.352,598,0.67]],["body/interfaces/IAccordionItem.html",[3,0.126,4,0.126,8,0.085,18,0.271,26,0.334,27,0.008,28,6.066,36,0.126,170,0.006,171,0.007,172,0.006,181,0.847,197,1.43,255,3.789,297,5.881,598,1.039,600,2.192,2042,6.123]],["title/interfaces/ICard.html",[598,0.67,2043,3.352]],["body/interfaces/ICard.html",[3,0.117,4,0.117,8,0.079,18,0.252,26,0.356,27,0.009,32,0.224,34,0.266,36,0.141,170,0.006,171,0.007,172,0.006,181,0.811,192,0.877,194,4.494,197,1.444,255,3.699,593,3.121,598,1.16,600,2.035,911,6.067,912,6.459,919,3.886,959,4.536,1388,6.949,2043,5.805,2044,5.195]],["title/interfaces/ICardEvent.html",[598,0.67,959,3.148]],["body/interfaces/ICardEvent.html",[3,0.122,4,0.122,8,0.083,18,0.263,26,0.328,27,0.009,32,0.234,34,0.278,36,0.145,170,0.006,171,0.007,172,0.006,181,0.831,194,5.298,197,1.328,255,2.886,593,4.233,598,1.19,600,2.124,911,4.733,912,5.039,919,3.63,959,5.594,1388,5.422,2043,5.039,2044,5.422]],["title/interfaces/IEnableAuthenticatorModel.html",[598,0.67,1314,2.493]],["body/interfaces/IEnableAuthenticatorModel.html",[3,0.098,4,0.098,5,0.862,8,0.085,18,0.21,26,0.333,27,0.009,32,0.24,33,0.729,34,0.221,36,0.164,46,0.373,68,0.871,79,1.01,84,1.035,89,0.765,170,0.005,171,0.006,172,0.005,181,0.723,197,1.465,199,1.576,255,2.3,287,1.864,338,2.057,341,2.01,359,2.118,360,1.379,382,2.118,399,1.616,414,1.989,452,3.241,491,2.596,492,2.3,594,1.475,598,1.321,600,1.693,780,2.368,919,2.3,995,2.368,998,2.683,1034,3.027,1115,2.878,1298,2.878,1299,3.245,1300,3.709,1301,2.988,1302,3.11,1303,2.988,1304,3.052,1305,2.988,1306,3.245,1307,3.245,1308,3.245,1309,3.245,1310,2.988,1311,3.245,1312,3.245,1313,3.245,1314,3.851,1315,4.501,1316,4.887,1317,4.887,1318,2.988,1319,2.777,1320,2.777,1321,3.241,1322,2.882,1323,2.965,1324,3.241,1325,3.346,1326,3.241,1327,3.346,1328,3.851,1329,2.777,1330,2.878,1331,2.515,1332,2.777]],["title/interfaces/IFieldConfig.html",[414,1.288,598,0.67]],["body/interfaces/IFieldConfig.html",[3,0.089,4,0.089,5,0.79,8,0.08,18,0.192,26,0.375,27,0.009,32,0.227,33,0.668,34,0.203,36,0.161,46,0.543,68,0.823,79,0.954,84,0.977,89,0.701,170,0.005,171,0.006,172,0.005,181,0.683,192,0.931,197,1.454,199,1.607,255,2.108,287,1.708,338,2.247,341,2.747,359,1.941,360,1.264,382,3.084,399,1.481,414,2.11,452,3.662,491,3.78,492,3.35,594,1.352,598,1.296,600,1.552,780,2.17,919,2.108,995,3.448,998,3.907,1034,2.927,1115,2.637,1298,2.637,1299,2.974,1300,4.19,1301,2.738,1302,2.85,1303,2.738,1304,2.882,1305,2.738,1306,2.974,1307,2.974,1308,2.974,1309,2.974,1310,2.738,1311,2.974,1312,2.974,1313,2.974,1314,2.738,1315,2.738,1316,2.974,1317,2.974,1318,2.738,1319,2.544,1320,2.544,1321,3.061,1322,2.722,1323,2.8,1324,3.061,1325,3.16,1326,3.061,1327,3.16,1328,4.351,1329,4.043,1330,4.19,1331,3.437,1332,2.544]],["title/interfaces/IFieldConfig-1.html",[414,1.073,480,1.645,598,0.558]],["body/interfaces/IFieldConfig-1.html",[3,0.085,4,0.085,8,0.077,18,0.182,26,0.383,27,0.009,32,0.162,33,0.632,36,0.139,46,0.531,68,0.793,79,0.92,84,0.942,89,0.664,170,0.004,171,0.006,172,0.004,181,0.658,192,0.957,197,1.456,199,1.652,338,2.147,341,3.339,359,1.838,366,5.722,382,3.017,399,1.403,414,2.053,452,3.583,458,4.43,491,3.698,492,3.277,598,1.068,600,1.47,780,2.055,995,3.373,998,3.822,1034,2.673,1300,4.099,1304,2.055,1319,2.41,1320,2.41,1321,2.952,1322,2.625,1323,2.7,1324,2.952,1325,3.047,1326,2.952,1327,3.047,1329,3.955,1330,4.099,1331,3.345,1332,2.41,1333,3.275,1334,4.191,1335,3.487,1336,3.099,1337,4.191,1338,6.157,1339,5.375,1340,6.157,1341,6.157,1342,6.157,1343,6.157,1344,6.157,1345,6.157]],["title/interfaces/IListItem.html",[598,0.67,2045,3.352]],["body/interfaces/IListItem.html",[3,0.124,4,0.124,5,1.412,8,0.084,18,0.267,26,0.331,27,0.009,32,0.237,34,0.282,36,0.124,170,0.006,171,0.007,172,0.006,181,0.839,192,0.893,197,1.336,598,1.022,600,2.155,919,3.769,965,5.095,2045,6.006,2046,6.022]],["title/interfaces/IModalOptions.html",[598,0.67,1318,2.493]],["body/interfaces/IModalOptions.html",[3,0.097,4,0.097,5,1.296,8,0.085,18,0.209,26,0.333,27,0.009,32,0.24,33,0.727,34,0.221,36,0.163,46,0.372,68,0.869,79,1.008,84,1.033,89,0.763,170,0.005,171,0.006,172,0.005,181,0.721,192,0.82,197,1.459,199,1.574,255,3.461,287,2.804,338,2.054,341,2.004,359,2.112,360,1.375,382,2.112,399,1.612,414,1.986,452,3.235,491,2.589,492,2.294,594,1.471,598,1.32,600,1.688,780,2.361,919,2.294,995,2.361,998,2.675,1034,3.024,1115,2.869,1298,2.869,1299,3.235,1300,3.702,1301,2.98,1302,3.101,1303,2.98,1304,3.046,1305,2.98,1306,3.235,1307,3.235,1308,3.235,1309,3.235,1310,2.98,1311,3.235,1312,3.235,1313,3.235,1314,2.98,1315,2.98,1316,3.235,1317,3.235,1318,3.844,1319,2.769,1320,2.769,1321,3.235,1322,2.877,1323,2.959,1324,3.235,1325,3.34,1326,3.235,1327,3.34,1328,3.844,1329,2.769,1330,2.869,1331,2.508,1332,2.769]],["title/interfaces/INavigationState.html",[598,0.67,2047,2.834]],["body/interfaces/INavigationState.html",[0,0.25,3,0.077,4,0.077,8,0.052,10,0.979,11,2.108,13,0.749,14,1.193,16,0.839,18,0.166,20,1.516,26,0.176,27,0.009,31,1.024,32,0.269,34,0.176,36,0.077,37,0.244,50,1.226,123,0.802,126,1.266,136,0.839,170,0.007,171,0.005,172,0.004,178,1.001,181,0.619,182,1.024,197,1.314,208,1.629,211,4.117,213,5.264,223,2.007,251,2.504,254,4.31,266,2.96,268,2.128,280,3.748,286,2.694,287,2.057,304,2.993,360,2.112,364,1.479,465,1.594,576,2.775,594,2.127,598,0.637,600,1.343,621,2.37,627,4.897,628,3.94,629,2.832,631,2.993,633,2.993,635,2.059,673,1.68,689,3.191,694,2.865,703,2.283,707,3.428,715,3.947,716,3.428,724,3.297,728,3.063,731,4.967,759,2.467,760,2.467,776,2.283,777,3.431,778,3.431,779,3.431,781,2.37,793,2.694,813,2.694,833,3.58,836,4.665,847,3.561,990,3.428,1172,2.694,1271,4.163,1428,3.94,1933,2.694,1938,2.993,1987,2.128,2012,2.832,2047,4.659,2048,3.428,2049,5.097,2050,3.186,2051,3.186,2052,3.186,2053,4.432,2054,3.186,2055,3.186,2056,4.432,2057,3.94,2058,3.753,2059,5.484,2060,3.753,2061,3.753,2062,3.186,2063,3.186,2064,3.753,2065,3.753,2066,6.058,2067,3.753,2068,3.753,2069,3.753,2070,3.753,2071,3.753,2072,3.753,2073,3.753,2074,3.753,2075,3.753,2076,4.432,2077,3.753,2078,3.753,2079,3.753,2080,4.432,2081,3.186,2082,3.753,2083,3.753,2084,3.753,2085,3.753,2086,3.753,2087,3.753,2088,3.753,2089,5.097,2090,3.753,2091,3.186,2092,3.186,2093,3.186,2094,3.753,2095,3.753,2096,3.753,2097,3.753,2098,3.186,2099,4.769,2100,5.22,2101,3.186,2102,3.753,2103,3.753,2104,3.753,2105,3.753,2106,3.186,2107,3.186,2108,3.186,2109,5.097,2110,3.186,2111,3.186,2112,3.753,2113,2.694,2114,3.186,2115,3.186,2116,3.186,2117,3.186,2118,3.186,2119,2.993,2120,3.186,2121,3.753,2122,3.753,2123,3.753,2124,3.753,2125,3.753,2126,3.753,2127,3.753]],["title/interfaces/INavigationState-1.html",[480,1.645,598,0.558,2047,2.36]],["body/interfaces/INavigationState-1.html",[0,0.228,3,0.081,4,0.081,8,0.054,10,1.019,11,2.167,13,0.78,14,0.892,16,0.873,18,0.173,20,1.577,26,0.183,27,0.009,32,0.282,34,0.183,36,0.081,37,0.254,50,1.252,79,0.647,128,0.834,136,1.199,170,0.007,171,0.006,172,0.004,178,1.042,181,0.636,182,1.065,197,1.303,208,1.464,211,4.204,213,5.19,223,2.357,251,2.386,254,4.401,268,2.215,280,3.853,286,2.804,287,1.539,304,3.115,360,2.084,364,1.539,465,1.659,531,2.853,576,2.853,590,3.568,594,2.229,598,0.663,600,1.398,613,5.701,627,4.967,628,2.947,630,3.115,632,3.527,635,2.143,673,1.748,675,1.955,689,3.259,694,2.945,700,4.029,703,2.375,715,4.015,724,3.389,728,2.292,731,4.745,759,2.567,760,2.567,772,2.804,776,3.264,777,3.527,778,3.527,779,3.527,781,2.467,792,3.853,835,2.804,836,4.71,847,3.796,1172,2.804,1323,1.899,1926,3.568,1933,2.804,1987,2.215,2012,2.947,2047,4.739,2049,5.205,2050,3.316,2051,3.316,2052,3.316,2053,4.556,2054,3.316,2055,3.316,2056,3.316,2057,2.947,2062,3.316,2063,3.316,2066,5.948,2076,3.316,2080,4.556,2081,3.316,2089,4.556,2091,3.316,2092,3.316,2093,4.556,2098,3.316,2106,3.316,2107,3.316,2108,3.316,2109,5.205,2110,3.316,2111,3.316,2113,2.804,2114,3.316,2115,3.316,2116,3.316,2117,3.316,2118,5.205,2119,3.115,2120,3.316,2128,3.568,2129,3.905,2130,5.366,2131,3.905,2132,3.905,2133,3.905,2134,3.905,2135,3.905,2136,3.905,2137,3.905,2138,3.905,2139,3.905,2140,3.905,2141,3.905,2142,3.905,2143,3.568,2144,3.905,2145,3.905,2146,3.905,2147,5.366,2148,5.366,2149,3.905,2150,3.905,2151,3.905,2152,3.905,2153,3.905,2154,3.905,2155,3.905,2156,3.905,2157,3.905,2158,3.905,2159,3.905,2160,3.568]],["title/interfaces/IOption.html",[598,0.67,1328,2.493]],["body/interfaces/IOption.html",[3,0.097,4,0.097,5,0.854,8,0.084,18,0.208,26,0.332,27,0.009,32,0.239,33,0.722,34,0.219,36,0.163,46,0.369,68,0.866,79,1.005,84,1.029,89,0.759,170,0.005,171,0.006,172,0.005,181,0.719,192,0.699,197,1.458,199,1.638,255,2.281,287,1.848,338,2.297,341,1.993,359,2.1,360,1.367,382,2.1,399,1.602,414,1.978,452,3.223,491,2.574,492,2.281,594,1.463,598,1.318,600,1.679,780,2.348,919,2.281,995,2.348,998,2.66,1034,3.2,1115,2.853,1298,2.853,1299,3.217,1300,3.688,1301,2.963,1302,3.083,1303,2.963,1304,3.681,1305,2.963,1306,3.217,1307,3.217,1308,3.217,1309,3.217,1310,2.963,1311,3.217,1312,3.217,1313,3.217,1314,2.963,1315,2.963,1316,3.217,1317,3.217,1318,2.963,1319,2.753,1320,2.753,1321,3.223,1322,2.866,1323,2.948,1324,3.223,1325,3.327,1326,3.223,1327,3.327,1328,4.243,1329,2.753,1330,2.853,1331,2.494,1332,4.168]],["title/interfaces/ISocialLogins.html",[598,0.67,1305,2.493]],["body/interfaces/ISocialLogins.html",[3,0.097,4,0.097,5,0.853,8,0.084,18,0.208,26,0.344,27,0.009,32,0.239,33,0.721,34,0.219,36,0.163,46,0.369,68,0.865,79,1.004,84,1.028,89,0.758,170,0.005,171,0.006,172,0.005,181,0.718,197,1.464,199,1.637,255,2.277,287,1.845,338,2.047,341,1.99,359,2.097,360,1.366,382,2.097,399,1.6,414,1.976,452,3.22,491,2.57,492,2.277,594,1.46,598,1.318,600,1.676,780,2.344,919,2.277,995,2.344,998,2.656,1034,3.016,1115,2.849,1298,2.849,1299,3.212,1300,3.684,1301,2.958,1302,3.079,1303,2.958,1304,3.032,1305,3.826,1306,4.868,1307,4.868,1308,4.868,1309,4.868,1310,2.958,1311,3.212,1312,3.212,1313,3.212,1314,2.958,1315,2.958,1316,3.212,1317,3.212,1318,2.958,1319,2.749,1320,2.749,1321,3.22,1322,2.863,1323,2.945,1324,3.22,1325,3.324,1326,3.22,1327,3.324,1328,3.826,1329,2.749,1330,2.849,1331,2.49,1332,2.749]],["title/interfaces/ITwoFactorModel.html",[598,0.67,1310,2.493]],["body/interfaces/ITwoFactorModel.html",[3,0.098,4,0.098,5,0.862,8,0.085,18,0.21,26,0.333,27,0.009,32,0.24,33,0.729,34,0.221,36,0.164,46,0.373,68,0.871,79,1.01,84,1.035,89,0.765,170,0.005,171,0.006,172,0.005,181,0.723,197,1.441,199,1.68,255,2.3,287,1.864,338,2.057,341,2.01,359,2.118,360,1.379,382,2.118,399,1.616,414,1.989,452,3.241,491,2.596,492,2.3,594,1.475,598,1.321,600,1.693,780,2.368,919,2.3,995,2.368,998,2.683,1034,3.207,1115,2.878,1298,2.878,1299,3.245,1300,3.709,1301,2.988,1302,3.11,1303,2.988,1304,3.052,1305,2.988,1306,3.245,1307,3.245,1308,3.245,1309,3.245,1310,3.851,1311,4.887,1312,4.887,1313,4.887,1314,2.988,1315,2.988,1316,3.245,1317,3.245,1318,2.988,1319,2.777,1320,2.777,1321,3.241,1322,2.882,1323,2.965,1324,3.241,1325,3.346,1326,3.241,1327,3.346,1328,3.851,1329,2.777,1330,2.878,1331,2.515,1332,2.777]],["title/interfaces/IUser.html",[598,0.67,755,2.834]],["body/interfaces/IUser.html",[3,0.059,4,0.059,8,0.04,18,0.127,19,0.378,26,0.241,27,0.009,32,0.241,34,0.134,36,0.138,37,0.186,46,0.45,50,0.585,90,1.467,126,0.559,170,0.003,171,0.004,172,0.003,181,0.509,182,1.871,197,1.291,199,0.917,208,1.89,210,2.737,218,1.881,223,1.1,247,1.248,251,2.385,266,1.623,287,1.691,322,3.081,348,1.432,360,1.667,364,2.253,377,1.963,382,2.56,458,1.881,480,2.148,503,3.885,531,1.521,565,1.223,576,3.257,583,1.316,593,1.57,594,1.91,598,0.97,600,1.024,621,2.71,632,1.881,635,1.57,667,3.474,673,1.281,675,1.432,689,1.521,694,2.825,700,1.881,702,1.741,703,1.741,710,1.963,711,2.282,712,2.282,713,4.106,714,2.282,715,3.727,719,2.282,720,2.282,721,2.16,722,2.282,724,3.87,726,3.422,727,2.16,728,4.552,729,2.282,732,2.282,734,2.282,738,2.282,740,4.316,744,2.282,746,4.561,749,2.282,751,2.282,753,2.282,755,4.106,759,2.82,760,1.881,765,2.282,766,2.055,767,2.82,768,3.422,769,1.679,770,1.881,771,3.885,772,2.055,773,2.943,774,2.943,775,2.943,776,3.913,777,2.82,778,2.82,779,2.82,780,1.432,781,1.808,782,3.885,783,1.871,784,4.106,785,2.282,786,2.055,787,2.282,788,2.282,789,2.282,790,2.16,791,3.422,792,4.399,793,2.055,794,2.282,795,2.282,796,4.106,797,2.282,798,2.282,799,2.282,800,4.624,801,2.282,802,2.282,803,3.422,804,2.282,805,2.282,806,2.282,807,2.282,808,3.422,809,2.282,810,2.282,811,2.282,812,5.393,813,3.696,814,2.16,815,2.282,816,2.282,817,2.16,818,2.282,819,2.282,820,2.282,821,3.422,822,2.282,823,3.422,824,2.282,825,1.963,826,4.561,827,4.106,828,2.282,829,3.422,830,2.055,831,2.282,832,2.282,833,1.963,834,2.282,835,2.055,836,4.739,837,4.561,838,2.282,839,3.422,840,4.106,841,5.32,842,3.422,843,2.282,844,3.422,845,2.282,846,4.106,847,2.825,848,3.422,849,3.422,850,2.282,851,3.422,852,2.282,853,3.422,854,2.282,855,2.282,856,2.282,857,2.055,858,2.282,859,3.422,860,2.282,861,2.282,862,3.422,863,3.422,864,3.422,865,2.282,866,2.282,867,2.282,868,2.282,869,2.282,870,2.282,871,2.282,872,3.422,873,2.282,874,2.282,875,4.106,876,4.106,877,2.282,878,2.282,879,2.282,880,2.282,881,2.282,882,2.282,883,2.282,884,2.282,885,2.16,886,2.282,887,2.282,888,2.282,889,3.422,890,2.16,891,2.16,892,2.282,893,2.282,894,2.282,895,2.16,896,3.422,897,2.282,898,2.282,899,2.282,900,2.282,901,2.282,902,2.282,903,2.282,904,2.282,905,2.282]],["title/components/ImageResizerComponent.html",[0,0.136,117,0.863]],["body/components/ImageResizerComponent.html",[0,0.154,1,0.498,2,0.736,3,0.047,4,0.074,5,0.415,6,0.533,7,0.545,8,0.101,10,0.94,11,1.803,12,0.455,13,1.63,14,1.794,16,0.805,18,0.101,19,0.476,20,2.049,21,2.043,23,0.595,24,0.982,26,0.331,27,0.009,30,0.878,31,1.677,32,0.142,33,1.035,34,0.107,36,0.047,37,0.148,40,0.476,41,0.86,42,1.02,43,0.415,44,1.212,45,0.545,46,0.517,47,0.545,48,0.498,49,1.721,50,0.736,51,0.86,52,0.498,53,0.545,54,0.498,55,0.545,56,0.476,57,0.545,58,0.498,59,0.545,60,0.498,61,0.545,62,0.545,63,0.487,64,0.545,65,0.487,66,0.545,67,0.498,68,0.326,69,0.86,70,0.487,71,0.51,72,0.498,73,0.545,74,0.498,75,0.545,76,0.476,77,1.6,78,0.476,79,0.74,80,0.86,81,0.476,82,0.545,83,0.476,84,0.387,85,1.067,86,0.476,87,0.545,88,0.498,89,0.369,90,0.455,91,0.545,92,0.476,93,0.545,94,0.476,95,0.545,96,0.476,97,0.86,98,0.476,99,0.476,100,0.533,101,0.476,102,0.545,103,0.498,104,0.533,105,0.545,106,0.476,107,0.545,108,0.476,109,0.545,110,0.498,111,0.545,112,0.498,113,0.545,114,0.498,115,0.545,116,1.067,117,1.109,118,1.533,119,0.545,120,0.498,121,0.498,122,0.545,123,0.487,124,0.545,125,0.498,126,0.445,127,0.545,128,0.487,129,0.545,130,0.498,131,0.51,132,0.487,133,0.521,134,0.545,135,0.498,136,0.51,137,0.545,138,0.498,139,0.545,140,0.487,141,0.545,142,0.498,143,0.545,144,0.487,145,0.545,146,0.487,147,0.545,148,0.498,149,0.545,150,0.498,151,0.545,152,0.545,153,0.498,154,0.545,155,0.476,156,0.476,157,0.545,158,0.487,159,0.545,160,0.487,161,0.533,162,0.842,163,0.545,164,0.487,165,0.545,166,0.487,167,0.455,168,0.533,169,0.545,170,0.005,171,0.004,172,0.005,173,0.65,178,0.961,181,0.427,182,1.218,191,0.904,192,0.677,197,1.134,199,1.084,208,1.067,223,1.385,243,1.819,255,2.855,258,4.431,279,1.803,285,2.28,287,0.898,305,1.819,323,2.114,338,1.098,341,1.53,348,1.803,360,1.61,377,3.062,465,0.969,593,1.251,594,1.722,631,5.711,728,1.338,736,1.564,790,2.719,913,2.873,923,4.406,929,3.206,997,2.28,1005,2.083,1034,2.494,1131,2.28,1173,1.936,1276,2.083,1331,1.212,1396,4.402,1398,5.26,1428,1.721,1890,4.465,1933,1.637,1975,2.28,1987,1.293,2101,4.69,2161,7.484,2162,7.484,2163,2.28,2164,4.075,2165,5.05,2166,4.075,2167,5.05,2168,4.075,2169,4.075,2170,5.738,2171,4.075,2172,4.075,2173,5.05,2174,5.05,2175,5.05,2176,5.05,2177,4.465,2178,5.05,2179,2.28,2180,4.075,2181,5.738,2182,2.579,2183,2.579,2184,2.579,2185,2.579,2186,2.579,2187,2.579,2188,2.579,2189,2.579,2190,4.075,2191,2.579,2192,2.579,2193,4.075,2194,5.05,2195,2.579,2196,2.579,2197,4.075,2198,6.641,2199,2.579,2200,4.075,2201,2.579,2202,4.075,2203,6.641,2204,6.641,2205,2.579,2206,6.641,2207,2.579,2208,2.579,2209,6.248,2210,4.075,2211,4.075,2212,4.075,2213,2.083,2214,2.083,2215,2.28,2216,2.28,2217,2.28,2218,2.579,2219,2.579,2220,2.579,2221,2.579,2222,5.738,2223,2.579,2224,2.579,2225,2.579,2226,2.579,2227,4.075,2228,2.579,2229,2.579,2230,2.579,2231,2.579,2232,2.579,2233,2.579,2234,3.602,2235,2.579,2236,4.075,2237,4.075,2238,2.579,2239,2.579,2240,2.579,2241,5.05,2242,4.075,2243,2.579,2244,5.05,2245,2.579,2246,2.28,2247,2.579,2248,2.579,2249,2.579,2250,2.579,2251,2.579,2252,2.579,2253,2.579,2254,2.579,2255,2.579,2256,2.579,2257,2.579,2258,2.579,2259,2.579,2260,5.05,2261,2.579,2262,2.579,2263,2.579,2264,2.579,2265,2.579,2266,2.579,2267,2.579,2268,2.579,2269,2.28,2270,2.579,2271,2.579,2272,2.579,2273,2.579,2274,2.579,2275,2.579,2276,3.602]],["title/classes/JwtHelperService.html",[37,0.256,2277,3.606]],["body/classes/JwtHelperService.html",[3,0.069,4,0.069,8,0.046,18,0.148,19,0.634,24,0.925,26,0.328,27,0.009,30,0.97,36,0.069,37,0.216,46,0.535,68,0.97,90,0.665,170,0.005,171,0.005,172,0.003,181,0.569,182,2.067,191,1.046,192,0.783,197,1.423,199,1.025,208,1.791,210,1.771,211,2.285,213,3.857,223,2.162,251,2.267,279,3.399,280,2.392,338,1.714,341,1.415,348,3.263,360,1.901,364,1.313,480,2.402,594,2.118,626,3.044,634,3.044,663,2.514,736,2.285,812,2.514,814,2.514,817,2.514,825,3.857,830,3.445,847,3.376,929,4.876,1034,2.389,1404,6.195,1509,3.044,1512,3.044,1586,3.044,1929,2.829,1937,3.332,2066,4.485,2215,3.332,2234,3.332,2269,3.332,2277,4.384,2278,2.829,2279,7.163,2280,3.332,2281,6.36,2282,5.427,2283,5.427,2284,5.427,2285,5.427,2286,5.427,2287,5.427,2288,3.768,2289,5.427,2290,3.768,2291,6.959,2292,5.427,2293,3.768,2294,5.427,2295,3.768,2296,5.427,2297,3.768,2298,6.959,2299,5.427,2300,7.681,2301,3.768,2302,5.427,2303,3.768,2304,3.768,2305,3.768,2306,3.768,2307,3.768,2308,6.52,2309,3.768,2310,3.768,2311,3.768,2312,3.768,2313,3.768,2314,3.768,2315,3.768,2316,3.768,2317,3.768,2318,3.768,2319,3.768,2320,3.768,2321,7.681,2322,3.768,2323,5.427,2324,3.768,2325,6.959,2326,6.959,2327,7.681,2328,3.768,2329,6.959,2330,3.768,2331,5.427,2332,4.798,2333,3.768,2334,3.332,2335,5.427,2336,3.768,2337,5.427,2338,3.768,2339,3.768,2340,3.768,2341,3.768,2342,3.768,2343,3.768,2344,3.768,2345,3.768,2346,3.768,2347,3.768,2348,3.768,2349,3.768,2350,3.768,2351,3.768,2352,5.427,2353,3.768,2354,3.768,2355,3.768,2356,3.768,2357,3.768,2358,3.768,2359,3.768,2360,3.768,2361,3.768,2362,3.768,2363,3.768,2364,3.768,2365,3.768,2366,3.768,2367,3.768,2368,3.768,2369,3.768,2370,3.768,2371,3.768]],["title/interceptors/JwtInterceptor.html",[655,3.148,2372,3.148]],["body/interceptors/JwtInterceptor.html",[3,0.092,4,0.092,8,0.062,10,1.159,18,0.197,19,0.773,23,1.159,24,0.919,26,0.325,27,0.009,30,0.935,32,0.285,34,0.208,36,0.092,37,0.288,46,0.548,136,0.993,170,0.005,171,0.006,172,0.005,191,1.071,192,0.802,197,1.164,199,0.949,208,1.773,210,2.361,213,3.046,247,1.937,251,2.477,364,2.578,465,1.887,565,1.668,583,2.043,657,3.771,659,4.968,661,5.346,662,6.425,663,5.71,664,6.425,666,6.913,667,3.711,668,4.968,669,3.771,671,3.189,673,1.988,675,2.223,688,4.441,689,3.698,691,6.543,701,4.441,731,4.77,771,3.352,1172,4.201,1404,5.556,1885,4.441,1886,3.543,1929,3.771,2012,5.249,2099,6.603,2113,4.698,2119,5.547,2372,4.667,2373,4.441,2374,6.618,2375,6.618,2376,5.024,2377,5.024,2378,6.618,2379,5.024,2380,6.618,2381,5.024,2382,5.024,2383,5.024,2384,5.024,2385,5.024,2386,4.441,2387,3.771,2388,5.024,2389,4.441,2390,5.024,2391,5.024,2392,5.024,2393,5.024,2394,5.024,2395,5.024,2396,5.024,2397,5.024,2398,5.024,2399,5.851,2400,5.024,2401,5.024,2402,5.024,2403,5.024]],["title/interfaces/KeyValuePair.html",[598,0.67,1303,2.493]],["body/interfaces/KeyValuePair.html",[3,0.099,4,0.099,5,0.87,8,0.086,18,0.212,26,0.317,27,0.009,32,0.242,33,0.736,34,0.224,36,0.164,46,0.376,68,0.877,79,1.017,84,1.041,89,0.773,170,0.005,171,0.006,172,0.005,181,0.728,197,1.453,199,1.581,255,2.324,287,1.883,338,2.308,341,2.031,359,2.14,360,1.393,382,2.14,399,1.633,414,2.002,452,3.263,491,2.623,492,2.324,594,1.49,598,1.323,600,1.711,780,2.392,919,2.324,995,2.392,998,2.711,1034,3.039,1115,4.123,1298,2.907,1299,3.278,1300,3.733,1301,3.019,1302,3.142,1303,3.876,1304,3.703,1305,3.019,1306,3.278,1307,3.278,1308,3.278,1309,3.278,1310,3.019,1311,3.278,1312,3.278,1313,3.278,1314,3.019,1315,3.019,1316,3.278,1317,3.278,1318,3.019,1319,2.805,1320,2.805,1321,3.263,1322,2.901,1323,2.984,1324,3.263,1325,3.368,1326,3.263,1327,3.368,1328,3.876,1329,2.805,1330,2.907,1331,2.541,1332,2.805]],["title/components/ListComponent.html",[0,0.136,120,0.863]],["body/components/ListComponent.html",[0,0.207,1,0.817,2,1.064,3,0.077,4,0.077,5,0.681,6,0.874,7,0.893,8,0.073,10,1.359,11,2.42,12,0.747,13,1.672,14,1.878,16,1.164,18,0.265,19,0.688,20,2.617,21,2.953,23,1.563,24,0.856,26,0.175,27,0.009,30,0.744,31,1.42,32,0.205,33,0.923,34,0.175,35,2.052,36,0.077,37,0.243,40,0.781,41,1.244,42,1.19,43,0.681,44,1.548,45,0.893,46,0.51,47,0.893,48,0.817,49,1.84,50,1.064,51,1.244,52,0.817,53,0.893,54,0.817,55,0.893,56,0.781,57,0.893,58,0.817,59,0.893,60,0.817,61,0.893,62,0.893,63,0.799,64,0.893,65,0.799,66,0.893,67,0.817,68,0.534,69,1.244,70,0.799,71,0.836,72,0.817,73,0.893,74,0.817,75,0.893,76,0.781,77,1.754,78,0.781,79,0.62,80,1.244,81,0.781,82,0.893,83,0.781,84,0.635,85,1.431,86,0.781,87,0.893,88,0.817,89,0.605,90,0.747,91,0.893,92,0.781,93,0.893,94,0.781,95,0.893,96,0.781,97,1.244,98,0.781,99,0.781,100,0.874,101,0.781,102,0.893,103,0.817,104,0.874,105,0.893,106,0.781,107,0.893,108,0.781,109,0.893,110,0.817,111,0.893,112,0.817,113,0.893,114,0.817,115,0.893,116,1.431,117,0.817,118,0.874,119,0.893,120,1.416,121,0.817,122,0.893,123,0.799,124,0.893,125,0.817,126,0.73,127,0.893,128,0.799,129,0.893,130,0.817,131,0.836,132,0.799,133,0.855,134,0.893,135,0.817,136,0.836,137,0.893,138,0.817,139,0.893,140,0.799,141,0.893,142,0.817,143,0.893,144,0.799,145,0.893,146,0.799,147,0.893,148,0.817,149,0.893,150,0.817,151,0.893,152,0.893,153,0.817,154,0.893,155,0.781,156,0.781,157,0.893,158,0.799,159,0.893,160,0.799,161,0.874,162,1.648,163,0.893,164,0.799,165,0.893,166,0.799,167,0.747,168,0.874,169,0.893,170,0.004,171,0.005,172,0.004,191,0.576,192,0.431,208,0.893,508,5.474,1433,4.758,2045,5.087,2404,3.74,2405,5.89,2406,5.89,2407,4.23,2408,5.89,2409,4.23,2410,5.89]],["title/components/LoadingComponent.html",[0,0.136,121,0.863]],["body/components/LoadingComponent.html",[0,0.194,1,0.723,2,0.975,3,0.068,4,0.068,5,0.602,6,0.773,7,0.79,8,0.067,10,1.246,12,0.661,13,1.663,14,1.853,16,1.067,18,0.211,19,0.631,23,0.863,24,0.81,26,0.223,27,0.009,30,0.682,31,1.528,32,0.221,33,0.509,34,0.155,36,0.068,37,0.215,40,0.691,41,1.14,42,1.091,43,0.602,44,1.465,45,0.79,46,0.483,47,0.79,48,0.723,49,1.826,50,0.975,51,1.14,52,0.723,53,0.79,54,0.723,55,0.79,56,0.691,57,0.79,58,0.723,59,0.79,60,0.723,61,0.79,62,0.79,63,0.707,64,0.79,65,0.707,66,0.79,67,0.723,68,0.473,69,1.14,70,0.707,71,0.739,72,0.723,73,0.79,74,0.723,75,0.79,76,0.691,77,1.72,78,0.691,79,0.548,80,1.14,81,0.691,82,0.79,83,0.691,84,0.561,85,1.338,86,0.691,87,0.79,88,0.723,89,0.535,90,0.661,91,0.79,92,0.691,93,0.79,94,0.691,95,0.79,96,0.691,97,1.14,98,0.691,99,0.691,100,0.773,101,0.691,102,0.79,103,0.723,104,0.773,105,0.79,106,0.691,107,0.79,108,0.691,109,0.79,110,0.723,111,0.79,112,0.723,113,0.79,114,0.723,115,0.79,116,1.338,117,0.723,118,0.773,119,0.79,120,0.723,121,1.34,122,0.79,123,0.707,124,0.79,125,0.723,126,0.646,127,0.79,128,0.707,129,0.79,130,0.723,131,0.739,132,0.707,133,0.756,134,0.79,135,0.723,136,0.739,137,0.79,138,0.723,139,0.79,140,0.707,141,0.79,142,0.723,143,0.79,144,0.707,145,0.79,146,0.707,147,0.79,148,0.723,149,0.79,150,0.723,151,0.79,152,0.79,153,0.723,154,0.79,155,0.691,156,0.691,157,0.79,158,0.707,159,0.79,160,0.707,161,0.773,162,0.773,163,0.79,164,0.707,165,0.79,166,0.707,167,0.661,168,0.773,169,0.79,170,0.003,171,0.005,172,0.003,173,0.943,178,1.274,181,0.566,191,0.509,192,0.381,199,0.707,251,1.594,279,3.069,305,2.638,306,3.807,326,5.207,450,4.756,465,1.405,673,1.481,776,2.012,910,5.602,916,6.132,965,2.174,968,3.427,1171,2.638,1173,2.809,1176,3.022,1179,5.117,1182,5.117,1183,5.602,1198,4.053,1396,3.015,1397,4.467,1398,3.603,1439,2.269,1920,3.427,1987,1.876,2411,3.308,2412,6.132,2413,6.335,2414,5.399,2415,6.335,2416,3.742,2417,4.891,2418,6.335,2419,6.335,2420,5.399,2421,5.399,2422,3.742,2423,3.742,2424,5.399,2425,5.399,2426,3.742,2427,3.742,2428,3.742,2429,3.742,2430,3.742,2431,3.022,2432,3.742,2433,3.742,2434,3.308,2435,3.742,2436,3.742,2437,3.742,2438,3.742,2439,3.742,2440,3.742,2441,3.308,2442,3.022,2443,3.742,2444,3.742,2445,3.308,2446,5.399,2447,3.742,2448,5.399,2449,3.742,2450,3.742,2451,3.742,2452,5.601,2453,3.742,2454,3.742,2455,3.742,2456,3.308,2457,3.022,2458,3.742,2459,3.742,2460,3.742]],["title/interceptors/LoadingInterceptor.html",[655,3.148,2461,3.148]],["body/interceptors/LoadingInterceptor.html",[3,0.104,4,0.104,8,0.07,10,1.313,18,0.223,19,0.838,23,1.313,24,0.963,26,0.325,27,0.009,30,0.906,31,1.372,32,0.287,34,0.235,36,0.104,37,0.327,46,0.499,170,0.005,171,0.007,172,0.005,181,0.752,191,0.976,192,0.731,208,1.201,223,1.934,247,2.193,251,2.561,277,3.796,279,3.474,338,1.534,465,2.137,565,1.808,583,2.313,657,4.271,659,5.383,662,6.189,663,5.239,664,6.189,668,5.383,671,3.611,674,4.595,675,2.517,702,3.059,847,2.76,1012,4.595,1034,2.137,2389,5.03,2417,6.118,2461,5.056,2462,5.03,2463,7.852,2464,8.244,2465,5.689,2466,7.17,2467,5.689,2468,7.17,2469,5.689,2470,6.339,2471,5.689,2472,7.852,2473,5.689,2474,5.689,2475,5.689,2476,5.689,2477,7.17,2478,5.689,2479,5.689]],["title/injectables/LoadingService.html",[565,1.125,2417,3.148]],["body/injectables/LoadingService.html",[3,0.118,4,0.118,8,0.08,18,0.253,19,0.905,24,0.97,26,0.267,27,0.009,30,0.979,31,1.869,32,0.27,34,0.267,36,0.118,37,0.371,170,0.006,171,0.007,172,0.006,181,0.812,223,2.194,247,2.488,338,1.74,565,1.954,566,2.942,583,2.624,594,2.136,673,2.555,2412,7.342,2417,5.465,2480,5.706,2481,8.614,2482,8.614,2483,6.454,2484,6.454,2485,8.81,2486,6.454,2487,6.454,2488,6.454]],["title/components/LoginComponent.html",[0,0.136,123,0.843]],["body/components/LoginComponent.html",[0,0.227,1,0.546,2,0.791,3,0.052,4,0.052,5,0.455,6,0.584,7,0.597,8,0.054,10,1.01,11,1.913,12,0.499,13,1.639,14,1.816,16,0.865,18,0.111,19,0.512,20,2.154,23,0.652,24,0.911,26,0.27,27,0.009,30,0.939,31,1.292,32,0.227,33,0.385,34,0.117,36,0.052,37,0.162,40,0.522,41,0.925,42,0.885,43,0.455,44,1.274,45,0.597,46,0.518,47,0.597,48,0.546,49,1.746,50,1.178,51,0.925,52,0.546,53,0.597,54,0.546,55,0.597,56,0.522,57,0.597,58,0.546,59,0.597,60,0.546,61,0.597,62,0.597,63,0.534,64,0.597,65,0.534,66,0.597,67,0.546,68,0.357,69,0.925,70,0.534,71,0.559,72,0.546,73,0.597,74,0.546,75,0.597,76,0.522,77,1.632,78,0.522,79,0.414,80,0.925,81,0.522,82,0.597,83,0.522,84,0.424,85,1.132,86,0.522,87,0.597,88,0.546,89,0.404,90,0.499,91,0.597,92,0.522,93,0.597,94,0.522,95,0.597,96,0.522,97,0.925,98,0.522,99,0.522,100,0.584,101,0.522,102,0.597,103,0.546,104,0.584,105,0.597,106,0.522,107,0.597,108,0.522,109,0.597,110,0.546,111,0.597,112,0.546,113,0.597,114,0.546,115,0.597,116,1.132,117,0.546,118,0.584,119,0.597,120,0.546,121,0.546,122,0.597,123,1.14,124,0.597,125,0.546,126,1.283,127,0.597,128,0.534,129,0.597,130,0.546,131,0.559,132,0.534,133,0.571,134,0.597,135,0.546,136,0.865,137,0.597,138,0.546,139,0.597,140,0.534,141,0.597,142,0.546,143,0.597,144,0.534,145,0.597,146,0.534,147,0.597,148,0.546,149,0.597,150,0.546,151,0.597,152,0.597,153,0.546,154,0.597,155,0.522,156,0.522,157,0.597,158,0.534,159,0.597,160,0.534,161,0.584,162,0.584,163,0.597,164,0.534,165,0.597,166,0.534,167,0.499,168,0.584,169,0.597,170,0.006,171,0.004,172,0.003,173,0.713,178,1.033,181,0.459,182,1.292,191,0.889,192,0.665,197,1.285,208,1.378,211,3.249,213,4.816,223,1.821,251,2.588,254,4.569,266,2.195,268,1.418,280,2.78,286,1.795,287,2.404,304,1.994,338,0.762,360,1.855,364,0.985,465,1.062,576,2.836,594,1.903,598,0.424,621,1.579,627,2.78,628,4.025,629,1.887,631,1.994,633,1.994,635,1.372,673,1.119,689,3.244,694,2.6,703,1.521,707,2.284,715,4.443,716,2.284,724,2.445,728,2.272,731,4.365,736,1.715,759,1.643,760,2.545,776,1.521,777,2.545,778,2.545,779,2.545,781,1.579,793,1.795,813,1.795,833,2.655,836,4.153,847,2.927,990,2.284,1172,1.795,1271,3.088,1428,2.922,1933,1.795,1938,1.994,1987,1.418,2012,1.887,2047,4.142,2048,2.284,2049,5.404,2050,2.123,2051,2.123,2052,2.123,2053,3.287,2054,2.123,2055,2.123,2056,3.287,2057,2.922,2058,2.5,2059,4.328,2060,3.871,2061,4.737,2062,2.123,2063,2.123,2064,2.5,2065,2.5,2066,5.501,2067,2.5,2068,2.5,2069,2.5,2070,2.5,2071,2.5,2072,2.5,2073,2.5,2074,2.5,2075,2.5,2076,3.287,2077,3.871,2078,2.5,2079,2.5,2080,3.287,2081,2.123,2082,2.5,2083,2.5,2084,2.5,2085,2.5,2086,5.333,2087,2.5,2088,2.5,2089,4.022,2090,2.5,2091,2.123,2092,2.123,2093,2.123,2094,5.333,2095,2.5,2096,5.333,2097,2.5,2098,3.287,2099,3.537,2100,3.871,2101,2.123,2102,2.5,2103,2.5,2104,2.5,2105,2.5,2106,2.123,2107,2.123,2108,3.287,2109,4.022,2110,2.123,2111,2.123,2112,2.5,2113,1.795,2114,2.123,2115,2.123,2116,2.123,2117,2.123,2118,2.123,2119,1.994,2120,2.123,2121,2.5,2122,3.871,2123,2.5,2124,2.5,2125,2.5,2126,2.5,2127,2.5,2489,3.871,2490,3.871,2491,4.379,2492,2.284,2493,4.379,2494,2.828,2495,2.828,2496,2.828,2497,2.828,2498,2.828,2499,2.828,2500,2.828,2501,2.828,2502,2.828]],["title/components/LoginMenuComponent.html",[0,0.136,125,0.863]],["body/components/LoginMenuComponent.html",[0,0.2,1,0.767,2,1.017,3,0.072,4,0.072,5,0.639,6,0.82,7,0.839,8,0.069,10,1.3,11,2.338,12,0.701,13,1.668,14,1.869,16,1.113,18,0.156,19,0.658,20,2.545,23,0.916,24,0.833,26,0.271,27,0.009,30,0.502,31,0.958,32,0.248,33,0.541,34,0.164,36,0.072,37,0.228,40,0.733,41,1.19,42,1.138,43,0.639,44,1.505,45,0.839,46,0.496,47,0.839,48,0.767,49,1.827,50,1.017,51,1.19,52,0.767,53,0.839,54,0.767,55,0.839,56,0.733,57,0.839,58,0.767,59,0.839,60,0.767,61,0.839,62,0.839,63,0.75,64,0.839,65,0.75,66,0.839,67,0.767,68,0.502,69,1.19,70,0.75,71,0.785,72,0.767,73,0.839,74,0.767,75,0.839,76,0.733,77,1.737,78,0.733,79,0.582,80,1.19,81,0.733,82,0.839,83,0.733,84,0.596,85,1.383,86,0.733,87,0.839,88,0.767,89,0.568,90,0.701,91,0.839,92,0.733,93,0.839,94,0.733,95,0.839,96,0.733,97,1.19,98,0.733,99,0.733,100,0.82,101,0.733,102,0.839,103,0.767,104,0.82,105,0.839,106,0.733,107,0.839,108,0.733,109,0.839,110,0.767,111,0.839,112,0.767,113,0.839,114,0.767,115,0.839,116,1.383,117,0.767,118,0.82,119,0.839,120,0.767,121,0.767,122,0.839,123,0.75,124,0.839,125,1.377,126,1.462,127,0.839,128,0.75,129,0.839,130,0.767,131,0.785,132,0.75,133,0.802,134,0.839,135,0.767,136,0.785,137,0.839,138,0.767,139,0.839,140,0.75,141,0.839,142,0.767,143,0.839,144,0.75,145,0.839,146,0.75,147,0.839,148,0.767,149,0.839,150,0.767,151,0.839,152,0.839,153,0.767,154,0.839,155,0.733,156,0.733,157,0.839,158,0.75,159,0.839,160,0.75,161,0.82,162,0.82,163,0.839,164,0.75,165,0.839,166,0.75,167,0.701,168,0.82,169,0.839,170,0.004,171,0.005,172,0.004,173,1.001,178,1.329,181,0.591,182,1.885,191,0.541,192,0.405,465,1.491,613,3.973,619,4.23,667,3.773,673,1.572,675,1.757,689,3.674,700,3.805,702,2.135,715,3.03,770,2.308,800,2.65,1565,6.653,1987,1.991,2492,3.207,2503,6.653,2504,6.653,2505,3.511,2506,5.634,2507,6.548,2508,5.634,2509,5.634,2510,3.971,2511,3.971,2512,3.971,2513,3.971,2514,3.971,2515,3.971,2516,3.971]],["title/components/LogoutComponent.html",[0,0.136,128,0.843]],["body/components/LogoutComponent.html",[0,0.205,1,0.577,2,0.825,3,0.055,4,0.055,5,0.481,6,0.617,7,0.631,8,0.056,10,1.054,11,1.98,12,0.528,13,1.644,14,1.822,16,0.903,18,0.117,19,0.534,20,2.217,23,0.689,24,0.858,26,0.257,27,0.009,30,0.845,32,0.246,33,0.407,34,0.124,36,0.055,37,0.172,40,0.552,41,0.965,42,0.923,43,0.481,44,1.311,45,0.631,46,0.511,47,0.631,48,0.577,49,1.761,50,1.208,51,0.965,52,0.577,53,0.631,54,0.577,55,0.631,56,0.552,57,0.631,58,0.577,59,0.631,60,0.577,61,0.631,62,0.631,63,0.565,64,0.631,65,0.565,66,0.631,67,0.577,68,0.377,69,0.965,70,0.565,71,0.59,72,0.577,73,0.631,74,0.577,75,0.631,76,0.552,77,1.651,78,0.552,79,0.669,80,0.965,81,0.552,82,0.631,83,0.552,84,0.448,85,1.171,86,0.552,87,0.631,88,0.577,89,0.427,90,0.528,91,0.631,92,0.552,93,0.631,94,0.552,95,0.631,96,0.552,97,0.965,98,0.552,99,0.552,100,0.617,101,0.552,102,0.631,103,0.577,104,0.617,105,0.631,106,0.552,107,0.631,108,0.552,109,0.631,110,0.577,111,0.631,112,0.577,113,0.631,114,0.577,115,0.631,116,1.171,117,0.577,118,0.617,119,0.631,120,0.577,121,0.577,122,0.631,123,0.565,124,0.631,125,0.577,126,0.516,127,0.631,128,1.173,129,0.631,130,0.577,131,0.59,132,0.565,133,0.604,134,0.631,135,0.577,136,1.096,137,0.631,138,0.577,139,0.631,140,0.565,141,0.631,142,0.577,143,0.631,144,0.565,145,0.631,146,0.565,147,0.631,148,0.577,149,0.631,150,0.577,151,0.631,152,0.631,153,0.577,154,0.631,155,0.552,156,0.552,157,0.631,158,0.565,159,0.631,160,0.565,161,0.617,162,0.617,163,0.631,164,0.565,165,0.631,166,0.565,167,0.528,168,0.617,169,0.631,170,0.006,171,0.004,172,0.003,173,0.753,178,1.078,181,0.479,182,1.337,191,0.846,192,0.633,197,1.245,208,1.171,211,3.363,213,4.705,223,2.111,251,2.466,254,4.66,268,1.498,280,2.9,286,1.897,287,2.331,304,2.107,338,0.805,360,1.819,364,1.041,465,1.122,531,2.147,576,2.919,590,2.414,594,2.024,598,0.448,613,5.472,627,2.9,628,3.7,630,2.107,632,2.655,635,1.45,673,1.183,675,1.322,689,3.316,694,2.691,700,3.223,703,1.607,715,4.493,724,2.551,728,1.55,731,4.057,736,1.812,759,1.737,760,2.655,772,1.897,776,2.457,777,2.655,778,2.655,779,2.655,781,1.669,792,2.9,835,1.897,836,4.228,847,3.246,1172,1.897,1323,1.285,1926,2.414,1933,1.897,1987,1.498,2012,1.994,2047,4.247,2049,5.511,2050,2.243,2051,2.243,2052,2.243,2053,3.429,2054,2.243,2055,2.243,2056,2.243,2057,1.994,2062,2.243,2063,2.243,2066,5.339,2076,2.243,2080,3.429,2081,2.243,2089,3.429,2091,2.243,2092,2.243,2093,3.429,2098,3.429,2106,2.243,2107,2.243,2108,3.429,2109,4.163,2110,2.243,2111,2.243,2113,1.897,2114,2.243,2115,2.243,2116,2.243,2117,2.243,2118,4.163,2119,2.107,2120,2.243,2128,2.414,2129,2.642,2130,4.039,2131,2.642,2132,2.642,2133,4.039,2134,4.903,2135,2.642,2136,2.642,2137,2.642,2138,2.642,2139,2.642,2140,2.642,2141,2.642,2142,2.642,2143,2.414,2144,2.642,2145,2.642,2146,2.642,2147,4.039,2148,4.039,2149,4.039,2150,2.642,2151,2.642,2152,2.642,2153,5.49,2154,2.642,2155,2.642,2156,2.642,2157,2.642,2158,2.642,2159,2.642,2160,2.414,2489,4.039,2490,4.039,2492,2.414,2517,4.568,2518,2.988,2519,2.988,2520,2.988,2521,2.988,2522,2.988]],["title/classes/MockAppService.html",[37,0.256,2523,3.606]],["body/classes/MockAppService.html",[3,0.126,4,0.126,8,0.085,18,0.27,24,0.805,27,0.009,36,0.126,37,0.396,170,0.006,171,0.007,172,0.006,182,1.661,208,1.455,298,4.857,323,4.179,568,6.089,569,7.546,585,6.089,1948,6.089,2278,5.17,2523,6.505,2524,6.089,2525,6.888,2526,6.888,2527,6.888]],["title/classes/MockAuthService.html",[37,0.256,2528,3.606]],["body/classes/MockAuthService.html",[3,0.132,4,0.132,8,0.089,27,0.008,36,0.132,37,0.414,170,0.007,171,0.008,172,0.007,2278,5.413,2528,6.68,2529,6.374]],["title/components/ModalComponent.html",[0,0.136,130,0.863]],["body/components/ModalComponent.html",[0,0.244,1,0.753,2,1.004,3,0.071,4,0.071,5,0.628,6,0.805,7,0.824,8,0.069,12,0.688,13,1.666,14,1.86,16,1.099,18,0.153,19,0.65,23,0.9,24,0.826,26,0.23,27,0.009,30,0.702,31,1.341,32,0.226,33,0.531,34,0.161,35,1.892,36,0.071,37,0.224,40,0.72,41,1.175,42,1.124,43,0.628,44,1.493,45,0.824,46,0.492,47,0.824,48,0.753,49,1.835,50,1.004,51,1.175,52,0.753,53,0.824,54,0.753,55,0.824,56,0.72,57,0.824,58,0.753,59,0.824,60,0.753,61,0.824,62,0.824,63,0.737,64,0.824,65,0.737,66,0.824,67,0.753,68,0.493,69,1.175,70,0.737,71,0.77,72,0.753,73,0.824,74,0.753,75,0.824,76,0.72,77,1.732,78,0.72,79,0.571,80,1.175,81,0.72,82,0.824,83,0.72,84,0.585,85,1.369,86,0.72,87,0.824,88,0.753,89,0.558,90,0.688,91,0.824,92,0.72,93,0.824,94,0.72,95,0.824,96,0.72,97,1.175,98,0.72,99,0.72,100,0.805,101,0.72,102,0.824,103,0.753,104,0.805,105,0.824,106,0.72,107,0.824,108,0.72,109,0.824,110,0.753,111,0.824,112,0.753,113,0.824,114,0.753,115,0.824,116,1.369,117,0.753,118,0.805,119,0.824,120,0.753,121,0.753,122,0.824,123,0.737,124,0.824,125,0.753,126,0.673,127,0.824,128,0.737,129,0.824,130,1.366,131,1.615,132,0.737,133,0.788,134,0.824,135,0.753,136,0.77,137,0.824,138,0.753,139,0.824,140,0.737,141,0.824,142,0.753,143,0.824,144,0.737,145,0.824,146,0.737,147,0.824,148,0.753,149,0.824,150,0.753,151,0.824,152,0.824,153,0.753,154,0.824,155,0.72,156,0.72,157,0.824,158,0.737,159,0.824,160,0.737,161,0.805,162,1.149,163,0.824,164,0.737,165,0.824,166,0.737,167,0.982,168,0.805,169,0.824,170,0.004,171,0.005,172,0.004,173,0.983,178,1.312,181,0.583,191,0.531,192,0.397,225,4.493,258,3.711,297,2.602,465,1.465,486,2.475,492,2.787,694,2.699,736,4.286,857,3.531,911,3.922,1199,2.927,1396,2.178,1398,2.602,1428,2.602,1987,1.955,2177,4.917,2445,4.917,2530,3.448,2531,5.562,2532,4.493,2533,6.483,2534,5.562,2535,3.9,2536,4.717,2537,5.562,2538,3.9,2539,3.9,2540,4.326,2541,3.9,2542,3.9,2543,3.9,2544,3.9,2545,3.9,2546,5.562,2547,3.9,2548,4.917,2549,4.917,2550,3.9,2551,3.9,2552,5.562,2553,3.9,2554,3.9]],["title/interfaces/ModalOptions.html",[598,0.67,2540,2.979]],["body/interfaces/ModalOptions.html",[0,0.254,3,0.106,4,0.106,5,1.337,8,0.072,18,0.227,26,0.38,27,0.009,36,0.106,170,0.005,171,0.007,172,0.005,181,0.761,192,0.959,197,1.47,199,1.705,255,3.57,287,2.893,593,4.029,598,0.871,600,1.837,2216,7.341,2217,7.341,2540,4.846,2555,5.132,2556,8.304,2557,8.304,2558,8.304,2559,8.304,2560,6.707]],["title/injectables/ModalService.html",[258,2.979,565,1.125]],["body/injectables/ModalService.html",[0,0.173,3,0.073,4,0.073,8,0.049,18,0.157,19,0.661,23,0.922,24,0.915,26,0.312,27,0.009,30,0.989,31,1.365,32,0.249,33,0.771,34,0.165,35,1.939,36,0.073,37,0.23,42,1.143,46,0.525,131,1.799,167,0.706,170,0.004,171,0.005,172,0.004,185,4.572,191,1.027,192,0.769,199,0.755,208,1.388,210,3.089,220,3.991,223,1.924,247,1.541,251,1.18,255,3.073,258,4.769,286,4.537,287,2.49,297,4.385,298,2.818,300,3.228,323,2.937,360,1.03,364,2.866,435,4.769,465,1.501,492,3.648,523,2.004,565,1.427,566,1.822,576,4.073,583,1.625,593,3.468,694,3.188,728,4.269,736,3.432,1032,2.423,1929,4.249,2059,4.572,2143,3.228,2179,3.533,2213,4.572,2214,6.646,2386,3.533,2387,4.249,2532,6.327,2536,4.769,2540,5.374,2548,5.004,2549,5.004,2560,5.308,2561,3.533,2562,4.572,2563,5.66,2564,7.544,2565,5.66,2566,6.572,2567,7.147,2568,3.997,2569,5.66,2570,3.997,2571,5.66,2572,3.997,2573,5.66,2574,3.997,2575,7.147,2576,7.147,2577,8.228,2578,7.147,2579,7.147,2580,5.66,2581,3.997,2582,3.997,2583,3.997,2584,3.997,2585,5.66,2586,5.66,2587,5.66,2588,5.66,2589,3.997,2590,5.66,2591,5.66,2592,5.66,2593,3.997,2594,3.997,2595,5.66,2596,3.997,2597,3.997,2598,5.66,2599,7.833,2600,5.66,2601,5.66,2602,5.66,2603,5.66,2604,7.147,2605,5.66,2606,3.997,2607,3.997,2608,3.533,2609,5.66,2610,3.997,2611,5.66,2612,3.997,2613,3.997,2614,3.997,2615,3.997,2616,3.997,2617,3.997]],["title/injectables/ModalStateService.html",[565,1.125,2536,2.979]],["body/injectables/ModalStateService.html",[0,0.265,3,0.103,4,0.103,5,1.365,8,0.069,18,0.221,24,0.914,26,0.323,27,0.009,32,0.272,34,0.233,35,2.735,36,0.103,37,0.324,131,1.815,167,0.995,170,0.005,171,0.007,172,0.005,181,0.747,247,2.173,297,3.761,312,3.981,492,3.779,523,2.826,536,4.757,565,1.797,566,2.57,583,2.292,857,4.525,919,3.065,1032,3.418,1041,5.758,1315,3.981,1886,5.027,1938,5.794,2214,6.636,2387,5.352,2532,6.636,2536,4.757,2540,5.217,2562,5.758,2608,6.303,2618,7.264,2619,4.984,2620,7.129,2621,6.303,2622,7.129,2623,7.129,2624,7.129,2625,7.129,2626,7.129,2627,7.819,2628,5.637,2629,8.216,2630,5.637,2631,7.129,2632,5.637]],["title/directives/ModalTemplateDirective.html",[43,0.719,166,0.843]],["body/directives/ModalTemplateDirective.html",[0,0.225,3,0.108,4,0.108,5,1.348,8,0.073,12,1.048,13,1.413,23,1.369,24,0.694,26,0.246,27,0.009,32,0.256,34,0.246,36,0.108,37,0.341,43,1.348,46,0.413,131,1.775,155,1.096,166,1.391,167,1.3,168,1.521,170,0.005,171,0.007,172,0.005,191,0.808,192,0.605,297,3.961,619,5.528,663,3.961,694,4.313,919,3.598,1041,6.76,1938,5.192,1987,2.976,1999,6.51,2387,5.528,2536,5.585,2562,5.948,2621,6.51,2633,6.51,2634,5.248,2635,7.363,2636,7.363,2637,7.363,2638,7.363,2639,5.936,2640,7.363,2641,5.936,2642,5.936,2643,5.936]],["title/components/MoveShapeComponent.html",[0,0.136,132,0.843]],["body/components/MoveShapeComponent.html",[0,0.187,1,0.678,2,0.93,3,0.064,4,0.064,5,0.565,6,0.724,7,0.741,8,0.063,10,1.188,12,0.619,13,1.658,14,1.842,16,1.018,18,0.137,19,0.602,23,0.809,24,0.786,26,0.253,27,0.009,30,0.443,31,0.846,32,0.234,33,0.478,34,0.145,36,0.064,37,0.201,40,0.648,41,1.088,42,1.448,43,0.565,44,1.421,45,0.741,46,0.468,47,0.741,48,0.678,49,1.813,50,0.93,51,1.088,52,0.678,53,0.741,54,0.678,55,0.741,56,0.648,57,0.741,58,0.678,59,0.741,60,0.678,61,0.741,62,0.741,63,0.663,64,0.741,65,0.663,66,0.741,67,0.678,68,0.443,69,1.088,70,0.663,71,0.693,72,0.678,73,0.741,74,0.678,75,0.741,76,0.648,77,1.701,78,0.648,79,0.514,80,1.088,81,0.648,82,0.741,83,0.648,84,0.526,85,1.289,86,0.648,87,0.741,88,0.678,89,0.502,90,0.619,91,0.741,92,0.648,93,0.741,94,0.648,95,0.741,96,0.648,97,1.088,98,0.648,99,0.648,100,0.724,101,0.648,102,0.741,103,0.678,104,0.724,105,0.741,106,0.648,107,0.741,108,0.648,109,0.741,110,0.678,111,0.741,112,0.678,113,0.741,114,0.678,115,0.741,116,1.289,117,0.678,118,0.724,119,0.741,120,0.678,121,0.678,122,0.741,123,0.663,124,0.741,125,0.678,126,0.605,127,0.741,128,0.663,129,0.741,130,0.678,131,0.693,132,1.271,133,1.605,134,0.741,135,0.678,136,0.693,137,0.741,138,0.678,139,0.741,140,0.663,141,0.741,142,0.678,143,0.741,144,0.663,145,0.741,146,0.663,147,0.741,148,0.678,149,0.741,150,0.678,151,0.741,152,0.741,153,0.678,154,0.741,155,0.648,156,0.648,157,0.741,158,0.663,159,0.741,160,0.663,161,0.724,162,0.724,163,0.741,164,0.663,165,0.741,166,0.663,167,0.619,168,0.724,169,0.741,170,0.003,171,0.005,172,0.003,173,0.884,178,1.215,181,0.54,191,0.478,192,0.357,197,0.96,208,1.088,251,1.986,279,2.701,306,2.473,326,4.583,360,2.089,364,1.794,433,2.473,435,3.437,450,4.583,451,2.473,570,2.633,574,3.632,579,2.473,584,2.473,594,0.967,673,1.388,675,1.552,770,2.038,910,5.434,963,2.473,964,2.473,973,5.397,982,4.931,985,2.833,986,2.633,1000,4.554,1005,2.833,1007,3.101,1009,3.101,1010,3.101,1011,3.101,1012,2.833,1036,3.867,1171,2.473,1177,5.788,1180,3.101,1189,3.101,1190,3.101,1191,3.101,1193,3.101,1196,4.554,1198,2.633,1199,3.867,1200,3.101,1201,3.101,1202,4.554,1203,4.554,1204,4.554,1205,3.101,1206,4.554,1207,3.101,1208,3.101,1209,3.101,1210,4.554,1211,3.101,1212,3.101,1213,4.554,1214,3.101,1215,3.101,1216,4.554,1217,3.101,1218,4.554,1219,3.101,1220,3.101,1221,3.101,1222,3.101,1223,3.101,1224,3.101,1225,3.101,1227,3.101,1228,4.554,1229,4.554,1230,4.554,1231,4.554,1232,4.554,1396,1.959,1398,2.34,2113,2.226,2431,2.833,2644,5.788,2645,3.101,2646,4.161,2647,6.105,2648,5.151,2649,5.151,2650,3.507,2651,5.151,2652,3.507,2653,3.507,2654,3.507,2655,5.151,2656,3.507]],["title/interfaces/NavItem.html",[598,0.67,2657,3.352]],["body/interfaces/NavItem.html",[3,0.111,4,0.111,8,0.075,18,0.239,26,0.37,27,0.009,32,0.212,34,0.252,36,0.136,170,0.006,171,0.007,172,0.006,181,0.784,192,0.948,197,1.431,199,1.667,341,3.042,382,3.343,598,1.123,600,1.928,919,3.631,965,4.908,1767,6.822,2657,6.341,2658,4.921,2659,7.467,2660,7.467,2661,7.467,2662,7.467,2663,4.574,2664,5.386,2665,5.386]],["title/components/PageHeadingComponent.html",[0,0.136,135,0.863]],["body/components/PageHeadingComponent.html",[0,0.21,1,0.841,2,1.085,3,0.079,4,0.079,5,0.701,6,0.899,7,0.92,8,0.074,10,1.387,11,2.457,12,0.769,13,1.674,14,1.882,16,1.187,18,0.171,19,0.702,20,2.649,23,1.588,24,0.702,27,0.008,30,0.55,31,1.449,32,0.152,33,0.593,34,0.18,36,0.079,37,0.25,40,0.804,41,1.269,42,1.214,43,0.701,44,1.567,45,0.92,46,0.479,47,0.92,48,0.841,49,1.845,50,1.085,51,1.269,52,0.841,53,0.92,54,0.841,55,0.92,56,0.804,57,0.92,58,0.841,59,0.92,60,0.841,61,0.92,62,0.92,63,0.823,64,0.92,65,0.823,66,0.92,67,0.841,68,0.55,69,1.269,70,0.823,71,0.86,72,0.841,73,0.92,74,0.841,75,0.92,76,0.804,77,1.761,78,0.804,79,0.638,80,1.269,81,0.804,82,0.92,83,0.804,84,0.653,85,1.453,86,0.804,87,0.92,88,0.841,89,0.623,90,0.769,91,0.92,92,0.804,93,0.92,94,0.804,95,0.92,96,0.804,97,1.269,98,0.804,99,0.804,100,0.899,101,0.804,102,0.92,103,0.841,104,0.899,105,0.92,106,0.804,107,0.92,108,0.804,109,0.92,110,0.841,111,0.92,112,0.841,113,0.92,114,0.841,115,0.92,116,1.453,117,0.841,118,0.899,119,0.92,120,0.841,121,0.841,122,0.92,123,0.823,124,0.92,125,0.841,126,0.751,127,0.92,128,0.823,129,0.92,130,0.841,131,0.86,132,0.823,133,0.88,134,0.92,135,1.434,136,1.661,137,0.92,138,0.841,139,0.92,140,0.823,141,0.92,142,0.841,143,0.92,144,0.823,145,0.92,146,0.823,147,0.92,148,0.841,149,0.92,150,0.841,151,0.92,152,0.92,153,0.841,154,0.92,155,0.804,156,0.804,157,0.92,158,0.823,159,0.92,160,0.823,161,0.899,162,0.899,163,0.92,164,0.823,165,0.92,166,0.823,167,0.769,168,0.899,169,0.92,170,0.004,171,0.006,172,0.004,173,1.098,178,1.418,2666,6.084,2667,6.084,2668,3.85,2669,6.01,2670,6.882,2671,6.01,2672,4.355,2673,4.355]],["title/interfaces/PageNav.html",[598,0.67,2663,3.352]],["body/interfaces/PageNav.html",[3,0.121,4,0.121,8,0.082,18,0.26,26,0.326,27,0.009,32,0.231,34,0.274,36,0.144,170,0.006,171,0.007,172,0.006,181,0.825,197,1.321,199,1.487,341,2.49,382,2.623,598,1.181,600,2.097,919,3.385,965,3.852,1767,5.354,2657,6.827,2658,5.354,2659,5.86,2660,5.86,2661,5.86,2662,5.86,2663,5.91,2664,7.682,2665,7.682]],["title/components/PrivacyComponent.html",[0,0.136,138,0.863]],["body/components/PrivacyComponent.html",[0,0.241,1,0.876,2,1.116,3,0.083,4,0.083,5,0.73,6,0.937,7,0.958,8,0.076,12,0.801,13,1.677,14,1.882,16,1.221,27,0.008,32,0.158,33,0.618,34,0.188,36,0.083,37,0.261,40,0.838,41,1.305,42,1.249,43,0.73,44,1.594,45,0.958,46,0.49,47,0.958,48,0.876,49,1.862,50,1.116,51,1.305,52,0.876,53,0.958,54,0.876,55,0.958,56,0.838,57,0.958,58,0.876,59,0.958,60,0.876,61,0.958,62,0.958,63,0.857,64,0.958,65,0.857,66,0.958,67,0.876,68,0.573,69,1.305,70,0.857,71,0.896,72,0.876,73,0.958,74,0.876,75,0.958,76,0.838,77,1.771,78,0.838,79,0.665,80,1.305,81,0.838,82,0.958,83,0.838,84,0.681,85,1.485,86,0.838,87,0.958,88,0.876,89,0.649,90,0.801,91,0.958,92,0.838,93,0.958,94,0.838,95,0.958,96,0.838,97,1.305,98,0.838,99,0.838,100,0.937,101,0.838,102,0.958,103,0.876,104,0.937,105,0.958,106,0.838,107,0.958,108,0.838,109,0.958,110,0.876,111,0.958,112,0.876,113,0.958,114,0.876,115,0.958,116,1.485,117,0.876,118,0.937,119,0.958,120,0.876,121,0.876,122,0.958,123,0.857,124,0.958,125,0.876,126,0.783,127,0.958,128,0.857,129,0.958,130,0.876,131,0.896,132,0.857,133,0.916,134,0.958,135,0.876,136,0.896,137,0.958,138,1.458,139,1.668,140,0.857,141,0.958,142,0.876,143,0.958,144,0.857,145,0.958,146,0.857,147,0.958,148,0.876,149,0.958,150,0.876,151,0.958,152,0.958,153,0.876,154,0.958,155,0.838,156,0.838,157,0.958,158,0.857,159,0.958,160,0.857,161,0.937,162,0.937,163,0.958,164,0.857,165,0.958,166,0.857,167,0.801,168,0.937,169,0.958,170,0.004,171,0.006,172,0.004,291,5.464,298,4.358,1271,4.358,2674,4.011,2675,6.181]],["title/components/ProductsComponent.html",[0,0.136,140,0.843]],["body/components/ProductsComponent.html",[0,0.18,1,0.638,2,0.889,3,0.06,4,0.06,5,0.531,6,0.682,7,0.697,8,0.061,10,1.136,11,2.103,12,0.583,13,1.653,14,1.832,16,0.973,18,0.129,19,0.575,20,2.332,23,0.761,24,0.887,26,0.349,27,0.009,30,0.825,31,1.575,32,0.227,33,0.449,34,0.137,36,0.06,37,0.19,40,0.61,41,1.04,42,0.995,43,0.531,44,1.379,45,0.697,46,0.51,47,0.697,48,0.638,49,1.8,50,0.889,51,1.04,52,0.638,53,0.697,54,0.638,55,0.697,56,0.61,57,0.697,58,0.638,59,0.697,60,0.638,61,0.697,62,0.697,63,0.624,64,0.697,65,0.624,66,0.697,67,0.638,68,0.417,69,1.04,70,0.624,71,0.652,72,0.638,73,0.697,74,0.638,75,0.697,76,0.61,77,1.682,78,0.61,79,0.483,80,1.04,81,0.61,82,0.697,83,0.61,84,0.495,85,1.244,86,0.61,87,0.697,88,0.638,89,1.206,90,0.583,91,0.697,92,0.61,93,0.697,94,0.61,95,0.697,96,0.61,97,1.04,98,0.61,99,0.61,100,0.682,101,0.61,102,0.697,103,0.638,104,0.682,105,0.697,106,0.61,107,0.697,108,0.61,109,0.697,110,0.638,111,0.697,112,0.638,113,0.697,114,0.638,115,0.697,116,1.244,117,0.638,118,0.682,119,0.697,120,0.638,121,0.638,122,0.697,123,0.624,124,0.697,125,0.638,126,0.57,127,0.697,128,0.624,129,0.697,130,0.638,131,0.652,132,0.624,133,0.667,134,0.697,135,0.638,136,0.652,137,0.697,138,0.638,139,0.697,140,1.234,141,0.697,142,0.638,143,0.697,144,0.624,145,0.697,146,0.624,147,0.697,148,0.638,149,0.697,150,0.638,151,0.697,152,0.697,153,0.638,154,0.697,155,0.61,156,0.61,157,0.697,158,0.624,159,0.697,160,0.624,161,0.682,162,0.682,163,0.697,164,0.624,165,0.697,166,0.624,167,0.583,168,0.682,169,0.697,170,0.003,171,0.005,172,0.003,173,0.832,178,1.162,181,0.516,191,0.802,192,0.6,202,1.918,203,1.918,223,1.122,231,3.697,232,3.697,243,3.473,245,4.354,271,1.918,338,0.89,364,3.125,465,1.24,767,1.918,769,4.331,1086,4.758,1092,3.931,1096,2.918,1102,6.266,1162,2.095,1396,4.535,1397,3.473,1774,4.354,1779,2.478,1783,3.978,1784,3.978,1859,4.354,1875,5.774,2676,2.918,2677,6.133,2678,5.891,2679,4.924,2680,4.924,2681,4.924,2682,6.531,2683,3.3,2684,6.479,2685,3.3,2686,4.924,2687,7.053,2688,3.3,2689,7.328,2690,4.924,2691,3.3,2692,3.3,2693,3.3,2694,4.924,2695,4.924,2696,4.924,2697,4.924,2698,6.531,2699,4.924,2700,4.924,2701,4.924,2702,4.924,2703,4.924,2704,4.924,2705,4.924,2706,3.3,2707,3.3,2708,3.3,2709,3.3,2710,3.3,2711,3.3,2712,3.3,2713,3.3,2714,4.924]],["title/interfaces/RedirectAuthenticationResult.html",[598,0.67,775,2.707]],["body/interfaces/RedirectAuthenticationResult.html",[3,0.06,4,0.06,8,0.04,18,0.128,19,0.381,26,0.202,27,0.009,32,0.242,34,0.135,36,0.138,37,0.187,46,0.227,50,0.589,90,1.47,126,0.563,170,0.003,171,0.005,172,0.003,181,0.512,182,1.876,197,1.19,199,0.922,208,1.892,210,2.75,218,1.896,223,1.109,247,1.258,251,2.39,266,1.636,287,1.701,322,3.099,348,1.444,360,1.674,364,2.262,377,1.978,382,2.57,458,1.896,480,2.16,503,3.904,531,1.534,565,1.231,576,3.268,583,1.327,593,1.583,594,1.917,598,0.974,600,1.032,621,2.726,632,1.896,635,1.583,667,3.486,673,1.291,675,1.444,689,1.534,694,2.838,700,1.896,702,1.755,703,1.755,710,1.978,711,2.301,712,2.301,713,4.125,714,2.301,715,3.739,719,2.301,720,2.301,721,2.177,722,2.301,724,3.883,726,3.443,727,2.177,728,4.534,729,2.301,732,2.301,734,2.301,738,2.301,740,4.333,744,2.301,746,2.301,749,2.301,751,2.301,753,2.301,755,3.714,759,2.837,760,1.896,765,2.301,766,2.071,767,2.837,768,3.443,769,1.693,770,1.896,771,3.904,772,2.071,773,2.96,774,2.96,775,3.547,776,4.277,777,2.837,778,2.837,779,3.774,780,1.444,781,1.822,782,3.904,783,1.258,784,4.125,785,2.301,786,2.071,787,2.301,788,2.301,789,2.301,790,2.177,791,3.443,792,4.414,793,2.071,794,2.301,795,2.301,796,4.125,797,2.301,798,2.301,799,2.301,800,4.639,801,2.301,802,2.301,803,3.443,804,2.301,805,2.301,806,2.301,807,2.301,808,3.443,809,2.301,810,2.301,811,2.301,812,5.404,813,3.714,814,2.177,815,2.301,816,2.301,817,2.177,818,2.301,819,2.301,820,2.301,821,3.443,822,2.301,823,3.443,824,2.301,825,1.978,826,4.579,827,4.125,828,2.301,829,3.443,830,2.071,831,2.301,832,2.301,833,1.978,834,2.301,835,2.071,836,4.746,837,4.579,838,2.301,839,3.443,840,4.125,841,5.334,842,3.443,843,2.301,844,3.443,845,2.301,846,4.125,847,2.838,848,3.443,849,3.443,850,2.301,851,3.443,852,2.301,853,3.443,854,2.301,855,2.301,856,2.301,857,2.071,858,2.301,859,3.443,860,2.301,861,2.301,862,3.443,863,3.443,864,3.443,865,2.301,866,2.301,867,2.301,868,2.301,869,2.301,870,2.301,871,2.301,872,3.443,873,2.301,874,2.301,875,4.125,876,4.125,877,2.301,878,2.301,879,2.301,880,2.301,881,2.301,882,2.301,883,2.301,884,2.301,885,2.177,886,2.301,887,2.301,888,2.301,889,3.443,890,2.177,891,2.177,892,2.301,893,2.301,894,2.301,895,2.177,896,3.443,897,2.301,898,2.301,899,2.301,900,2.301,901,2.301,902,2.301,903,2.301,904,2.301,905,2.301]],["title/interfaces/ResetPasswordToken.html",[598,0.67,1402,3.352]],["body/interfaces/ResetPasswordToken.html",[3,0.121,4,0.121,8,0.082,18,0.259,26,0.359,27,0.009,36,0.143,170,0.006,171,0.007,172,0.006,181,0.824,197,1.472,598,1.18,600,2.094,1322,2.765,1400,4.967,1401,5.344,1402,5.904,1403,7.678,1404,6.519,1405,7.678,1406,7.678]],["title/pipes/SafePipe.html",[1914,2.707,2715,3.148]],["body/pipes/SafePipe.html",[3,0.122,4,0.122,8,0.082,10,1.537,12,1.176,19,0.779,24,0.779,27,0.009,30,0.842,32,0.275,34,0.276,36,0.122,37,0.383,46,0.586,170,0.006,171,0.007,172,0.006,191,0.907,192,0.679,208,1.407,265,4.699,266,3.341,465,2.503,731,4.041,1914,4.789,1916,4.699,1920,4.23,1924,5.929,2715,5.57,2716,5.891,2717,7.899,2718,7.899,2719,6.664,2720,7.899,2721,6.664,2722,6.664]],["title/components/SearchInputComponent.html",[0,0.136,142,0.863]],["body/components/SearchInputComponent.html",[0,0.174,1,0.604,2,0.853,3,0.057,4,0.057,5,0.503,6,0.645,7,0.66,8,0.058,10,1.09,11,2.035,12,0.552,13,1.648,14,1.822,16,0.934,18,0.122,19,0.552,20,2.269,21,2.37,23,1.315,24,1.014,26,0.341,27,0.009,30,0.72,31,1.532,32,0.221,33,1.123,34,0.129,36,0.057,37,0.179,40,0.577,41,0.998,42,0.955,43,0.503,44,1.342,45,0.66,46,0.442,47,0.66,48,0.604,49,1.788,50,0.853,51,0.998,52,0.604,53,0.66,54,0.604,55,0.66,56,0.577,57,0.66,58,0.604,59,0.66,60,0.604,61,0.66,62,0.66,63,0.59,64,0.66,65,0.59,66,0.66,67,0.604,68,0.395,69,0.998,70,0.59,71,0.617,72,0.604,73,0.66,74,0.604,75,0.66,76,0.577,77,1.665,78,0.577,79,0.458,80,0.998,81,0.577,82,0.66,83,0.577,84,0.469,85,1.204,86,0.577,87,0.66,88,0.604,89,0.447,90,0.552,91,0.66,92,0.577,93,0.66,94,0.577,95,0.66,96,0.577,97,0.998,98,0.577,99,0.577,100,0.645,101,0.577,102,0.66,103,0.604,104,0.645,105,0.66,106,0.577,107,0.66,108,0.577,109,0.66,110,0.604,111,0.66,112,0.604,113,0.66,114,0.604,115,0.66,116,1.204,117,0.604,118,0.645,119,0.66,120,0.604,121,0.604,122,0.66,123,0.59,124,0.66,125,0.604,126,0.539,127,0.66,128,0.59,129,0.66,130,0.604,131,0.617,132,0.59,133,0.631,134,0.66,135,0.604,136,0.617,137,0.66,138,0.604,139,0.66,140,0.59,141,0.66,142,1.228,143,1.78,144,0.59,145,0.66,146,0.59,147,0.66,148,0.604,149,0.66,150,0.604,151,0.66,152,0.66,153,0.604,154,0.66,155,0.577,156,0.577,157,0.66,158,0.59,159,0.66,160,0.59,161,0.645,162,0.645,163,0.66,164,0.59,165,0.66,166,0.59,167,0.834,168,0.645,169,0.66,170,0.004,171,0.004,172,0.003,173,0.788,178,1.115,181,0.495,191,0.425,192,0.318,197,1.236,208,1.441,223,2.32,338,1.84,341,2.387,360,0.805,401,4.019,468,3.817,523,1.567,594,0.861,667,2.37,673,1.237,674,3.817,675,1.383,702,1.68,770,1.816,833,1.895,847,1.516,913,3.333,923,4.019,929,3,965,1.816,995,3.02,1032,2.866,1034,1.775,1036,3.548,1101,4.604,1179,4.604,1182,5.799,1183,5.133,1226,4.178,1234,2.762,1304,2.522,1329,2.957,1526,2.524,1527,5.039,1528,4.178,2723,7.717,2724,7.717,2725,6.354,2726,5.7,2727,5.7,2728,4.726,2729,6.354,2730,5.7,2731,6.354,2732,5.7,2733,4.726,2734,3.125,2735,3.125,2736,3.125,2737,3.125,2738,3.125,2739,3.125,2740,3.125,2741,3.125,2742,3.125,2743,3.125,2744,3.125,2745,4.726,2746,6.354,2747,3.125,2748,3.125,2749,4.726,2750,3.125,2751,3.125,2752,3.125,2753,3.125,2754,4.726,2755,3.125,2756,3.125,2757,3.125,2758,3.125,2759,3.125,2760,3.125,2761,3.125,2762,3.125,2763,4.726,2764,3.125,2765,3.125,2766,4.726,2767,3.125,2768,3.125,2769,3.125,2770,3.125,2771,3.125,2772,3.125,2773,3.125]],["title/modules/SharedModule.html",[518,2.401,529,2.707]],["body/modules/SharedModule.html",[0,0.211,1,1.475,2,0.968,3,0.042,4,0.042,8,0.028,27,0.009,32,0.261,34,0.095,35,1.111,36,0.126,37,0.132,40,0.423,48,1.5,52,1.475,56,1.455,58,1.475,60,1.475,67,1.5,70,1.467,76,1.455,78,1.455,81,1.455,83,1.455,86,1.455,88,1.475,92,1.455,94,1.455,96,1.455,98,1.455,99,1.455,101,1.455,104,0.964,106,1.455,108,1.455,110,1.475,117,1.475,120,1.475,121,1.475,123,1.539,125,1.475,128,1.507,130,1.475,135,1.475,142,1.475,148,1.475,150,1.475,153,1.475,156,1.411,160,1.443,164,1.443,166,1.443,167,0.404,170,0.002,171,0.003,172,0.002,182,0.552,202,1.331,203,3.115,204,1.454,208,0.484,257,2.829,268,1.148,312,2.605,341,0.86,359,0.906,361,5.183,363,4.755,364,2.051,395,1.454,518,1.231,520,2.829,521,1.389,522,3.113,523,1.858,524,3.113,529,5.749,530,2.472,531,1.076,533,1.615,536,2.472,539,1.615,576,1.076,635,1.111,656,4.442,671,1.454,703,1.992,786,1.454,1021,2.781,1024,3.275,1032,1.389,1059,2.781,1061,3.275,1354,2.561,1429,4.125,1522,5.577,1734,2.781,1748,3.275,1805,3.275,1839,1.85,1915,5.385,1916,4.151,1987,1.858,2160,1.85,2372,4.442,2461,4.442,2715,5.385,2774,2.024,2775,2.024,2776,2.024,2777,2.024,2778,5.385,2779,5.385,2780,4.442,2781,1.85,2782,3.705,2783,3.705,2784,3.705,2785,5.887,2786,4.666,2787,3.705,2788,5.361,2789,4.666,2790,4.666,2791,2.29,2792,2.024,2793,2.29,2794,2.29,2795,2.29,2796,2.29,2797,2.29,2798,2.29,2799,2.29,2800,2.29,2801,2.29,2802,2.29,2803,2.29,2804,2.29,2805,2.29,2806,2.29,2807,3.705,2808,6.631,2809,2.024,2810,1.85,2811,2.024,2812,2.29]],["title/components/ShopComponent.html",[0,0.136,144,0.843]],["body/components/ShopComponent.html",[0,0.214,1,0.873,2,1.113,3,0.082,4,0.082,5,0.728,6,0.934,7,0.955,8,0.076,12,0.798,13,1.677,14,1.882,16,1.218,27,0.008,32,0.157,33,0.615,34,0.187,36,0.082,37,0.26,40,0.835,41,1.302,42,1.245,43,0.728,44,1.592,45,0.955,46,0.489,47,0.955,48,0.873,49,1.862,50,1.113,51,1.302,52,0.873,53,0.955,54,0.873,55,0.955,56,0.835,57,0.955,58,0.873,59,0.955,60,0.873,61,0.955,62,0.955,63,0.854,64,0.955,65,0.854,66,0.955,67,0.873,68,0.571,69,1.302,70,0.854,71,0.893,72,0.873,73,0.955,74,0.873,75,0.955,76,0.835,77,1.771,78,0.835,79,0.662,80,1.302,81,0.835,82,0.955,83,0.835,84,0.678,85,1.482,86,0.835,87,0.955,88,0.873,89,0.646,90,0.798,91,0.955,92,0.835,93,0.955,94,0.835,95,0.955,96,0.835,97,1.302,98,0.835,99,0.835,100,0.934,101,0.835,102,0.955,103,0.873,104,0.934,105,0.955,106,0.835,107,0.955,108,0.835,109,0.955,110,0.873,111,0.955,112,0.873,113,0.955,114,0.873,115,0.955,116,1.482,117,0.873,118,0.934,119,0.955,120,0.873,121,0.873,122,0.955,123,0.854,124,0.955,125,0.873,126,0.78,127,0.955,128,0.854,129,0.955,130,0.873,131,0.893,132,0.854,133,0.913,134,0.955,135,0.873,136,0.893,137,0.955,138,0.873,139,0.955,140,0.854,141,0.955,142,0.873,143,0.955,144,1.424,145,0.955,146,0.854,147,0.955,148,0.873,149,0.955,150,0.873,151,0.955,152,0.955,153,0.873,154,0.955,155,0.835,156,0.835,157,0.955,158,0.854,159,0.955,160,0.854,161,0.934,162,0.934,163,0.955,164,0.854,165,0.955,166,0.854,167,0.798,168,0.934,169,0.955,170,0.004,171,0.006,172,0.004,173,1.139,178,1.454,1083,4.98,1933,3.914,2677,4.98,2813,3.996,2814,6.664,2815,7.017,2816,6.165]],["title/modules/ShopModule.html",[518,2.401,2817,3.352]],["body/modules/ShopModule.html",[3,0.112,4,0.112,8,0.076,27,0.009,32,0.312,34,0.254,36,0.112,37,0.353,40,1.135,65,1.671,140,1.671,144,1.671,170,0.006,171,0.007,172,0.006,268,3.08,271,3.57,312,3.43,395,3.9,518,3.304,520,3.725,521,3.725,522,5.424,523,3.08,524,4.099,529,5.362,530,5.018,531,2.888,533,5.303,536,5.018,539,4.332,547,3.57,1297,4.962,2817,6.943,2818,5.431,2819,5.431,2820,6.143,2821,6.143,2822,6.143,2823,6.143,2824,6.143,2825,6.143]],["title/components/SignalrComponent.html",[0,0.136,146,0.843]],["body/components/SignalrComponent.html",[0,0.215,1,0.875,2,1.115,3,0.083,4,0.083,5,0.73,6,0.936,7,0.957,8,0.076,12,0.8,13,1.677,14,1.882,16,1.22,27,0.008,32,0.158,33,0.617,34,0.187,36,0.083,37,0.26,40,0.837,41,1.304,42,1.248,43,0.73,44,1.593,45,0.957,46,0.489,47,0.957,48,0.875,49,1.862,50,1.115,51,1.304,52,0.875,53,0.957,54,0.875,55,0.957,56,0.837,57,0.957,58,0.875,59,0.957,60,0.875,61,0.957,62,0.957,63,0.856,64,0.957,65,0.856,66,0.957,67,0.875,68,0.572,69,1.304,70,0.856,71,0.895,72,0.875,73,0.957,74,0.875,75,0.957,76,0.837,77,1.771,78,0.837,79,0.664,80,1.304,81,0.837,82,0.957,83,0.837,84,0.68,85,1.484,86,0.837,87,0.957,88,0.875,89,0.648,90,0.8,91,0.957,92,0.837,93,0.957,94,0.837,95,0.957,96,0.837,97,1.304,98,0.837,99,0.837,100,0.936,101,0.837,102,0.957,103,0.875,104,0.936,105,0.957,106,0.837,107,0.957,108,0.837,109,0.957,110,0.875,111,0.957,112,0.875,113,0.957,114,0.875,115,0.957,116,1.484,117,0.875,118,0.936,119,0.957,120,0.875,121,0.875,122,0.957,123,0.856,124,0.957,125,0.875,126,0.782,127,0.957,128,0.856,129,0.957,130,0.875,131,0.895,132,0.856,133,1.419,134,0.957,135,0.875,136,0.895,137,0.957,138,0.875,139,0.957,140,0.856,141,0.957,142,0.875,143,0.957,144,0.856,145,0.957,146,1.425,147,0.957,148,0.875,149,0.957,150,0.875,151,0.957,152,0.957,153,0.875,154,0.957,155,0.837,156,0.837,157,0.957,158,0.856,159,0.957,160,0.856,161,0.936,162,0.936,163,0.957,164,0.856,165,0.957,166,0.856,167,0.8,168,0.936,169,0.957,170,0.004,171,0.006,172,0.004,173,1.142,178,1.457,970,4.988,2646,4.988,2826,4.006,2827,5.46,2828,7.026,2829,6.176]],["title/modules/SignalrModule.html",[518,2.401,2830,3.352]],["body/modules/SignalrModule.html",[3,0.108,4,0.108,8,0.073,27,0.009,32,0.313,34,0.246,36,0.108,37,0.341,40,1.096,63,1.657,132,1.657,133,1.487,146,1.657,158,1.657,170,0.005,171,0.007,172,0.005,268,2.976,271,3.45,312,3.315,395,3.768,518,3.192,520,3.599,521,3.599,522,5.341,523,2.976,524,3.961,529,5.317,530,4.913,531,2.79,533,5.192,536,4.913,539,4.186,547,3.45,1297,4.795,2644,4.795,2830,6.963,2831,5.248,2832,5.248,2833,5.936,2834,5.936,2835,5.936,2836,5.936,2837,5.936,2838,5.936,2839,5.936]],["title/interfaces/SuccessAuthenticationResult.html",[598,0.67,773,2.707]],["body/interfaces/SuccessAuthenticationResult.html",[3,0.059,4,0.059,8,0.04,18,0.127,19,0.38,26,0.241,27,0.009,32,0.242,34,0.134,36,0.138,37,0.187,46,0.226,50,0.587,90,1.469,126,0.56,170,0.003,171,0.004,172,0.003,181,0.51,182,1.873,197,1.188,199,0.919,208,1.891,210,2.743,218,1.888,223,1.104,247,1.252,251,2.388,266,1.629,287,1.695,322,3.089,348,1.437,360,1.67,364,2.257,377,1.97,382,2.565,458,1.888,480,2.153,503,3.893,531,1.527,565,1.227,576,3.262,583,1.321,593,1.576,594,1.913,598,0.972,600,1.028,621,2.717,632,1.888,635,1.576,667,3.48,673,1.286,675,1.437,689,1.527,694,3.535,700,1.888,702,1.747,703,1.747,710,1.97,711,2.291,712,2.291,713,4.114,714,2.291,715,3.732,719,2.291,720,2.291,721,2.167,722,2.291,724,3.875,726,3.431,727,2.167,728,4.531,729,2.291,732,2.291,734,2.291,738,2.291,740,4.324,744,2.291,746,2.291,749,2.291,751,2.291,753,2.291,755,3.704,759,2.828,760,1.888,765,2.291,766,2.062,767,2.828,768,3.431,769,1.685,770,1.888,771,3.893,772,2.062,773,3.538,774,2.951,775,2.951,776,4.272,777,3.766,778,2.828,779,2.828,780,1.437,781,1.814,782,3.893,783,1.252,784,4.114,785,2.291,786,2.062,787,2.291,788,2.291,789,2.291,790,2.167,791,3.431,792,4.405,793,2.062,794,2.291,795,2.291,796,4.114,797,2.291,798,2.291,799,2.291,800,4.631,801,2.291,802,2.291,803,3.431,804,2.291,805,2.291,806,2.291,807,2.291,808,3.431,809,2.291,810,2.291,811,2.291,812,5.398,813,3.704,814,2.167,815,2.291,816,2.291,817,2.167,818,2.291,819,2.291,820,2.291,821,3.431,822,2.291,823,3.431,824,2.291,825,1.97,826,4.569,827,4.114,828,2.291,829,3.431,830,2.062,831,2.291,832,2.291,833,1.97,834,2.291,835,2.062,836,4.742,837,4.569,838,2.291,839,3.431,840,4.114,841,5.326,842,3.431,843,2.291,844,3.431,845,2.291,846,4.114,847,2.831,848,3.431,849,3.431,850,2.291,851,3.431,852,2.291,853,3.431,854,2.291,855,2.291,856,2.291,857,2.062,858,2.291,859,3.431,860,2.291,861,2.291,862,3.431,863,3.431,864,3.431,865,2.291,866,2.291,867,2.291,868,2.291,869,2.291,870,2.291,871,2.291,872,3.431,873,2.291,874,2.291,875,4.114,876,4.114,877,2.291,878,2.291,879,2.291,880,2.291,881,2.291,882,2.291,883,2.291,884,2.291,885,2.167,886,2.291,887,2.291,888,2.291,889,3.431,890,2.167,891,2.167,892,2.291,893,2.291,894,2.291,895,2.167,896,3.431,897,2.291,898,2.291,899,2.291,900,2.291,901,2.291,902,2.291,903,2.291,904,2.291,905,2.291]],["title/interceptors/TimingInterceptor.html",[655,3.148,2780,3.148]],["body/interceptors/TimingInterceptor.html",[3,0.111,4,0.111,8,0.075,10,1.408,18,0.239,19,0.875,23,1.87,24,0.875,26,0.252,27,0.009,30,0.771,32,0.294,34,0.252,36,0.111,37,0.35,46,0.425,170,0.006,171,0.007,172,0.006,191,0.831,192,0.622,194,3.546,208,1.289,277,4.072,360,1.931,565,1.888,657,4.581,659,5.623,661,6.05,662,6.344,663,5.408,664,6.344,666,4.929,667,4.064,668,5.623,669,4.581,671,3.874,673,2.415,675,2.7,676,5.395,702,3.282,968,3.874,1008,6.622,2470,6.622,2780,5.282,2840,5.395,2841,6.103,2842,6.103,2843,7.49,2844,6.103,2845,7.49,2846,6.103,2847,6.103,2848,6.103,2849,5.395,2850,6.103,2851,5.395,2852,6.103]],["title/components/ToastComponent.html",[0,0.136,148,0.863]],["body/components/ToastComponent.html",[0,0.207,1,0.817,2,1.064,3,0.077,4,0.077,5,0.681,6,0.874,7,0.893,8,0.073,12,0.747,13,1.672,14,1.878,16,1.164,18,0.166,19,0.688,23,0.976,24,0.792,26,0.244,27,0.009,30,0.534,32,0.205,33,0.576,34,0.175,36,0.077,37,0.243,40,0.781,41,1.244,42,1.19,43,0.681,44,1.548,45,0.893,46,0.536,47,0.893,48,0.817,49,1.84,50,1.064,51,1.244,52,0.817,53,0.893,54,0.817,55,0.893,56,0.781,57,0.893,58,0.817,59,0.893,60,0.817,61,0.893,62,0.893,63,0.799,64,0.893,65,0.799,66,0.893,67,0.817,68,0.534,69,1.244,70,0.799,71,0.836,72,0.817,73,0.893,74,0.817,75,0.893,76,0.781,77,1.754,78,0.781,79,0.62,80,1.244,81,0.781,82,0.893,83,0.781,84,0.635,85,1.431,86,0.781,87,0.893,88,0.817,89,0.605,90,0.747,91,0.893,92,0.781,93,0.893,94,0.781,95,0.893,96,0.781,97,1.244,98,0.781,99,0.781,100,0.874,101,0.781,102,0.893,103,0.817,104,0.874,105,0.893,106,0.781,107,0.893,108,0.781,109,0.893,110,0.817,111,0.893,112,0.817,113,0.893,114,0.817,115,0.893,116,1.431,117,0.817,118,0.874,119,0.893,120,0.817,121,0.817,122,0.893,123,0.799,124,0.893,125,0.817,126,0.73,127,0.893,128,0.799,129,0.893,130,0.817,131,0.836,132,0.799,133,0.855,134,0.893,135,0.817,136,0.836,137,0.893,138,0.817,139,0.893,140,0.799,141,0.893,142,0.817,143,0.893,144,0.799,145,0.893,146,0.799,147,0.893,148,1.416,149,0.893,150,0.817,151,0.893,152,0.893,153,0.817,154,0.893,155,0.781,156,0.781,157,0.893,158,0.799,159,0.893,160,0.799,161,0.874,162,0.874,163,0.893,164,0.799,165,0.893,166,0.799,167,0.747,168,0.874,169,0.893,170,0.004,171,0.005,172,0.004,181,0.617,182,1.42,191,0.802,192,0.6,199,0.799,208,0.893,277,2.822,364,1.473,365,5.207,919,2.532,1363,3.417,1749,5.978,1987,2.121,2853,3.74,2854,5.991,2855,5.89,2856,5.89,2857,4.23,2858,4.23,2859,5.89,2860,4.23,2861,4.23,2862,4.23,2863,3.74,2864,6.777]],["title/injectables/ToastService.html",[565,1.125,1749,3.148]],["body/injectables/ToastService.html",[3,0.144,4,0.092,8,0.062,18,0.198,19,0.775,24,1.001,26,0.348,27,0.009,30,1.061,31,2.027,32,0.176,34,0.209,36,0.092,37,0.29,46,0.585,170,0.005,171,0.006,172,0.005,181,0.696,188,4.982,191,1.144,192,0.856,197,1.437,218,4.31,220,3.557,222,5.567,223,2.256,247,1.944,251,2.189,287,2.745,338,1.789,492,3.387,565,1.673,566,2.3,583,2.051,919,3.941,1115,2.713,1749,4.679,2101,4.982,2213,5.36,2854,5.867,2863,6.556,2865,4.46,2866,6.636,2867,5.044,2868,6.636,2869,5.044,2870,6.636,2871,5.044,2872,6.636,2873,5.044,2874,6.636,2875,6.636,2876,5.044,2877,6.636,2878,5.044,2879,5.044,2880,7.879,2881,7.879,2882,7.879,2883,5.044,2884,5.044,2885,5.044]],["title/components/ToggleSwitchComponent.html",[0,0.136,150,0.863]],["body/components/ToggleSwitchComponent.html",[0,0.185,1,0.669,2,0.921,3,0.063,4,0.063,5,0.557,6,0.715,7,0.731,8,0.063,10,1.177,11,2.163,12,0.611,13,1.657,14,1.848,16,1.008,18,0.136,19,0.596,20,2.387,21,2.558,23,1.398,24,0.901,26,0.277,27,0.009,30,0.644,31,1.461,32,0.121,33,1.015,34,0.143,36,0.063,37,0.199,40,0.639,41,1.077,42,1.031,43,0.557,44,1.412,45,0.731,46,0.465,47,0.731,48,0.669,49,1.797,50,0.921,51,1.077,52,0.669,53,0.731,54,0.669,55,0.731,56,0.639,57,0.731,58,0.669,59,0.731,60,0.669,61,0.731,62,0.731,63,0.654,64,0.731,65,0.654,66,0.731,67,0.669,68,0.437,69,1.077,70,0.654,71,0.684,72,0.669,73,0.731,74,0.669,75,0.731,76,0.639,77,1.697,78,0.639,79,0.507,80,1.077,81,0.639,82,0.731,83,0.639,84,0.519,85,1.279,86,0.639,87,0.731,88,0.669,89,0.495,90,0.611,91,0.731,92,0.639,93,0.731,94,0.639,95,0.731,96,0.639,97,1.077,98,0.639,99,0.639,100,0.715,101,0.639,102,0.731,103,0.669,104,0.715,105,0.731,106,0.639,107,0.731,108,0.639,109,0.731,110,0.669,111,0.731,112,0.669,113,0.731,114,0.669,115,0.731,116,1.279,117,0.669,118,0.715,119,0.731,120,0.669,121,0.669,122,0.731,123,0.654,124,0.731,125,0.669,126,0.597,127,0.731,128,0.654,129,0.731,130,0.669,131,0.684,132,0.654,133,0.699,134,0.731,135,0.669,136,0.684,137,0.731,138,0.669,139,0.731,140,0.654,141,0.731,142,0.669,143,0.731,144,0.654,145,0.731,146,0.654,147,0.731,148,0.669,149,0.731,150,1.292,151,1.671,152,0.731,153,0.669,154,0.731,155,0.639,156,0.639,157,0.731,158,0.654,159,0.731,160,0.654,161,0.715,162,0.715,163,0.731,164,0.654,165,0.731,166,0.654,167,0.611,168,0.715,169,0.731,170,0.003,171,0.005,172,0.003,173,0.873,178,1.203,191,0.471,192,0.353,197,0.802,199,1.263,211,4.322,279,3.635,289,3.06,298,2.441,305,2.441,306,3.597,307,2.796,382,2.398,594,0.954,913,3.597,923,4.272,929,3.238,963,2.441,964,2.441,968,3.846,995,3.3,1171,4.714,1172,3.846,1173,2.598,1176,2.796,1198,4.548,1395,4.893,1396,3.383,1398,4.042,1438,2.31,1439,2.099,1536,5.356,1920,3.846,2113,2.197,2431,4.893,2442,2.796,2452,4.51,2456,4.51,2457,2.796,2560,2.796,2849,3.06,2851,3.06,2886,6.996,2887,6.996,2888,3.06,2889,6.058,2890,5.101,2891,5.101,2892,6.058,2893,3.461,2894,3.461,2895,3.461,2896,3.461,2897,3.461,2898,5.101,2899,3.461,2900,3.461,2901,3.461,2902,3.461,2903,3.461,2904,3.461,2905,5.101,2906,3.461,2907,3.461,2908,5.101,2909,3.461,2910,6.058,2911,3.461,2912,6.058,2913,5.91,2914,6.685,2915,5.101,2916,5.101,2917,5.101,2918,5.101,2919,5.101,2920,3.461,2921,3.461,2922,3.461,2923,3.461,2924,6.058,2925,3.461,2926,3.461,2927,3.461,2928,3.461]],["title/injectables/TranslatePipe.html",[565,1.125,2778,3.148]],["body/injectables/TranslatePipe.html",[3,0.118,4,0.118,8,0.079,10,1.487,18,0.252,19,0.905,23,1.487,24,0.905,26,0.32,27,0.009,30,0.814,32,0.27,34,0.267,36,0.118,37,0.37,46,0.578,170,0.006,171,0.007,172,0.006,191,1.054,192,0.789,197,1.305,208,1.361,257,5.423,465,2.42,565,1.952,566,2.937,1394,4.837,1914,4.694,1920,4.914,1924,5.811,1987,3.231,2057,5.165,2778,5.459,2929,5.696,2930,6.443,2931,6.443,2932,7.741,2933,6.443,2934,6.443]],["title/components/TypeaheadComponent.html",[0,0.136,153,0.863]],["body/components/TypeaheadComponent.html",[0,0.207,1,0.814,2,1.061,3,0.077,4,0.077,5,0.679,6,0.871,7,0.89,8,0.072,10,1.356,11,2.415,12,0.744,13,1.672,14,1.877,16,1.161,18,0.165,19,0.687,20,2.613,21,2.946,23,1.561,24,0.899,26,0.243,27,0.009,30,0.742,31,1.631,32,0.147,33,0.996,34,0.174,36,0.077,37,0.242,40,0.779,41,1.241,42,1.187,43,0.679,44,1.545,45,0.89,46,0.509,47,0.89,48,0.814,49,1.839,50,1.061,51,1.241,52,0.814,53,0.89,54,0.814,55,0.89,56,0.779,57,0.89,58,0.814,59,0.89,60,0.814,61,0.89,62,0.89,63,0.796,64,0.89,65,0.796,66,0.89,67,0.814,68,0.532,69,1.241,70,0.796,71,0.833,72,0.814,73,0.89,74,0.814,75,0.89,76,0.779,77,1.753,78,0.779,79,0.618,80,1.241,81,0.779,82,0.89,83,0.779,84,0.632,85,1.428,86,0.779,87,0.89,88,0.814,89,0.603,90,0.744,91,0.89,92,0.779,93,0.89,94,0.779,95,0.89,96,0.779,97,1.241,98,0.779,99,0.779,100,0.871,101,0.779,102,0.89,103,0.814,104,0.871,105,0.89,106,0.779,107,0.89,108,0.779,109,0.89,110,0.814,111,0.89,112,0.814,113,0.89,114,0.814,115,0.89,116,1.428,117,0.814,118,0.871,119,0.89,120,0.814,121,0.814,122,0.89,123,0.796,124,0.89,125,0.814,126,0.727,127,0.89,128,0.796,129,0.89,130,0.814,131,0.833,132,0.796,133,0.852,134,0.89,135,0.814,136,0.833,137,0.89,138,0.814,139,0.89,140,0.796,141,0.89,142,0.814,143,1.625,144,0.796,145,0.89,146,0.796,147,0.89,148,0.814,149,0.89,150,0.814,151,0.89,152,0.89,153,1.414,154,1.428,155,0.779,156,0.779,157,0.89,158,0.796,159,0.89,160,0.796,161,0.871,162,0.871,163,0.89,164,0.796,165,0.89,166,0.796,167,0.744,168,0.871,169,0.89,170,0.004,171,0.005,172,0.004,191,0.574,192,0.43,197,1.151,401,4.77,929,2.676,995,3.405,1596,3.727,2935,3.727,2936,5.876,2937,5.876,2938,4.216,2939,4.216,2940,5.876,2941,4.216]],["title/pipes/UppercasePipe.html",[1914,2.707,2779,3.148]],["body/pipes/UppercasePipe.html",[3,0.122,4,0.122,8,0.083,10,1.549,12,1.185,19,0.784,24,0.784,26,0.278,27,0.009,30,0.848,32,0.234,34,0.278,36,0.122,37,0.385,46,0.588,170,0.006,171,0.007,172,0.006,182,1.913,191,0.914,192,0.684,197,1.328,208,1.418,338,1.809,1914,4.81,1916,4.733,1920,4.261,1924,5.955,2779,5.594,2942,5.934,2943,7.932,2944,7.932,2945,6.712,2946,6.712]],["title/injectables/UtilsService.html",[565,1.125,2947,3.606]],["body/injectables/UtilsService.html",[3,0.099,4,0.099,8,0.067,18,0.301,19,0.815,24,0.948,26,0.336,27,0.009,30,1.025,32,0.19,34,0.225,36,0.099,37,0.313,46,0.607,118,1.125,170,0.006,171,0.006,172,0.005,191,1.105,192,0.827,197,1.389,208,1.625,247,2.099,279,3.405,360,2.277,565,1.758,566,2.483,583,2.214,594,1.501,825,4.229,1304,2.41,1717,6.802,1778,4.399,2057,3.634,2246,4.815,2947,5.633,2948,4.815,2949,6.974,2950,6.974,2951,6.974,2952,6.974,2953,5.446,2954,5.446,2955,5.446,2956,6.974,2957,8.386,2958,5.446,2959,6.974,2960,5.446,2961,6.974,2962,5.446,2963,5.446,2964,5.446,2965,5.446,2966,6.166,2967,5.446,2968,5.446,2969,5.446,2970,5.446,2971,5.446,2972,5.446,2973,5.446,2974,5.446,2975,6.974,2976,5.446,2977,5.446,2978,5.446,2979,5.446,2980,5.446,2981,5.446,2982,5.446,2983,5.446]],["title/coverage.html",[2984,5.405]],["body/coverage.html",[0,0.275,1,0.398,2,0.372,8,0.053,9,1.821,26,0.085,27,0.009,28,1.547,33,0.463,37,0.485,43,0.897,48,0.398,52,0.398,54,0.398,56,0.381,58,0.398,60,0.398,63,0.389,65,0.389,67,0.398,68,0.703,70,0.389,72,0.398,74,0.398,76,0.381,78,0.381,79,0.498,81,0.381,83,0.381,84,0.51,86,0.381,88,0.398,89,0.72,92,0.381,94,0.381,96,0.381,98,0.381,99,0.381,100,0.702,101,0.381,103,0.398,106,0.381,108,0.381,110,0.398,112,0.398,114,0.398,117,0.398,120,0.398,121,0.398,123,0.389,125,0.398,128,0.389,130,0.398,132,0.389,135,0.398,138,0.398,140,0.389,142,0.398,144,0.389,146,0.389,148,0.398,150,0.398,153,0.398,156,0.381,158,0.389,160,0.389,164,0.389,166,0.389,170,0.002,171,0.003,172,0.002,174,2.745,175,1.821,176,2.745,226,1.821,227,1.821,246,1.821,257,1.249,258,1.375,269,1.664,279,4.206,308,3.483,309,2.745,310,2.745,312,1.15,313,1.664,341,2.381,383,1.821,414,0.98,545,2.551,547,1.975,565,2.062,567,2.745,572,1.547,581,1.664,594,0.568,598,1.364,599,1.547,601,5.352,621,1.15,627,1.308,629,1.375,630,1.453,633,1.453,635,1.649,655,3.549,656,1.453,658,1.821,682,1.664,683,1.664,685,1.821,689,0.968,710,3.376,755,1.308,773,1.249,774,1.249,775,1.249,906,1.821,934,1.821,935,1.821,936,1.821,959,1.453,968,1.308,969,1.821,1013,1.664,1014,1.821,1021,1.547,1022,4.18,1023,4.065,1059,1.547,1060,1.821,1082,1.821,1088,1.821,1092,1.375,1094,1.821,1103,1.821,1140,1.821,1141,1.821,1142,3.256,1177,2.745,1178,1.821,1235,2.745,1236,2.745,1246,1.547,1279,1.821,1295,1.664,1298,3.693,1301,1.15,1303,1.15,1305,1.15,1310,1.15,1314,1.15,1318,1.15,1328,1.15,1333,3.058,1339,1.453,1346,0.939,1347,1.821,1348,1.821,1349,1.821,1354,0.838,1366,1.821,1367,1.821,1387,1.821,1397,1.453,1400,1.547,1401,2.745,1402,1.547,1407,1.821,1414,2.745,1415,2.745,1424,1.821,1425,1.821,1430,2.745,1431,2.745,1440,1.821,1441,1.821,1445,2.745,1446,2.745,1469,1.821,1470,1.821,1516,1.821,1517,1.821,1520,1.821,1521,1.821,1525,1.821,1526,2.745,1532,1.821,1533,1.821,1543,1.821,1544,1.821,1547,1.821,1548,1.821,1551,1.821,1552,1.821,1606,1.821,1734,1.547,1735,1.821,1736,1.821,1749,1.453,1772,1.664,1785,1.821,1914,3.051,1915,1.453,1917,1.821,1918,1.821,1941,1.821,1976,1.821,2042,1.821,2043,1.547,2044,2.745,2045,1.547,2046,1.821,2047,2.157,2048,2.745,2128,2.745,2161,1.821,2162,1.821,2163,1.821,2277,1.664,2279,1.821,2280,1.821,2332,1.821,2372,1.453,2373,1.821,2404,1.821,2411,1.821,2417,1.453,2457,2.745,2461,1.453,2462,1.821,2480,1.821,2503,1.821,2504,1.821,2505,1.821,2523,1.664,2524,1.821,2528,1.664,2529,1.821,2530,1.821,2536,1.375,2540,1.375,2555,1.821,2561,1.821,2618,1.821,2619,1.821,2633,1.821,2634,1.821,2644,1.664,2645,1.821,2657,1.547,2658,2.745,2663,1.547,2666,1.821,2667,1.821,2668,1.821,2674,1.821,2676,1.821,2684,1.821,2687,1.821,2715,1.453,2716,1.821,2723,1.821,2724,1.821,2778,2.396,2779,1.453,2780,1.453,2781,1.664,2810,1.664,2813,1.821,2826,1.821,2840,1.821,2853,1.821,2865,1.821,2886,1.821,2887,1.821,2888,1.821,2929,3.004,2935,1.821,2942,1.821,2947,1.664,2948,1.821,2984,1.821,2985,2.06,2986,2.06,2987,2.06,2988,8.812,2989,8.241,2990,7.252,2991,8.596,2992,7.407,2993,1.821,2994,8.112,2995,6.867,2996,1.821,2997,7.353,2998,7.353,2999,2.06,3000,6.626,3001,2.06,3002,2.06,3003,2.06,3004,4.337,3005,2.06,3006,3.398,3007,2.06,3008,2.06,3009,2.06,3010,2.06,3011,2.06,3012,2.06,3013,2.06,3014,2.06,3015,5.032,3016,2.06,3017,6.339,3018,2.06,3019,3.398,3020,5.032,3021,2.06,3022,2.06,3023,2.06,3024,2.06,3025,2.06,3026,2.06,3027,2.06,3028,2.06,3029,2.06,3030,2.06,3031,4.337,3032,2.06,3033,2.06,3034,2.06,3035,2.06,3036,7.774,3037,2.06,3038,2.06,3039,2.06,3040,2.06,3041,2.06,3042,2.06,3043,2.06,3044,2.06,3045,2.06,3046,6.339,3047,2.06,3048,4.337,3049,2.06,3050,2.06,3051,2.06,3052,2.06,3053,2.06,3054,2.06,3055,2.06,3056,2.06,3057,2.06,3058,2.06,3059,2.06,3060,2.06,3061,2.06,3062,3.398,3063,1.821,3064,1.821,3065,1.821,3066,1.821,3067,2.06,3068,2.06,3069,1.821,3070,2.06,3071,2.06,3072,2.06,3073,2.06,3074,1.821,3075,1.821,3076,1.821,3077,2.06,3078,2.06,3079,1.821,3080,1.821,3081,1.821,3082,1.821,3083,2.745,3084,1.664,3085,2.06]],["title/dependencies.html",[521,3.259,3086,3.719]],["body/dependencies.html",[27,0.009,34,0.259,68,0.79,167,1.105,170,0.006,171,0.007,172,0.006,202,4.42,203,4.42,204,3.972,265,5.778,266,3.814,268,3.138,359,2.477,521,3.794,523,3.814,544,5.532,555,5.532,673,2.477,766,3.972,767,3.636,986,5.71,1032,3.794,1069,5.054,1162,3.972,1602,5.532,1839,5.054,2399,5.532,3087,6.258,3088,9.234,3089,7.606,3090,6.258,3091,6.258,3092,7.606,3093,6.258,3094,6.258,3095,7.606,3096,6.258,3097,6.258,3098,6.258,3099,6.258,3100,6.258,3101,6.258,3102,6.258,3103,6.258,3104,6.258,3105,6.258,3106,6.258,3107,6.258]],["title/miscellaneous/enumerations.html",[3108,2.255,3109,4.752]],["body/miscellaneous/enumerations.html",[8,0.088,18,0.221,27,0.009,33,0.971,68,1.07,71,1.114,79,1.204,84,1.233,170,0.005,171,0.007,172,0.005,199,1.065,205,5.352,216,4.553,218,4.143,220,3.975,222,4.232,224,4.553,338,2.55,452,3.862,710,3.418,724,3.148,781,3.981,782,3.761,965,3.276,1034,3.183,1298,3.031,1319,3.699,1320,3.699,1321,3.862,1322,3.434,1323,3.532,1324,3.862,1325,3.986,1326,3.862,1327,3.986,1333,3.975,1334,4.757,1335,4.232,1336,3.761,1337,4.757,1772,4.553,1779,5.352,1780,4.984,1781,4.553,1782,4.553,3108,3.418,3109,4.984,3110,4.984,3111,7.129,3112,4.984,3113,5.637]],["title/miscellaneous/functions.html",[3108,2.255,3114,4.752]],["body/miscellaneous/functions.html",[18,0.239,26,0.35,27,0.009,30,1.095,46,0.615,68,1.067,170,0.007,171,0.007,172,0.006,191,1.202,192,0.9,257,3.7,287,2.126,338,2.185,576,2.868,667,3.756,736,3.7,776,4.028,891,4.998,1022,4.581,1023,6.826,1033,5.395,1034,2.813,1037,5.395,1039,5.395,2781,4.929,2792,5.395,2810,6.05,2966,5.395,2997,4.929,2998,6.546,3063,6.622,3064,6.622,3074,6.622,3075,6.622,3076,6.622,3083,4.929,3084,6.546,3108,3.7,3114,5.395,3115,6.103,3116,6.622,3117,5.395,3118,8.105,3119,6.103,3120,6.103,3121,7.49]],["title/index.html",[18,0.175,3122,3.947]],["body/index.html",[1,1.43,2,0.553,27,0.009,40,0.566,48,1.43,52,1.43,54,1.43,56,1.368,58,1.43,60,1.43,63,1.064,65,1.064,67,1.43,70,1.399,72,1.088,74,1.088,76,1.368,78,1.368,81,1.368,83,1.368,86,1.368,88,1.43,92,1.368,94,1.368,96,1.368,98,1.368,99,1.368,101,1.368,103,1.088,106,1.368,108,1.368,110,1.43,112,1.088,114,1.088,117,1.43,120,1.43,121,1.43,123,1.399,125,1.43,128,1.399,130,1.43,132,1.064,135,1.43,138,1.088,140,1.064,142,1.43,144,1.064,146,1.064,148,1.43,150,1.43,153,1.43,155,0.566,156,1.368,158,1.064,160,1.399,164,1.399,166,1.399,170,0.003,171,0.004,172,0.003,279,1.355,312,1.71,395,1.944,480,1.355,518,1.647,519,6.36,520,1.857,521,1.857,522,2.043,523,1.535,524,2.043,525,2.707,526,2.707,527,2.707,528,2.707,529,5.792,530,3.106,531,1.439,566,1.396,600,0.969,656,3.97,682,2.474,1287,5.727,1288,2.707,1289,2.707,1354,2.289,1915,5.221,1916,2.16,2278,2.299,2308,2.707,2372,3.97,2441,2.707,2461,3.97,2715,5.221,2774,2.707,2775,2.707,2776,2.707,2777,2.707,2778,5.221,2779,5.221,2780,3.97,2817,5.982,2818,2.707,2819,2.707,2830,6.165,2831,2.707,2832,2.707,3069,2.707,3122,2.707,3123,4.655,3124,3.062,3125,3.062]],["title/modules.html",[520,3.707]],["body/modules.html",[27,0.008,170,0.006,171,0.008,172,0.006,266,4.514,519,5.259,520,4.248,529,4.248,1287,5.259,2276,7.96,2817,5.259,2830,5.259,3126,9.003,3127,9.003]],["title/routes.html",[547,3.553]],["body/routes.html",[27,0.008,170,0.007,171,0.008,172,0.007,547,4.273]],["title/miscellaneous/typealiases.html",[3108,2.255,3128,5.375]],["body/miscellaneous/typealiases.html",[18,0.281,26,0.297,27,0.008,170,0.007,171,0.008,172,0.007,710,4.355,740,5.506,773,4.355,774,4.355,775,4.355,3108,4.355,3110,6.35,3129,7.182]],["title/miscellaneous/variables.html",[3108,2.255,3130,4.752]],["body/miscellaneous/variables.html",[0,0.229,2,0.928,8,0.043,18,0.137,26,0.356,27,0.009,33,0.476,63,0.66,65,0.66,68,0.441,76,0.645,78,0.645,79,0.512,81,0.645,83,0.645,84,0.524,86,0.645,92,0.645,94,0.645,96,1.24,98,0.645,99,0.645,101,0.645,106,0.645,108,0.645,126,1.235,132,0.66,133,0.706,140,0.66,144,0.66,146,0.66,156,0.645,170,0.003,171,0.005,172,0.003,192,0.729,197,0.55,208,0.738,210,1.642,223,3.014,243,2.464,269,4.149,279,1.546,287,1.789,308,1.546,309,2.822,310,4.149,312,2.868,313,4.149,338,2.41,348,1.546,357,3.089,358,3.089,361,3.856,362,3.089,363,2.822,364,2.694,375,2.822,480,1.546,486,2.218,531,3.156,545,5.041,547,3.903,567,2.822,581,4.149,582,3.089,593,3.63,594,1.416,599,3.856,601,2.822,602,3.089,603,3.089,604,3.089,605,3.089,606,4.541,607,3.089,608,4.541,609,3.089,610,4.541,611,3.089,612,3.089,613,4.735,614,4.541,615,3.089,616,3.089,617,5.385,618,3.089,619,4.573,620,3.089,621,2.868,622,3.089,623,3.089,624,3.089,625,3.089,626,2.822,627,3.867,628,3.427,629,3.427,630,3.622,631,3.622,632,2.03,633,3.622,634,2.822,635,3.472,636,3.089,637,3.089,638,3.089,639,3.089,640,3.089,641,3.089,642,3.089,643,3.089,644,3.089,645,3.089,646,3.089,694,3.258,970,5.424,1034,1.312,1083,5.424,1112,3.089,1171,2.464,1298,1.879,1301,2.868,1302,2.03,1304,2.972,1321,1.642,1322,1.46,1323,1.502,1324,1.642,1325,1.695,1326,1.642,1327,1.695,1331,3.517,1334,2.331,1336,2.331,1337,2.331,1396,1.951,1397,3.622,1439,2.119,1445,2.822,1446,4.149,1522,6.409,1778,2.822,1920,4.749,2334,5.385,2434,3.089,2442,4.149,2646,2.822,2677,4.92,2809,3.089,2811,3.089,2814,3.089,2827,3.089,2913,3.089,2993,3.089,2996,3.089,2997,2.822,2998,4.149,3065,4.541,3066,3.089,3079,3.089,3080,3.089,3081,3.089,3082,4.541,3083,2.822,3084,2.822,3108,2.119,3112,3.089,3116,3.089,3117,3.089,3130,3.089,3131,3.494,3132,3.494,3133,7.734,3134,3.494,3135,3.494,3136,3.494,3137,3.494,3138,3.494,3139,3.494,3140,3.494,3141,3.494,3142,5.137,3143,5.137,3144,3.494,3145,3.494,3146,3.494,3147,6.091,3148,3.494,3149,3.494,3150,3.494,3151,6.091,3152,3.494,3153,7.935,3154,3.494,3155,3.494,3156,5.137,3157,6.091,3158,5.137,3159,3.494,3160,3.494,3161,3.494,3162,3.494,3163,3.494,3164,3.494,3165,7.482,3166,5.137,3167,5.137,3168,5.137]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"directives/DraggableDirective.html":{},"components/FooterComponent.html":{},"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0${value}`.slice",{"_index":1040,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["0.10.3",{"_index":3107,"title":{},"body":{"dependencies.html":{}}}],["0.4s",{"_index":2914,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["0.8",{"_index":2443,"title":{},"body":{"components/LoadingComponent.html":{}}}],["0.8s",{"_index":2449,"title":{},"body":{"components/LoadingComponent.html":{}}}],["0/1",{"_index":2988,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3006,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3017,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3015,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3020,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":3073,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3019,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3004,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3031,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3062,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3048,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3046,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":3072,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":3071,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3027,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":3011,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":3067,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2989,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3036,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2991,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2990,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2995,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2992,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3000,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":2350,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["005774",{"_index":2454,"title":{},"body":{"components/LoadingComponent.html":{}}}],["0aa)$/i",{"_index":1685,"title":{},"body":{"injectables/FormsService.html":{}}}],["1",{"_index":480,"title":{"interfaces/Field-1.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/INavigationState-1.html":{}},"body":{"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/DateFilterComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1).foreach(control",{"_index":476,"title":{},"body":{"components/AppFormComponent.html":{}}}],["1,2}[0",{"_index":1680,"title":{},"body":{"injectables/FormsService.html":{}}}],["1.10.1",{"_index":3103,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":3068,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3070,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1036,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{},"components/SearchInputComponent.html":{}}}],["10.0.6",{"_index":3088,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1397,"title":{},"body":{"components/FooterComponent.html":{},"components/LoadingComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":2371,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["1024",{"_index":2971,"title":{},"body":{"injectables/UtilsService.html":{}}}],["10px",{"_index":1975,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImageResizerComponent.html":{}}}],["120",{"_index":2698,"title":{},"body":{"components/ProductsComponent.html":{}}}],["150px",{"_index":2655,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["160",{"_index":2701,"title":{},"body":{"components/ProductsComponent.html":{}}}],["16px",{"_index":2907,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["180",{"_index":2696,"title":{},"body":{"components/ProductsComponent.html":{}}}],["1px",{"_index":2923,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["2",{"_index":825,"title":{},"body":{"injectables/AuthorizeService.html":{},"injectables/CustomDateFormatter.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"injectables/UtilsService.html":{}}}],["2.8.1",{"_index":3100,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3069,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["200",{"_index":2181,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["2020",{"_index":1392,"title":{},"body":{"components/FooterComponent.html":{}}}],["20px",{"_index":1174,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["2196f3",{"_index":2919,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["22.1.1",{"_index":3095,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":2441,"title":{},"body":{"components/LoadingComponent.html":{},"index.html":{}}}],["26px",{"_index":2916,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["3",{"_index":830,"title":{},"body":{"injectables/AuthorizeService.html":{},"injectables/CustomDateFormatter.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["3.0.1",{"_index":3098,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3092,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":3078,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":2749,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["34px",{"_index":2905,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["4",{"_index":2308,"title":{},"body":{"classes/JwtHelperService.html":{},"index.html":{}}}],["4.17.15",{"_index":3102,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":3099,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3077,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1754,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["401",{"_index":679,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GlobalErrorHandler.html":{}}}],["48",{"_index":3124,"title":{},"body":{"index.html":{}}}],["4px",{"_index":2917,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["5",{"_index":3123,"title":{},"body":{"index.html":{}}}],["5.1.4",{"_index":3094,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2457,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["500",{"_index":1757,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["5000",{"_index":2436,"title":{},"body":{"components/LoadingComponent.html":{}}}],["56",{"_index":3125,"title":{},"body":{"index.html":{}}}],["5px",{"_index":1176,"title":{},"body":{"components/DateFilterComponent.html":{},"components/LoadingComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["6",{"_index":2343,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["6.5.3",{"_index":3105,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["60vh",{"_index":2554,"title":{},"body":{"components/ModalComponent.html":{}}}],["63",{"_index":2345,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["64",{"_index":2336,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["64px",{"_index":2446,"title":{},"body":{"components/LoadingComponent.html":{}}}],["666666",{"_index":2433,"title":{},"body":{"components/LoadingComponent.html":{}}}],["7.0.0",{"_index":3104,"title":{},"body":{"dependencies.html":{}}}],["73px",{"_index":2906,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["8",{"_index":2340,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["9",{"_index":1662,"title":{},"body":{"injectables/FormsService.html":{}}}],["90",{"_index":2551,"title":{},"body":{"components/ModalComponent.html":{}}}],["9]+)*\\.)+[a",{"_index":1663,"title":{},"body":{"injectables/FormsService.html":{}}}],["9]?[abehmnprvwxy0",{"_index":1679,"title":{},"body":{"injectables/FormsService.html":{}}}],["9][a",{"_index":1675,"title":{},"body":{"injectables/FormsService.html":{}}}],["9][abd",{"_index":1681,"title":{},"body":{"injectables/FormsService.html":{}}}],["9][aehmnprtvxy0",{"_index":1678,"title":{},"body":{"injectables/FormsService.html":{}}}],["9x]|ext|extension",{"_index":1689,"title":{},"body":{"injectables/FormsService.html":{}}}],["_",{"_index":368,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["__mocks__/mockappservice.ts",{"_index":2524,"title":{},"body":{"classes/MockAppService.html":{},"coverage.html":{}}}],["__mocks__/mockappservice.ts:2",{"_index":2525,"title":{},"body":{"classes/MockAppService.html":{}}}],["__mocks__/mockauthservice.ts",{"_index":2529,"title":{},"body":{"classes/MockAuthService.html":{},"coverage.html":{}}}],["_changedetectorref",{"_index":2419,"title":{},"body":{"components/LoadingComponent.html":{}}}],["_config",{"_index":389,"title":{},"body":{"components/AppFormComponent.html":{}}}],["_elementref",{"_index":330,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["_elmref",{"_index":2418,"title":{},"body":{"components/LoadingComponent.html":{}}}],["_hubconnection",{"_index":1181,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["_next",{"_index":697,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["_onchange",{"_index":315,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["_ontouched",{"_index":316,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["_renderer",{"_index":327,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["_user",{"_index":711,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["a.calendar",{"_index":1175,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["a.cross",{"_index":1170,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":2317,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["above",{"_index":832,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["absolute",{"_index":1172,"title":{},"body":{"components/DateFilterComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["abstract",{"_index":1362,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["abstractcontrol",{"_index":1484,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["ac",{"_index":2041,"title":{},"body":{"components/HomeComponent.html":{}}}],["accepted",{"_index":1597,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["access",{"_index":2620,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["access_token",{"_index":2385,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["accessors",{"_index":323,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"injectables/FieldBaseComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/ImageResizerComponent.html":{},"classes/MockAppService.html":{},"injectables/ModalService.html":{}}}],["accordion",{"_index":15,"title":{},"body":{"components/AccordionComponent.html":{}}}],["accordion'},{'name",{"_index":47,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["accordion.component.html",{"_index":17,"title":{},"body":{"components/AccordionComponent.html":{}}}],["accordioncomponent",{"_index":1,"title":{"components/AccordionComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["action",{"_index":50,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["action.path",{"_index":2063,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["actionbutton",{"_index":1782,"title":{},"body":{"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actionbuttoncomponent",{"_index":48,"title":{"components/ActionButtonComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["actionbuttons",{"_index":1781,"title":{},"body":{"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actionbuttonscomponent",{"_index":52,"title":{"components/ActionButtonsComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["activatedroute",{"_index":2049,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["activatedroutesnapshot",{"_index":693,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["active",{"_index":1309,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["actual_component",{"_index":169,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["adapter.service.ts",{"_index":1060,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{},"coverage.html":{}}}],["adapter.service.ts:30",{"_index":1067,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["adapter.service.ts:9",{"_index":1065,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["add",{"_index":2234,"title":{},"body":{"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{}}}],["additional",{"_index":2607,"title":{},"body":{"injectables/ModalService.html":{}}}],["address",{"_index":1497,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["adds",{"_index":2388,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["advantage",{"_index":1130,"title":{},"body":{"injectables/DataService.html":{}}}],["afterviewinit",{"_index":450,"title":{},"body":{"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/LoadingComponent.html":{},"components/MoveShapeComponent.html":{}}}],["ag",{"_index":202,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["again",{"_index":1753,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["against",{"_index":1892,"title":{},"body":{"components/GridComponent.html":{}}}],["agdatecolumnfilter",{"_index":1878,"title":{},"body":{"components/GridComponent.html":{}}}],["agdateinput",{"_index":1827,"title":{},"body":{"components/GridComponent.html":{}}}],["agframeworkcomponent",{"_index":1238,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["aggridmodule",{"_index":2791,"title":{},"body":{"modules/SharedModule.html":{}}}],["aggridmodule.withcomponents([actionbuttonscomponent",{"_index":2794,"title":{},"body":{"modules/SharedModule.html":{}}}],["aginit",{"_index":184,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{}}}],["aginit(params",{"_index":189,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["agnumbercolumnfilter",{"_index":1876,"title":{},"body":{"components/GridComponent.html":{}}}],["agtextcolumnfilter",{"_index":1880,"title":{},"body":{"components/GridComponent.html":{}}}],["aliases",{"_index":3129,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2438,"title":{},"body":{"components/LoadingComponent.html":{}}}],["allowing",{"_index":2562,"title":{},"body":{"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{}}}],["allows",{"_index":2622,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["already",{"_index":820,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["alternatively",{"_index":2602,"title":{},"body":{"injectables/ModalService.html":{}}}],["amount",{"_index":1503,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["angular",{"_index":204,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":3087,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1839,"title":{},"body":{"components/GridComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":671,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/DataService.html":{},"injectables/FormsService.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compiler",{"_index":3089,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":359,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"components/ChatComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FormFieldErrorComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":3090,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"pipes/SafePipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"modules/ExamplesModule.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["angularjs",{"_index":2014,"title":{},"body":{"components/HomeComponent.html":{}}}],["animate('0.5s",{"_index":3156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate('1s",{"_index":3163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":2447,"title":{},"body":{"components/LoadingComponent.html":{}}}],["animations",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["any).status",{"_index":2085,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["anything",{"_index":1270,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["anywhere",{"_index":2563,"title":{},"body":{"injectables/ModalService.html":{}}}],["api/products",{"_index":2402,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["api_base_url",{"_index":3065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiauthorizationclientconfigurationurl",{"_index":602,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["apiauthorizationpath",{"_index":2500,"title":{},"body":{"components/LoginComponent.html":{}}}],["apis",{"_index":2812,"title":{},"body":{"modules/SharedModule.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["app.component",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["app/api",{"_index":1096,"title":{},"body":{"components/CustomersComponent.html":{},"components/ProductsComponent.html":{}}}],["app/components",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["app/models",{"_index":1560,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["app/shared",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"modules/ExamplesModule.html":{},"components/FormsPlaygroundComponent.html":{},"components/HeaderComponent.html":{},"components/ProductsComponent.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{}}}],["app_data_key",{"_index":581,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app_description",{"_index":1978,"title":{},"body":{"components/HomeComponent.html":{}}}],["app_file_input_accessor",{"_index":313,"title":{},"body":{"directives/AppFileInputDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app_initializer",{"_index":2783,"title":{},"body":{"modules/SharedModule.html":{}}}],["app_nav_examples",{"_index":1971,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app_nav_home",{"_index":1970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app_title",{"_index":1393,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["appc",{"_index":49,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["appclient",{"_index":3028,"title":{},"body":{"coverage.html":{}}}],["appcomponent",{"_index":54,"title":{"components/AppComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["appdata",{"_index":569,"title":{},"body":{"injectables/AppService.html":{},"classes/MockAppService.html":{}}}],["appear",{"_index":2356,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["appfileinput][type=file",{"_index":314,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["appfileinput][type=file]'},{'name",{"_index":157,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["appfileinputdirective",{"_index":156,"title":{"directives/AppFileInputDirective.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["appform",{"_index":386,"title":{},"body":{"components/AppFormComponent.html":{}}}],["appformcomponent",{"_index":56,"title":{"components/AppFormComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["appformfield",{"_index":1447,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["appformfield]'},{'name",{"_index":165,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["appformfielderror",{"_index":1471,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["appformfielderror]'},{'name",{"_index":91,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["appfuppercase",{"_index":2943,"title":{},"body":{"pipes/UppercasePipe.html":{}}}],["appid",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1886,"title":{},"body":{"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"injectables/ModalStateService.html":{}}}],["applicationdataviewmodel",{"_index":2999,"title":{},"body":{"coverage.html":{}}}],["applicationname",{"_index":621,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationpaths",{"_index":635,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"modules/SharedModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationpaths.defaultloginredirectpath",{"_index":2121,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["applicationpaths.loggedout",{"_index":2160,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{},"modules/SharedModule.html":{}}}],["applicationpaths.loggedout.split",{"_index":652,"title":{},"body":{"interfaces/ApplicationPathsType.html":{}}}],["applicationpaths.login",{"_index":2798,"title":{},"body":{"modules/SharedModule.html":{}}}],["applicationpaths.login.split",{"_index":647,"title":{},"body":{"interfaces/ApplicationPathsType.html":{}}}],["applicationpaths.logincallback",{"_index":2800,"title":{},"body":{"modules/SharedModule.html":{}}}],["applicationpaths.loginfailed",{"_index":2799,"title":{},"body":{"modules/SharedModule.html":{}}}],["applicationpaths.loginfailed.split",{"_index":648,"title":{},"body":{"interfaces/ApplicationPathsType.html":{}}}],["applicationpaths.logout",{"_index":2801,"title":{},"body":{"modules/SharedModule.html":{}}}],["applicationpaths.logout.split",{"_index":651,"title":{},"body":{"interfaces/ApplicationPathsType.html":{}}}],["applicationpaths.logoutcallback",{"_index":2802,"title":{},"body":{"modules/SharedModule.html":{}}}],["applicationpaths.logoutcallback.split",{"_index":653,"title":{},"body":{"interfaces/ApplicationPathsType.html":{}}}],["applicationpaths.profile",{"_index":2797,"title":{},"body":{"modules/SharedModule.html":{}}}],["applicationpaths.profile.split",{"_index":650,"title":{},"body":{"interfaces/ApplicationPathsType.html":{}}}],["applicationpaths.register",{"_index":2796,"title":{},"body":{"modules/SharedModule.html":{}}}],["applicationpaths.register.split",{"_index":649,"title":{},"body":{"interfaces/ApplicationPathsType.html":{}}}],["applicationpathstype",{"_index":599,"title":{"interfaces/ApplicationPathsType.html":{}},"body":{"interfaces/ApplicationPathsType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":519,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approot",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["apps",{"_index":1986,"title":{},"body":{"components/HomeComponent.html":{}}}],["appservice",{"_index":257,"title":{"injectables/AppService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/HeaderComponent.html":{},"modules/SharedModule.html":{},"injectables/TranslatePipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appservice.getappdata",{"_index":2793,"title":{},"body":{"modules/SharedModule.html":{}}}],["appservicefactory",{"_index":2810,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appservicefactory(appservice",{"_index":2792,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["arguments",{"_index":332,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["arr",{"_index":2955,"title":{},"body":{"injectables/UtilsService.html":{}}}],["array",{"_index":1928,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["array.prototype.map",{"_index":2348,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["arraytopairwise",{"_index":2949,"title":{},"body":{"injectables/UtilsService.html":{}}}],["arraytopairwise(arr",{"_index":2953,"title":{},"body":{"injectables/UtilsService.html":{}}}],["arrow",{"_index":2124,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["ascii",{"_index":2335,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["asp.net",{"_index":1980,"title":{},"body":{"components/HomeComponent.html":{}}}],["aspnet",{"_index":3096,"title":{},"body":{"dependencies.html":{}}}],["assuming",{"_index":1274,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["async",{"_index":715,"title":{},"body":{"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["auctor",{"_index":2022,"title":{},"body":{"components/HomeComponent.html":{}}}],["authenticate",{"_index":813,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["authenticated",{"_index":843,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["authentication",{"_index":792,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["authentication/${loginactions.login",{"_index":637,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authentication/${loginactions.logincallback",{"_index":639,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authentication/${loginactions.loginfailed",{"_index":638,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authentication/${loginactions.profile",{"_index":641,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authentication/${loginactions.register",{"_index":640,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authentication/${logoutactions.loggedout",{"_index":643,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authentication/${logoutactions.logout",{"_index":642,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authentication/${logoutactions.logoutcallback",{"_index":644,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authentication/logout",{"_index":2140,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["authenticationresultstatus",{"_index":781,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationresultstatus.fail",{"_index":778,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["authenticationresultstatus.redirect",{"_index":779,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["authenticationresultstatus.success",{"_index":777,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["authenticatoruri",{"_index":1317,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["authinterceptor",{"_index":656,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":2395,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authorize",{"_index":691,"title":{},"body":{"guards/AuthorizeGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["authorize.service",{"_index":701,"title":{},"body":{"guards/AuthorizeGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["authorize.service.ts:authorizeservice.popupdisabled",{"_index":849,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["authorizeguard",{"_index":683,"title":{"guards/AuthorizeGuard.html":{}},"body":{"guards/AuthorizeGuard.html":{},"coverage.html":{}}}],["authorizeservice",{"_index":689,"title":{"injectables/AuthorizeService.html":{}},"body":{"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{}}}],["authservice",{"_index":1952,"title":{},"body":{"components/HeaderComponent.html":{}}}],["auto",{"_index":2445,"title":{},"body":{"components/LoadingComponent.html":{},"components/ModalComponent.html":{}}}],["available",{"_index":2386,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"injectables/ModalService.html":{}}}],["await",{"_index":836,"title":{},"body":{"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["b64decode",{"_index":2282,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["b64decode(str",{"_index":2289,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["b64decodeunicode",{"_index":2283,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["b64decodeunicode(str",{"_index":2292,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["back",{"_index":2059,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{},"injectables/ModalService.html":{}}}],["backdrop",{"_index":2599,"title":{},"body":{"injectables/ModalService.html":{}}}],["background",{"_index":2431,"title":{},"body":{"components/LoadingComponent.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["balham.css",{"_index":1913,"title":{},"body":{"components/GridComponent.html":{}}}],["base",{"_index":1412,"title":{},"body":{"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["base.ts",{"_index":1349,"title":{},"body":{"injectables/FieldBaseComponent.html":{},"coverage.html":{}}}],["base.ts:11",{"_index":1355,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["base.ts:13",{"_index":1358,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["base.ts:15",{"_index":1360,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["base.ts:19",{"_index":1357,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["base/field",{"_index":1348,"title":{},"body":{"injectables/FieldBaseComponent.html":{},"coverage.html":{}}}],["base64",{"_index":2246,"title":{},"body":{"components/ImageResizerComponent.html":{},"injectables/UtilsService.html":{}}}],["base64imagecontent",{"_index":2964,"title":{},"body":{"injectables/UtilsService.html":{}}}],["base64toblob",{"_index":2950,"title":{},"body":{"injectables/UtilsService.html":{}}}],["base64toblob(base64",{"_index":2956,"title":{},"body":{"injectables/UtilsService.html":{}}}],["base64url",{"_index":2310,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["base_url",{"_index":1112,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":1990,"title":{},"body":{"components/HomeComponent.html":{}}}],["baseurl",{"_index":574,"title":{},"body":{"injectables/AppService.html":{},"components/ChatComponent.html":{},"injectables/DataService.html":{},"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["bc",{"_index":2325,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["bearer",{"_index":2396,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["before",{"_index":2242,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["behaviorsubject",{"_index":759,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["behaviorsubject(null",{"_index":760,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["bg",{"_index":2882,"title":{},"body":{"injectables/ToastService.html":{}}}],["bio",{"_index":1579,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["birth",{"_index":1572,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["bit",{"_index":2333,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["bits",{"_index":2341,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["black",{"_index":2656,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["blob",{"_index":2966,"title":{},"body":{"injectables/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["blobtotext",{"_index":3063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["blobtotext(blob",{"_index":3119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["block",{"_index":1439,"title":{},"body":{"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormTimeComponent.html":{},"components/LoadingComponent.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["blocked",{"_index":860,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["blocker",{"_index":828,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["blue",{"_index":2850,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["blur",{"_index":367,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["body",{"_index":911,"title":{},"body":{"components/CardComponent.html":{},"injectables/DataService.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"components/ModalComponent.html":{}}}],["bodyclass",{"_index":2556,"title":{},"body":{"interfaces/ModalOptions.html":{}}}],["bodytemplate",{"_index":941,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["boolean",{"_index":199,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"injectables/FormsService.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/LoadingComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":523,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/DateFilterComponent.html":{},"modules/ExamplesModule.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/issues/1119",{"_index":2757,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["bootstrap/ng",{"_index":1032,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/DateFilterComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["border",{"_index":2452,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["both",{"_index":1900,"title":{},"body":{"components/GridComponent.html":{}}}],["bottom",{"_index":1395,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["box",{"_index":2921,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["break",{"_index":2066,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"classes/JwtHelperService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["breaking",{"_index":1927,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["browse",{"_index":2276,"title":{},"body":{"components/ImageResizerComponent.html":{},"modules.html":{}}}],["browser",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"pipes/SafePipe.html":{},"interfaces/SuccessAuthenticationResult.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":538,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":537,"title":{},"body":{"modules/AppModule.html":{}}}],["browserdatepicker",{"_index":1883,"title":{},"body":{"components/GridComponent.html":{}}}],["browsermodule",{"_index":534,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["browsertransferstatemodule",{"_index":535,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":2326,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["btn",{"_index":215,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["buffer",{"_index":2327,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["building",{"_index":1984,"title":{},"body":{"components/HomeComponent.html":{}}}],["built",{"_index":2013,"title":{},"body":{"components/HomeComponent.html":{}}}],["button",{"_index":79,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["button'},{'name",{"_index":51,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["button.component.html",{"_index":180,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/FormButtonComponent.html":{}}}],["button.component.scss",{"_index":179,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/FormButtonComponent.html":{}}}],["button.component.ts",{"_index":176,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/FormButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:12",{"_index":201,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:14",{"_index":190,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:18",{"_index":195,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:22",{"_index":200,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:26",{"_index":198,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:30",{"_index":196,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button/action",{"_index":175,"title":{},"body":{"components/ActionButtonComponent.html":{},"coverage.html":{}}}],["button/form",{"_index":1407,"title":{},"body":{"components/FormButtonComponent.html":{},"coverage.html":{}}}],["buttongroup",{"_index":1337,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"interfaces/IFieldConfig-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":228,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["buttons'},{'name",{"_index":53,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["buttons.component.html",{"_index":230,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["buttons.component.scss",{"_index":229,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["buttons.component.ts",{"_index":227,"title":{},"body":{"components/ActionButtonsComponent.html":{},"coverage.html":{}}}],["buttons.component.ts:10",{"_index":239,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["buttons.component.ts:12",{"_index":233,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["buttons.component.ts:16",{"_index":235,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["buttons.component.ts:20",{"_index":238,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["buttons.component.ts:24",{"_index":236,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["buttons/action",{"_index":226,"title":{},"body":{"components/ActionButtonsComponent.html":{},"coverage.html":{}}}],["buttontext",{"_index":1869,"title":{},"body":{"components/GridComponent.html":{}}}],["buttontype",{"_index":205,"title":{},"body":{"components/ActionButtonComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"miscellaneous/enumerations.html":{}}}],["buttontype.danger",{"_index":221,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["buttontype.secondary",{"_index":214,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["buttontype.success",{"_index":217,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["buttontype.warning",{"_index":219,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["by.pipe.ts",{"_index":1918,"title":{},"body":{"pipes/GroupByPipe.html":{},"coverage.html":{}}}],["by.pipe.ts:5",{"_index":1922,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["bytearrays",{"_index":2974,"title":{},"body":{"injectables/UtilsService.html":{}}}],["bytechars",{"_index":2972,"title":{},"body":{"injectables/UtilsService.html":{}}}],["bytechars.length",{"_index":2977,"title":{},"body":{"injectables/UtilsService.html":{}}}],["c",{"_index":1586,"title":{},"body":{"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"classes/JwtHelperService.html":{}}}],["c.buttontype",{"_index":1868,"title":{},"body":{"components/GridComponent.html":{}}}],["c.cellrendererparams.primaryclicked",{"_index":1862,"title":{},"body":{"components/GridComponent.html":{}}}],["c.cellrendererparams.primarylabel",{"_index":1864,"title":{},"body":{"components/GridComponent.html":{}}}],["c.cellrendererparams.secondaryclicked",{"_index":1863,"title":{},"body":{"components/GridComponent.html":{}}}],["c.cellrendererparams.secondarylabel",{"_index":1865,"title":{},"body":{"components/GridComponent.html":{}}}],["c.charcodeat(0).tostring(16)).slice",{"_index":2351,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["c.dropdownfilteroptions",{"_index":1858,"title":{},"body":{"components/GridComponent.html":{}}}],["c.field",{"_index":1847,"title":{},"body":{"components/GridComponent.html":{}}}],["c.headername",{"_index":1849,"title":{},"body":{"components/GridComponent.html":{}}}],["c.show",{"_index":1867,"title":{},"body":{"components/GridComponent.html":{}}}],["c.sortable",{"_index":1851,"title":{},"body":{"components/GridComponent.html":{}}}],["c.text",{"_index":1974,"title":{},"body":{"components/HeaderComponent.html":{}}}],["c.type",{"_index":1854,"title":{},"body":{"components/GridComponent.html":{}}}],["c.width",{"_index":1848,"title":{},"body":{"components/GridComponent.html":{}}}],["calculated",{"_index":2262,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["call(this.b64decode(str",{"_index":2349,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["callback",{"_index":631,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"interfaces/INavigationState.html":{},"components/ImageResizerComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["callback(dataurl",{"_index":2273,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["callback(reader.result",{"_index":2229,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["called",{"_index":2219,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["calling",{"_index":2249,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["canactivate",{"_index":686,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["canactivate(_next",{"_index":692,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["cancel",{"_index":225,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/ModalComponent.html":{}}}],["cancelbuttonlabel",{"_index":1338,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{}}}],["cancellabel",{"_index":2217,"title":{},"body":{"components/ImageResizerComponent.html":{},"interfaces/ModalOptions.html":{}}}],["cancelled",{"_index":855,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["canvas",{"_index":2260,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["canvas.getcontext('2d",{"_index":2267,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["canvas.height",{"_index":2265,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["canvas.todataurl('image/jpeg",{"_index":2272,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["canvas.width",{"_index":2264,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["card",{"_index":61,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["card'},{'name",{"_index":59,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["card.component.html",{"_index":907,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":58,"title":{"components/CardComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["carddeckcomponent",{"_index":60,"title":{"components/CardDeckComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["case",{"_index":213,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/GridComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["catch",{"_index":841,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["catch(err",{"_index":1009,"title":{},"body":{"components/ChatComponent.html":{},"components/MoveShapeComponent.html":{}}}],["catcherror",{"_index":674,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"components/SearchInputComponent.html":{}}}],["catcherror((error",{"_index":677,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["catcherror(err",{"_index":2478,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["categoriesclient",{"_index":3029,"title":{},"body":{"coverage.html":{}}}],["categorieslistvm",{"_index":3001,"title":{},"body":{"coverage.html":{}}}],["categorydto",{"_index":3002,"title":{},"body":{"coverage.html":{}}}],["categoryname",{"_index":2700,"title":{},"body":{"components/ProductsComponent.html":{}}}],["cb",{"_index":1655,"title":{},"body":{"injectables/FormsService.html":{}}}],["cb(math.round((100",{"_index":1724,"title":{},"body":{"injectables/FormsService.html":{}}}],["ccc",{"_index":2911,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["cdref",{"_index":918,"title":{},"body":{"components/CardComponent.html":{}}}],["celldate",{"_index":1897,"title":{},"body":{"components/GridComponent.html":{}}}],["cellrenderer",{"_index":1773,"title":{},"body":{"interfaces/GridColumn.html":{}}}],["cellrendererparams",{"_index":1774,"title":{},"body":{"interfaces/GridColumn.html":{},"components/ProductsComponent.html":{}}}],["cellvalue",{"_index":1817,"title":{},"body":{"components/GridComponent.html":{}}}],["center",{"_index":2439,"title":{},"body":{"components/LoadingComponent.html":{}}}],["centered",{"_index":2595,"title":{},"body":{"injectables/ModalService.html":{}}}],["change",{"_index":322,"title":{},"body":{"directives/AppFileInputDirective.html":{},"injectables/AuthorizeService.html":{},"injectables/DataService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["change(event",{"_index":334,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["changed",{"_index":1133,"title":{},"body":{"injectables/DataService.html":{}}}],["changedetectorref",{"_index":916,"title":{},"body":{"components/CardComponent.html":{},"components/LoadingComponent.html":{}}}],["changehandler",{"_index":2891,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["changehandler(e",{"_index":2898,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["changes",{"_index":403,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/DataService.html":{}}}],["character",{"_index":2329,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["characters",{"_index":2338,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["chars",{"_index":2316,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["chars.indexof(buffer",{"_index":2346,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["chat",{"_index":970,"title":{},"body":{"components/ChatComponent.html":{},"components/SignalrComponent.html":{},"miscellaneous/variables.html":{}}}],["chat'},{'name",{"_index":64,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["chat.component.html",{"_index":972,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss",{"_index":971,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat/chat.component",{"_index":2836,"title":{},"body":{"modules/SignalrModule.html":{}}}],["chatcomponent",{"_index":63,"title":{"components/ChatComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/FormCheckboxComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"classes/JwtHelperService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["checkbox",{"_index":84,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["checkbox'},{'name",{"_index":82,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["checkbox.component.html",{"_index":1427,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1426,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":1425,"title":{},"body":{"components/FormCheckboxComponent.html":{},"coverage.html":{}}}],["checkbox/form",{"_index":1424,"title":{},"body":{"components/FormCheckboxComponent.html":{},"coverage.html":{}}}],["checkboxlist",{"_index":1327,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["checked",{"_index":2892,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["checkmate",{"_index":2016,"title":{},"body":{"components/HomeComponent.html":{}}}],["checks",{"_index":2384,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["children",{"_index":3166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chooses",{"_index":2577,"title":{},"body":{"injectables/ModalService.html":{}}}],["class",{"_index":37,"title":{"classes/JwtHelperService.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["class.is",{"_index":1369,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["class.ngb",{"_index":2862,"title":{},"body":{"components/ToastComponent.html":{}}}],["classes",{"_index":2278,"title":{},"body":{"classes/JwtHelperService.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"index.html":{}}}],["classname",{"_index":2881,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":375,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/DateFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["clear(dp",{"_index":1150,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["cli",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["click",{"_index":185,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/GridComponent.html":{},"injectables/ModalService.html":{}}}],["click(event",{"_index":193,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["clicks",{"_index":2131,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["client",{"_index":767,"title":{},"body":{"injectables/AuthorizeService.html":{},"components/CustomersComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/HeaderComponent.html":{},"interfaces/IUser.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"dependencies.html":{}}}],["client.ts",{"_index":2998,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":2564,"title":{},"body":{"injectables/ModalService.html":{}}}],["close(data",{"_index":2569,"title":{},"body":{"injectables/ModalService.html":{}}}],["closed",{"_index":853,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["closes",{"_index":2579,"title":{},"body":{"injectables/ModalService.html":{}}}],["closing",{"_index":856,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["cluster_appmodule",{"_index":525,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":526,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_examplesmodule",{"_index":1288,"title":{},"body":{"modules/ExamplesModule.html":{},"index.html":{}}}],["cluster_examplesmodule_declarations",{"_index":1289,"title":{},"body":{"modules/ExamplesModule.html":{},"index.html":{}}}],["cluster_examplesmodule_imports",{"_index":1290,"title":{},"body":{"modules/ExamplesModule.html":{}}}],["cluster_sharedmodule",{"_index":2774,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2775,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_exports",{"_index":2776,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_providers",{"_index":2777,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_shopmodule",{"_index":2818,"title":{},"body":{"modules/ShopModule.html":{},"index.html":{}}}],["cluster_shopmodule_declarations",{"_index":2819,"title":{},"body":{"modules/ShopModule.html":{},"index.html":{}}}],["cluster_shopmodule_imports",{"_index":2820,"title":{},"body":{"modules/ShopModule.html":{}}}],["cluster_signalrmodule",{"_index":2831,"title":{},"body":{"modules/SignalrModule.html":{},"index.html":{}}}],["cluster_signalrmodule_declarations",{"_index":2832,"title":{},"body":{"modules/SignalrModule.html":{},"index.html":{}}}],["cluster_signalrmodule_imports",{"_index":2833,"title":{},"body":{"modules/SignalrModule.html":{}}}],["code",{"_index":1315,"title":{},"body":{"interfaces/Field.html":{},"components/FormFieldErrorComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"injectables/ModalStateService.html":{}}}],["col",{"_index":1846,"title":{},"body":{"components/GridComponent.html":{}}}],["col.cellrenderer",{"_index":1860,"title":{},"body":{"components/GridComponent.html":{}}}],["col.cellrendererparams",{"_index":1861,"title":{},"body":{"components/GridComponent.html":{}}}],["col.floatingfiltercomponent",{"_index":1856,"title":{},"body":{"components/GridComponent.html":{}}}],["col.floatingfiltercomponentparams",{"_index":1857,"title":{},"body":{"components/GridComponent.html":{}}}],["coldef",{"_index":1833,"title":{},"body":{"components/GridComponent.html":{}}}],["collection",{"_index":1923,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["collection.reduce((previous",{"_index":1932,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["color",{"_index":968,"title":{},"body":{"components/CardDeckComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FormCheckboxComponent.html":{},"components/LoadingComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["column",{"_index":1814,"title":{},"body":{"components/GridComponent.html":{}}}],["column.filter",{"_index":1873,"title":{},"body":{"components/GridComponent.html":{}}}],["column.type",{"_index":1874,"title":{},"body":{"components/GridComponent.html":{}}}],["column.valuegetter",{"_index":1903,"title":{},"body":{"components/GridComponent.html":{}}}],["columnapi",{"_index":1831,"title":{},"body":{"components/GridComponent.html":{}}}],["columns",{"_index":1086,"title":{},"body":{"components/CustomersComponent.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{}}}],["coming",{"_index":2159,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["comming",{"_index":2112,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["commodo",{"_index":2031,"title":{},"body":{"components/HomeComponent.html":{}}}],["commonmodule",{"_index":2786,"title":{},"body":{"modules/SharedModule.html":{}}}],["community",{"_index":1162,"title":{},"body":{"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"dependencies.html":{}}}],["community/dist/styles/ag",{"_index":1910,"title":{},"body":{"components/GridComponent.html":{}}}],["comonents",{"_index":2807,"title":{},"body":{"modules/SharedModule.html":{}}}],["comparator",{"_index":1815,"title":{},"body":{"components/GridComponent.html":{}}}],["compare",{"_index":1902,"title":{},"body":{"components/GridComponent.html":{}}}],["comparison",{"_index":1891,"title":{},"body":{"components/GridComponent.html":{}}}],["complete",{"_index":2010,"title":{},"body":{"components/HomeComponent.html":{}}}],["completeauthentication",{"_index":2155,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["completesignin",{"_index":716,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["completesignin(url",{"_index":729,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["completesignout",{"_index":717,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["completesignout(url",{"_index":732,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["component",{"_index":0,"title":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component'},{'name",{"_index":116,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["component_template",{"_index":45,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["componentfactoryresolver",{"_index":1449,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["componentref",{"_index":1457,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["components/directive",{"_index":2805,"title":{},"body":{"modules/SharedModule.html":{}}}],["components[this.config.type",{"_index":1460,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["concat",{"_index":768,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["config",{"_index":399,"title":{},"body":{"components/AppFormComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"interfaces/FieldOption.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["config(value",{"_index":453,"title":{},"body":{"components/AppFormComponent.html":{}}}],["config.cancelbuttonlabel",{"_index":1423,"title":{},"body":{"components/FormButtonGroupComponent.html":{}}}],["config.inputgroupaddonlabel",{"_index":1530,"title":{},"body":{"components/FormInputGroupComponent.html":{}}}],["config.label",{"_index":1413,"title":{},"body":{"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["config.options[i].value",{"_index":1436,"title":{},"body":{"components/FormCheckboxListComponent.html":{}}}],["config.placeholder",{"_index":1541,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["config.type",{"_index":493,"title":{},"body":{"components/AppFormComponent.html":{}}}],["config.validation",{"_index":498,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/FormsService.html":{}}}],["config.validation.length",{"_index":1714,"title":{},"body":{"injectables/FormsService.html":{}}}],["config.validation.some(x",{"_index":1715,"title":{},"body":{"injectables/FormsService.html":{}}}],["config.validation[0",{"_index":499,"title":{},"body":{"components/AppFormComponent.html":{}}}],["config[code",{"_index":1515,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["configcontrols",{"_index":471,"title":{},"body":{"components/AppFormComponent.html":{}}}],["configcontrols.indexof(control",{"_index":475,"title":{},"body":{"components/AppFormComponent.html":{}}}],["configresponse",{"_index":1018,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configresponse.json",{"_index":1020,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configservice",{"_index":1013,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["confirm",{"_index":2214,"title":{},"body":{"components/ImageResizerComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{}}}],["confirmation",{"_index":2532,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{}}}],["confirmed",{"_index":2545,"title":{},"body":{"components/ModalComponent.html":{}}}],["confirmpassword",{"_index":1406,"title":{},"body":{"interfaces/ForgotPassword.html":{},"interfaces/ResetPasswordToken.html":{}}}],["confirmservice.confirm",{"_index":2631,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["connection",{"_index":1007,"title":{},"body":{"components/ChatComponent.html":{},"components/MoveShapeComponent.html":{}}}],["consectetur",{"_index":2037,"title":{},"body":{"components/HomeComponent.html":{}}}],["consent",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error(errorresponse",{"_index":1769,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["console.log('error",{"_index":1010,"title":{},"body":{"components/ChatComponent.html":{},"components/MoveShapeComponent.html":{}}}],["console.log('hub",{"_index":1006,"title":{},"body":{"components/ChatComponent.html":{}}}],["console.log('popup",{"_index":859,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["console.log('redirect",{"_index":864,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["console.log('silent",{"_index":845,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["console.log('there",{"_index":871,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["console.log(`%c",{"_index":2846,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["console.log(`there",{"_index":884,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["console.log(base_url",{"_index":1128,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(product",{"_index":2713,"title":{},"body":{"components/ProductsComponent.html":{}}}],["console.log(this.appservice.appdata",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.form.value",{"_index":1601,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["const",{"_index":360,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"directives/DraggableDirective.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interfaces/KeyValuePair.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UtilsService.html":{}}}],["constants",{"_index":703,"title":{},"body":{"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"modules/SharedModule.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"directives/DraggableDirective.html":{},"components/ExamplesComponent.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/ImageResizerComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{}}}],["constructor(@inject('base_url",{"_index":584,"title":{},"body":{"injectables/AppService.html":{},"components/ChatComponent.html":{},"injectables/DataService.html":{},"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["constructor(@self",{"_index":1378,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["constructor(_elementref",{"_index":325,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["constructor(appservice",{"_index":2930,"title":{},"body":{"injectables/TranslatePipe.html":{}}}],["constructor(authorize",{"_index":688,"title":{},"body":{"guards/AuthorizeGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["constructor(authorizeservice",{"_index":2492,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{}}}],["constructor(authservice",{"_index":1950,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(base_url",{"_index":1108,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(baseurl",{"_index":570,"title":{},"body":{"injectables/AppService.html":{},"components/ChatComponent.html":{},"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["constructor(cdref",{"_index":915,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(control",{"_index":1371,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["constructor(currencypipe",{"_index":1804,"title":{},"body":{"components/GridComponent.html":{}}}],["constructor(customerclient",{"_index":1087,"title":{},"body":{"components/CustomersComponent.html":{}}}],["constructor(fb",{"_index":406,"title":{},"body":{"components/AppFormComponent.html":{}}}],["constructor(fc",{"_index":1353,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["constructor(formcomponent",{"_index":1477,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["constructor(formsservice",{"_index":1555,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["constructor(injector",{"_index":1739,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["constructor(loadingscreenservice",{"_index":2416,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(loadingservice",{"_index":2465,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["constructor(modalservice",{"_index":2179,"title":{},"body":{"components/ImageResizerComponent.html":{},"injectables/ModalService.html":{}}}],["constructor(modaltemplate",{"_index":2638,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["constructor(private",{"_index":465,"title":{},"body":{"components/AppFormComponent.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"components/CardComponent.html":{},"components/CustomersComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/ProductsComponent.html":{},"pipes/SafePipe.html":{},"injectables/TranslatePipe.html":{}}}],["constructor(productsclient",{"_index":2683,"title":{},"body":{"components/ProductsComponent.html":{}}}],["constructor(public",{"_index":1363,"title":{},"body":{"injectables/FieldBaseComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(resolver",{"_index":1448,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["constructor(router",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["constructor(state",{"_index":2535,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(toastservice",{"_index":2857,"title":{},"body":{"components/ToastComponent.html":{}}}],["container",{"_index":1450,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["containing",{"_index":1938,"title":{},"body":{"pipes/GroupByPipe.html":{},"interfaces/INavigationState.html":{},"components/LoginComponent.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{}}}],["content",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"classes/MockAppService.html":{},"injectables/ModalService.html":{},"components/PrivacyComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["control",{"_index":514,"title":{},"body":{"components/AppFormComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["control.errors",{"_index":1487,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["control.errors.hasownproperty(errorcode",{"_index":1488,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["control.markastouched",{"_index":516,"title":{},"body":{"components/AppFormComponent.html":{}}}],["control.name",{"_index":483,"title":{},"body":{"components/AppFormComponent.html":{}}}],["control.touched",{"_index":1489,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["control.value",{"_index":1696,"title":{},"body":{"injectables/FormsService.html":{}}}],["controls",{"_index":402,"title":{},"body":{"components/AppFormComponent.html":{},"components/FormCheckboxListComponent.html":{}}}],["controls.filter(control",{"_index":474,"title":{},"body":{"components/AppFormComponent.html":{}}}],["controls.indexof(control",{"_index":479,"title":{},"body":{"components/AppFormComponent.html":{}}}],["controlvalueaccessor",{"_index":311,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["convert",{"_index":2339,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["cookie",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["cookieconsent",{"_index":2526,"title":{},"body":{"classes/MockAppService.html":{}}}],["cookies",{"_index":1301,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["copy",{"_index":1391,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":1981,"title":{},"body":{"components/HomeComponent.html":{}}}],["corporations",{"_index":2009,"title":{},"body":{"components/HomeComponent.html":{}}}],["correctly",{"_index":2322,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["counters",{"_index":2324,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["coverage",{"_index":2984,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1890,"title":{},"body":{"components/GridComponent.html":{},"components/ImageResizerComponent.html":{}}}],["createarguments",{"_index":718,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["createarguments(state",{"_index":734,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["createcontrol",{"_index":391,"title":{},"body":{"components/AppFormComponent.html":{}}}],["createcontrol(config",{"_index":413,"title":{},"body":{"components/AppFormComponent.html":{}}}],["createcustomercommand",{"_index":3003,"title":{},"body":{"coverage.html":{}}}],["created",{"_index":2600,"title":{},"body":{"injectables/ModalService.html":{}}}],["creategroup",{"_index":392,"title":{},"body":{"components/AppFormComponent.html":{}}}],["createproductcommand",{"_index":3005,"title":{},"body":{"coverage.html":{}}}],["creates",{"_index":1988,"title":{},"body":{"components/HomeComponent.html":{}}}],["credits",{"_index":2312,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["csharp",{"_index":1587,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["css",{"_index":1992,"title":{},"body":{"components/HomeComponent.html":{}}}],["cssclass",{"_index":1340,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{}}}],["csv",{"_index":1909,"title":{},"body":{"components/GridComponent.html":{}}}],["ctx",{"_index":2266,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["ctx.drawimage(img",{"_index":2268,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["cultures",{"_index":1948,"title":{},"body":{"components/HeaderComponent.html":{},"classes/MockAppService.html":{}}}],["culturesdisplayviewmodel",{"_index":3007,"title":{},"body":{"coverage.html":{}}}],["currency",{"_index":1780,"title":{},"body":{"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["currencypipe",{"_index":1805,"title":{},"body":{"components/GridComponent.html":{},"modules/SharedModule.html":{}}}],["current",{"_index":1933,"title":{},"body":{"pipes/GroupByPipe.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ShopComponent.html":{}}}],["currentculture",{"_index":1949,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentculture?.text",{"_index":1973,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentvalue",{"_index":1239,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["cursor",{"_index":963,"title":{},"body":{"components/CardDeckComponent.html":{},"components/DateFilterComponent.html":{},"components/FormDateComponent.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["cursus",{"_index":2032,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":1429,"title":{},"body":{"components/FormCheckboxComponent.html":{},"modules/SharedModule.html":{}}}],["customdateformatter",{"_index":1021,"title":{"injectables/CustomDateFormatter.html":{}},"body":{"injectables/CustomDateFormatter.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["customdropdownfilter",{"_index":1828,"title":{},"body":{"components/GridComponent.html":{}}}],["customerclient",{"_index":1090,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customerdetailvm",{"_index":3008,"title":{},"body":{"coverage.html":{}}}],["customerlookupdto",{"_index":1094,"title":{},"body":{"components/CustomersComponent.html":{},"coverage.html":{}}}],["customers",{"_index":1083,"title":{},"body":{"components/CustomersComponent.html":{},"components/ShopComponent.html":{},"miscellaneous/variables.html":{}}}],["customers'},{'name",{"_index":66,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["customers.component.html",{"_index":1085,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customers.component.scss",{"_index":1084,"title":{},"body":{"components/CustomersComponent.html":{}}}],["customers/customers.component",{"_index":2824,"title":{},"body":{"modules/ShopModule.html":{}}}],["customersclient",{"_index":1088,"title":{},"body":{"components/CustomersComponent.html":{},"coverage.html":{}}}],["customerscomponent",{"_index":65,"title":{"components/CustomersComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customerslistvm",{"_index":3009,"title":{},"body":{"coverage.html":{}}}],["customngbdatenativeutcadapter",{"_index":1059,"title":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["danger",{"_index":222,"title":{},"body":{"components/ActionButtonComponent.html":{},"interfaces/GridColumn.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["danger(message",{"_index":2866,"title":{},"body":{"injectables/ToastService.html":{}}}],["dapibus",{"_index":2039,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":593,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorizeService.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":580,"title":{},"body":{"injectables/AppService.html":{}}}],["dataservice",{"_index":572,"title":{"injectables/DataService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["dataurl",{"_index":2271,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["dataurl.length",{"_index":2275,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["date",{"_index":68,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["date'},{'name",{"_index":87,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["date().valueof",{"_index":2370,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["date(0",{"_index":2366,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["date(control.value",{"_index":1697,"title":{},"body":{"injectables/FormsService.html":{}}}],["date(date.utc(date.year",{"_index":1080,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["date(datestring).toisostring",{"_index":1700,"title":{},"body":{"injectables/FormsService.html":{}}}],["date(day",{"_index":1898,"title":{},"body":{"components/GridComponent.html":{}}}],["date(params.data[column.field",{"_index":1908,"title":{},"body":{"components/GridComponent.html":{}}}],["date(selecteddate.year",{"_index":1164,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["date.component.html",{"_index":1443,"title":{},"body":{"components/FormDateComponent.html":{}}}],["date.component.scss",{"_index":1442,"title":{},"body":{"components/FormDateComponent.html":{}}}],["date.component.ts",{"_index":1441,"title":{},"body":{"components/FormDateComponent.html":{},"coverage.html":{}}}],["date.day",{"_index":1081,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["date.getutcdate",{"_index":1072,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["date.getutcfullyear",{"_index":1070,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["date.getutcmonth",{"_index":1071,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["date.month",{"_index":1079,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["date.now",{"_index":2843,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["date.setutcseconds(decoded.exp",{"_index":2367,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["date.valueof",{"_index":2369,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["date.year",{"_index":1058,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["date/form",{"_index":1440,"title":{},"body":{"components/FormDateComponent.html":{},"coverage.html":{}}}],["dateasstring",{"_index":1884,"title":{},"body":{"components/GridComponent.html":{}}}],["dateasstring.split",{"_index":1893,"title":{},"body":{"components/GridComponent.html":{}}}],["datefiltercomponent",{"_index":67,"title":{"components/DateFilterComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["dateparts",{"_index":1042,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"components/GridComponent.html":{}}}],["dateparts.length",{"_index":1044,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["datepipe",{"_index":2787,"title":{},"body":{"modules/SharedModule.html":{}}}],["dates",{"_index":1887,"title":{},"body":{"components/GridComponent.html":{}}}],["datestring",{"_index":1646,"title":{},"body":{"injectables/FormsService.html":{}}}],["datevalidator",{"_index":1617,"title":{},"body":{"injectables/FormsService.html":{}}}],["datevalidator(control",{"_index":1626,"title":{},"body":{"injectables/FormsService.html":{}}}],["day",{"_index":1048,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/GridComponent.html":{}}}],["dd/mm/yyyy",{"_index":1889,"title":{},"body":{"components/GridComponent.html":{}}}],["debouncetime",{"_index":2725,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["deck",{"_index":937,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck'},{'name",{"_index":62,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["deck.component.html",{"_index":939,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.scss",{"_index":938,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts",{"_index":936,"title":{},"body":{"components/CardDeckComponent.html":{},"coverage.html":{}}}],["deck.component.ts:10",{"_index":953,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:11",{"_index":950,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:12",{"_index":952,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:13",{"_index":954,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:14",{"_index":948,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:15",{"_index":947,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:16",{"_index":949,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:17",{"_index":951,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:18",{"_index":946,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:22",{"_index":955,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck.component.ts:24",{"_index":958,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["deck/card",{"_index":935,"title":{},"body":{"components/CardDeckComponent.html":{},"coverage.html":{}}}],["declarations",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"index.html":{}}}],["declared",{"_index":2624,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["decode",{"_index":2362,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decode/jwthelper.service.ts",{"_index":2280,"title":{},"body":{"classes/JwtHelperService.html":{},"coverage.html":{}}}],["decode/jwthelper.service.ts:101",{"_index":2301,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decode/jwthelper.service.ts:26",{"_index":2290,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decode/jwthelper.service.ts:3",{"_index":2288,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decode/jwthelper.service.ts:4",{"_index":2303,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decode/jwthelper.service.ts:56",{"_index":2293,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decode/jwthelper.service.ts:66",{"_index":2295,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decode/jwthelper.service.ts:87",{"_index":2297,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decoded",{"_index":2321,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decoded.hasownproperty('exp",{"_index":2365,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decoder",{"_index":2313,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decodetoken",{"_index":2284,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decodetoken(token",{"_index":2294,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decodeuricomponent",{"_index":2347,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["decoration",{"_index":966,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["decorators",{"_index":433,"title":{},"body":{"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/MoveShapeComponent.html":{}}}],["decreaserequests",{"_index":2464,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["deep",{"_index":2553,"title":{},"body":{"components/ModalComponent.html":{}}}],["default",{"_index":223,"title":{},"body":{"components/ActionButtonComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"components/ChatComponent.html":{},"injectables/DataService.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/ModalService.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["defaultcolumndef",{"_index":1790,"title":{},"body":{"components/GridComponent.html":{}}}],["defaultloginredirectpath",{"_index":603,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{}}}],["delete",{"_index":243,"title":{},"body":{"components/ActionButtonsComponent.html":{},"injectables/DataService.html":{},"components/ImageResizerComponent.html":{},"components/ProductsComponent.html":{},"miscellaneous/variables.html":{}}}],["delete(url",{"_index":1113,"title":{},"body":{"injectables/DataService.html":{}}}],["deleteproduct",{"_index":2680,"title":{},"body":{"components/ProductsComponent.html":{}}}],["deleteproduct(product",{"_index":2686,"title":{},"body":{"components/ProductsComponent.html":{}}}],["demonstrates",{"_index":1603,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["dependencies",{"_index":521,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"dependencies.html":{},"index.html":{}}}],["deps",{"_index":2811,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IAccordionItem.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{}}}],["descriptionkey",{"_index":942,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["details",{"_index":2000,"title":{},"body":{"components/HomeComponent.html":{}}}],["detection",{"_index":1132,"title":{},"body":{"injectables/DataService.html":{}}}],["dev",{"_index":1285,"title":{},"body":{"components/ExamplesComponent.html":{}}}],["different",{"_index":815,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["dimensions",{"_index":2263,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["directive",{"_index":43,"title":{"directives/AppFileInputDirective.html":{},"directives/DraggableDirective.html":{},"directives/FieldColorValidationDirective.html":{},"directives/FormFieldDirective.html":{},"directives/ModalTemplateDirective.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["directives",{"_index":155,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"index.html":{}}}],["disable",{"_index":425,"title":{},"body":{"components/AppFormComponent.html":{}}}],["disabled",{"_index":382,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"interfaces/KeyValuePair.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToggleSwitchComponent.html":{}}}],["discontinued",{"_index":2702,"title":{},"body":{"components/ProductsComponent.html":{}}}],["dismiss",{"_index":2565,"title":{},"body":{"injectables/ModalService.html":{}}}],["dismiss(data",{"_index":2571,"title":{},"body":{"injectables/ModalService.html":{}}}],["display",{"_index":1438,"title":{},"body":{"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormTimeComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["displayed",{"_index":2531,"title":{},"body":{"components/ModalComponent.html":{}}}],["displaytext",{"_index":3165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distinctuntilchanged",{"_index":2754,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["dob",{"_index":1571,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["document.baseuri",{"_index":622,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["document.cookie",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('canvas",{"_index":2261,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["document.createelement('img",{"_index":2235,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["documentation",{"_index":2985,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1929,"title":{},"body":{"pipes/GroupByPipe.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/ModalService.html":{}}}],["doing",{"_index":2157,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["domain",{"_index":1501,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["domain_regex",{"_index":1607,"title":{},"body":{"injectables/FormsService.html":{}}}],["domainvalidator",{"_index":1608,"title":{},"body":{"injectables/FormsService.html":{}}}],["domsanitizer",{"_index":2720,"title":{},"body":{"pipes/SafePipe.html":{}}}],["don't",{"_index":786,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"modules/SharedModule.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["done",{"_index":822,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["donec",{"_index":2017,"title":{},"body":{"components/HomeComponent.html":{}}}],["dot",{"_index":1575,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["dotnet",{"_index":1589,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["dp",{"_index":1153,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["dp.writevalue(null",{"_index":1168,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["dr",{"_index":1564,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["draggable",{"_index":1180,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["draggable]'},{'name",{"_index":159,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["draggabledirective",{"_index":158,"title":{"directives/DraggableDirective.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["dropdown",{"_index":71,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dropdownfilteroptions",{"_index":1240,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{}}}],["dropdownfloatingfiltercomponent",{"_index":70,"title":{"components/DropdownFloatingFilterComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["dropdownfloatingfilterparams",{"_index":1246,"title":{"interfaces/DropdownFloatingFilterParams.html":{}},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"coverage.html":{}}}],["dynamic",{"_index":1602,"title":{},"body":{"components/FormsPlaygroundComponent.html":{},"dependencies.html":{}}}],["dynamicaction",{"_index":2729,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["d{1,18}(\\.\\d{1,2",{"_index":1670,"title":{},"body":{"injectables/FormsService.html":{}}}],["e",{"_index":2900,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["each",{"_index":1937,"title":{},"body":{"pipes/GroupByPipe.html":{},"classes/JwtHelperService.html":{}}}],["ease",{"_index":3157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edge",{"_index":789,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["edit",{"_index":245,"title":{},"body":{"components/ActionButtonsComponent.html":{},"components/ProductsComponent.html":{}}}],["editproduct",{"_index":2681,"title":{},"body":{"components/ProductsComponent.html":{}}}],["editproduct(product",{"_index":2690,"title":{},"body":{"components/ProductsComponent.html":{}}}],["elapsed",{"_index":2845,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["element",{"_index":42,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["elementref",{"_index":326,"title":{},"body":{"directives/AppFileInputDirective.html":{},"directives/DraggableDirective.html":{},"components/LoadingComponent.html":{},"components/MoveShapeComponent.html":{}}}],["email",{"_index":1322,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/ForgotPassword.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"interfaces/ResetPasswordToken.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email_regex",{"_index":1609,"title":{},"body":{"injectables/FormsService.html":{}}}],["emailvalidator",{"_index":1610,"title":{},"body":{"injectables/FormsService.html":{}}}],["emit",{"_index":1763,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["emitevent",{"_index":510,"title":{},"body":{"components/AppFormComponent.html":{}}}],["emitfiles(event",{"_index":370,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["employeedetailvm",{"_index":3010,"title":{},"body":{"coverage.html":{}}}],["employeelookupdto",{"_index":3012,"title":{},"body":{"coverage.html":{}}}],["employeesclient",{"_index":3030,"title":{},"body":{"coverage.html":{}}}],["employeeterritorydto",{"_index":3013,"title":{},"body":{"coverage.html":{}}}],["enable",{"_index":503,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["enablecsvexport",{"_index":1801,"title":{},"body":{"components/GridComponent.html":{}}}],["enabled",{"_index":561,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsulation",{"_index":1786,"title":{},"body":{"components/GridComponent.html":{}}}],["encoded",{"_index":2269,"title":{},"body":{"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{}}}],["end",{"_index":2003,"title":{},"body":{"components/HomeComponent.html":{}}}],["endpoint",{"_index":2126,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["ensureusermanagerinitialized",{"_index":719,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["entered",{"_index":1499,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["entrycomponents",{"_index":2782,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":780,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/GridColumn.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"interfaces/KeyValuePair.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["enumerations",{"_index":3109,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":545,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationPathsType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.stsurl}_configuration/${applicationname",{"_index":636,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["environment.stsurl}identity/account/manage",{"_index":646,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["environment.stsurl}identity/account/register",{"_index":645,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["environmentinformation",{"_index":3014,"title":{},"body":{"coverage.html":{}}}],["environments/environment",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationPathsType.html":{}}}],["equals",{"_index":1267,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["err",{"_index":1012,"title":{},"body":{"components/ChatComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/MoveShapeComponent.html":{}}}],["err.message).join",{"_index":1771,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["error",{"_index":90,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["error(\"'atob",{"_index":2320,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["error(\"popup",{"_index":848,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["error('cannot",{"_index":2361,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["error('illegal",{"_index":2309,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["error('invalid",{"_index":2118,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["error('provide",{"_index":2772,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["error('should",{"_index":2091,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["error(`could",{"_index":894,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["error(`invalid",{"_index":2076,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["error(message",{"_index":738,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["error.component.html",{"_index":1473,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["error.component.scss",{"_index":1472,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["error.component.ts",{"_index":1470,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:13",{"_index":1478,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["error.component.ts:14",{"_index":1483,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["error.component.ts:15",{"_index":1482,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["error.component.ts:17",{"_index":1479,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["error.component.ts:29",{"_index":1481,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["error.service.ts",{"_index":1736,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["error.service.ts:10",{"_index":1746,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["error.service.ts:26",{"_index":1743,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["error.service.ts:7",{"_index":1741,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["error.status",{"_index":678,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["error/form",{"_index":1469,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"coverage.html":{}}}],["errorcode",{"_index":1486,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["errorhandler",{"_index":1748,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"modules/SharedModule.html":{}}}],["errormessage",{"_index":1474,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["errormessages",{"_index":1330,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["errorresponse",{"_index":1747,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["errorresponse.rejection",{"_index":1758,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["errorresponse.rejection.error",{"_index":1759,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["errorresponse.status",{"_index":1751,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["errors",{"_index":1744,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["errors.map((err",{"_index":1770,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["establishing",{"_index":1011,"title":{},"body":{"components/ChatComponent.html":{},"components/MoveShapeComponent.html":{}}}],["etc",{"_index":2806,"title":{},"body":{"modules/SharedModule.html":{}}}],["euismod",{"_index":2028,"title":{},"body":{"components/HomeComponent.html":{}}}],["event",{"_index":194,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"directives/AppFileInputDirective.html":{},"components/CardDeckComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interceptors/TimingInterceptor.html":{}}}],["event.item(0",{"_index":371,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["event.loaded",{"_index":1725,"title":{},"body":{"injectables/FormsService.html":{}}}],["event.preventdefault",{"_index":1420,"title":{},"body":{"components/FormButtonGroupComponent.html":{}}}],["event.target.files",{"_index":333,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["event.total",{"_index":1726,"title":{},"body":{"injectables/FormsService.html":{}}}],["event.type",{"_index":1722,"title":{},"body":{"injectables/FormsService.html":{}}}],["eventemitter",{"_index":923,"title":{},"body":{"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ImageResizerComponent.html":{},"components/SearchInputComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["evt",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["example",{"_index":1885,"title":{},"body":{"components/GridComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["exampleroutes",{"_index":1945,"title":{},"body":{"components/HeaderComponent.html":{}}}],["examples",{"_index":1280,"title":{},"body":{"components/ExamplesComponent.html":{}}}],["examples'},{'name",{"_index":73,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["examples.component",{"_index":1292,"title":{},"body":{"modules/ExamplesModule.html":{}}}],["examples.component.html",{"_index":1282,"title":{},"body":{"components/ExamplesComponent.html":{}}}],["examples.component.scss",{"_index":1281,"title":{},"body":{"components/ExamplesComponent.html":{}}}],["examples.routes",{"_index":1293,"title":{},"body":{"modules/ExamplesModule.html":{}}}],["examples/examples.routes",{"_index":1962,"title":{},"body":{"components/HeaderComponent.html":{}}}],["examples/forms",{"_index":1294,"title":{},"body":{"modules/ExamplesModule.html":{}}}],["examplescomponent",{"_index":72,"title":{"components/ExamplesComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["examplesmodule",{"_index":1287,"title":{"modules/ExamplesModule.html":{}},"body":{"modules/ExamplesModule.html":{},"index.html":{},"modules.html":{}}}],["exist",{"_index":1930,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["experience",{"_index":1591,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["explicitly",{"_index":854,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{}}}],["exportas",{"_index":385,"title":{},"body":{"components/AppFormComponent.html":{}}}],["exports",{"_index":524,"title":{},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"index.html":{}}}],["exportselectedtocsv",{"_index":1795,"title":{},"body":{"components/GridComponent.html":{}}}],["exporttocsv",{"_index":1796,"title":{},"body":{"components/GridComponent.html":{}}}],["expose",{"_index":2804,"title":{},"body":{"modules/SharedModule.html":{}}}],["extends",{"_index":783,"title":{},"body":{"injectables/AuthorizeService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["extension",{"_index":1710,"title":{},"body":{"injectables/FormsService.html":{}}}],["extension.tolowercase",{"_index":1713,"title":{},"body":{"injectables/FormsService.html":{}}}],["extra",{"_index":2116,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["fa",{"_index":1633,"title":{},"body":{"injectables/FormsService.html":{}}}],["fail",{"_index":782,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":634,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"classes/JwtHelperService.html":{},"miscellaneous/variables.html":{}}}],["failureauthenticationresult",{"_index":774,"title":{"interfaces/FailureAuthenticationResult.html":{}},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["fallback",{"_index":844,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["false",{"_index":210,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"directives/AppFileInputDirective.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/ModalService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1995,"title":{},"body":{"components/HomeComponent.html":{}}}],["fb",{"_index":409,"title":{},"body":{"components/AppFormComponent.html":{}}}],["fc",{"_index":1350,"title":{},"body":{"injectables/FieldBaseComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"injectables/FormsService.html":{}}}],["fc.value",{"_index":1701,"title":{},"body":{"injectables/FormsService.html":{}}}],["features",{"_index":1979,"title":{},"body":{"components/HomeComponent.html":{}}}],["feedback",{"_index":1437,"title":{},"body":{"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormTimeComponent.html":{}}}],["felis",{"_index":2027,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetch('assets/config.json",{"_index":1019,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetch(applicationpaths.apiauthorizationclientconfigurationurl",{"_index":892,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["ffffff",{"_index":2432,"title":{},"body":{"components/LoadingComponent.html":{}}}],["field",{"_index":89,"title":{"interfaces/Field.html":{},"interfaces/Field-1.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["field.directive.ts",{"_index":1446,"title":{},"body":{"directives/FormFieldDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["field.directive.ts:53",{"_index":1454,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["field.directive.ts:54",{"_index":1452,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["field.directive.ts:61",{"_index":1455,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["field.directive.ts:67",{"_index":1456,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["fieldbasecomponent",{"_index":1346,"title":{"injectables/FieldBaseComponent.html":{}},"body":{"injectables/FieldBaseComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"coverage.html":{}}}],["fieldbasecomponent:11",{"_index":1410,"title":{},"body":{"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["fieldbasecomponent:13",{"_index":1411,"title":{},"body":{"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["fieldbasecomponent:19",{"_index":1409,"title":{},"body":{"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["fieldcolorvalidationdirective",{"_index":160,"title":{"directives/FieldColorValidationDirective.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["fieldconfig",{"_index":1476,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["fieldoption",{"_index":1339,"title":{"interfaces/FieldOption.html":{}},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{},"coverage.html":{}}}],["fieldtypes",{"_index":452,"title":{},"body":{"components/AppFormComponent.html":{},"components/ChatComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtypes.button",{"_index":459,"title":{},"body":{"components/AppFormComponent.html":{},"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.buttongroup",{"_index":460,"title":{},"body":{"components/AppFormComponent.html":{}}}],["fieldtypes.checkbox",{"_index":1598,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.checkboxlist",{"_index":494,"title":{},"body":{"components/AppFormComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.date",{"_index":1573,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.email",{"_index":1567,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.fileupload",{"_index":1581,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.number",{"_index":1569,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.password",{"_index":1566,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.radiolist",{"_index":1592,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.select",{"_index":1561,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.textarea",{"_index":1580,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.textbox",{"_index":994,"title":{},"body":{"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["fieldtypes.time",{"_index":1576,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["file'},{'name",{"_index":93,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["file.component.html",{"_index":1519,"title":{},"body":{"components/FormFileComponent.html":{}}}],["file.component.scss",{"_index":1518,"title":{},"body":{"components/FormFileComponent.html":{}}}],["file.component.ts",{"_index":1517,"title":{},"body":{"components/FormFileComponent.html":{},"coverage.html":{}}}],["file.name.split('.')[1].tolowercase",{"_index":1711,"title":{},"body":{"injectables/FormsService.html":{}}}],["file/file",{"_index":309,"title":{},"body":{"directives/AppFileInputDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file/form",{"_index":1516,"title":{},"body":{"components/FormFileComponent.html":{},"coverage.html":{}}}],["file_src",{"_index":2167,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["filechange",{"_index":2168,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["filechange(input",{"_index":2190,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["filelist",{"_index":335,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["filepath",{"_index":1336,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"interfaces/IFieldConfig-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["filepathupload",{"_index":1335,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{},"miscellaneous/enumerations.html":{}}}],["filereader",{"_index":2231,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["fileresponse",{"_index":3032,"title":{},"body":{"coverage.html":{}}}],["files",{"_index":2221,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["fileupload",{"_index":1320,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/enumerations.html":{}}}],["filter",{"_index":769,"title":{},"body":{"injectables/AuthorizeService.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"interfaces/IUser.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["filter'},{'name",{"_index":69,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["filter(control",{"_index":478,"title":{},"body":{"components/AppFormComponent.html":{}}}],["filter(u",{"_index":803,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["filter.component.html",{"_index":1144,"title":{},"body":{"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["filter.component.scss",{"_index":1143,"title":{},"body":{"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["filter.component.ts",{"_index":1142,"title":{},"body":{"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"coverage.html":{}}}],["filter.component.ts:11",{"_index":1160,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["filter.component.ts:12",{"_index":1161,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":1149,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["filter.component.ts:17",{"_index":1245,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["filter.component.ts:18",{"_index":1156,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["filter.component.ts:19",{"_index":1256,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["filter.component.ts:21",{"_index":1255,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["filter.component.ts:22",{"_index":1254,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["filter.component.ts:23",{"_index":1154,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["filter.component.ts:24",{"_index":1247,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":1159,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":1253,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["filter.component.ts:31",{"_index":1152,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":1250,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["filter/date",{"_index":1141,"title":{},"body":{"components/DateFilterComponent.html":{},"coverage.html":{}}}],["filter/dropdown",{"_index":1236,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"coverage.html":{}}}],["filterlocaldateatmidnight",{"_index":1816,"title":{},"body":{"components/GridComponent.html":{}}}],["filterparams",{"_index":1775,"title":{},"body":{"interfaces/GridColumn.html":{},"components/GridComponent.html":{}}}],["find",{"_index":2344,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["finishes",{"_index":2156,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["fire",{"_index":1131,"title":{},"body":{"injectables/DataService.html":{},"components/ImageResizerComponent.html":{}}}],["first",{"_index":2337,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["fit",{"_index":2255,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["fixed",{"_index":2434,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["flag",{"_index":794,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["flatmap",{"_index":1191,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["flatmap((md",{"_index":1209,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["float",{"_index":2437,"title":{},"body":{"components/LoadingComponent.html":{}}}],["flow",{"_index":835,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["fn",{"_index":340,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["fns",{"_index":1069,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/GridComponent.html":{},"dependencies.html":{}}}],["focus",{"_index":366,"title":{},"body":{"directives/AppFileInputDirective.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{}}}],["focused",{"_index":324,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["focused(isfocused",{"_index":378,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["font",{"_index":2851,"title":{},"body":{"interceptors/TimingInterceptor.html":{},"components/ToggleSwitchComponent.html":{}}}],["footer",{"_index":1388,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{}}}],["footer'},{'name",{"_index":75,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["footer.component.html",{"_index":1390,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1389,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":74,"title":{"components/FooterComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["footertemplate",{"_index":908,"title":{},"body":{"components/CardComponent.html":{},"components/CardDeckComponent.html":{}}}],["foreach(name",{"_index":481,"title":{},"body":{"components/AppFormComponent.html":{}}}],["forgotpassword",{"_index":1400,"title":{"interfaces/ForgotPassword.html":{}},"body":{"interfaces/ForgotPassword.html":{},"interfaces/ResetPasswordToken.html":{},"coverage.html":{}}}],["form",{"_index":77,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"injectables/FieldBaseComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["form'},{'name",{"_index":57,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["form.component.html",{"_index":388,"title":{},"body":{"components/AppFormComponent.html":{}}}],["form.component.scss",{"_index":387,"title":{},"body":{"components/AppFormComponent.html":{}}}],["form.controls[fieldconfig.name",{"_index":1692,"title":{},"body":{"injectables/FormsService.html":{}}}],["form.controls[fieldconfig.name].touched",{"_index":1694,"title":{},"body":{"injectables/FormsService.html":{}}}],["form.controls[fieldconfig.name].valid",{"_index":1693,"title":{},"body":{"injectables/FormsService.html":{}}}],["form.valid",{"_index":988,"title":{},"body":{"components/ChatComponent.html":{}}}],["form.value",{"_index":989,"title":{},"body":{"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["formarray",{"_index":417,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/FormsService.html":{}}}],["format",{"_index":1025,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"components/GridComponent.html":{}}}],["format(date",{"_index":1027,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["format(new",{"_index":1907,"title":{},"body":{"components/GridComponent.html":{}}}],["formaterrors",{"_index":1737,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["formaterrors(errors",{"_index":1742,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["formatter",{"_index":2726,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["formatter.service.ts",{"_index":1023,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatter.service.ts:28",{"_index":1031,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["formatter.service.ts:60",{"_index":1029,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["formbuilder",{"_index":407,"title":{},"body":{"components/AppFormComponent.html":{}}}],["formbuttoncomponent",{"_index":76,"title":{"components/FormButtonComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formbuttongroupcomponent",{"_index":78,"title":{"components/FormButtonGroupComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formcheckboxcomponent",{"_index":81,"title":{"components/FormCheckboxComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formcheckboxlistcomponent",{"_index":83,"title":{"components/FormCheckboxListComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formcomponent",{"_index":1373,"title":{},"body":{"directives/FieldColorValidationDirective.html":{},"components/FormFieldErrorComponent.html":{}}}],["formcontrol",{"_index":416,"title":{},"body":{"components/AppFormComponent.html":{}}}],["formcontrolname]:not(.checkbox",{"_index":161,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["formdata",{"_index":1717,"title":{},"body":{"injectables/FormsService.html":{},"injectables/UtilsService.html":{}}}],["formdata.append(key",{"_index":1720,"title":{},"body":{"injectables/FormsService.html":{}}}],["formdata.append(name",{"_index":2969,"title":{},"body":{"injectables/UtilsService.html":{}}}],["formdatecomponent",{"_index":86,"title":{"components/FormDateComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formfielddirective",{"_index":164,"title":{"directives/FormFieldDirective.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["formfielderrorcomponent",{"_index":88,"title":{"components/FormFieldErrorComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["formfilecomponent",{"_index":92,"title":{"components/FormFileComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formfilepathcomponent",{"_index":94,"title":{"components/FormFilePathComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formgroup",{"_index":431,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/FieldBaseComponent.html":{},"injectables/FormsService.html":{}}}],["forminputcomponent",{"_index":96,"title":{"components/FormInputComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["forminputgroupcomponent",{"_index":98,"title":{"components/FormInputGroupComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formradiolistcomponent",{"_index":99,"title":{"components/FormRadioListComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formref",{"_index":1629,"title":{},"body":{"injectables/FormsService.html":{}}}],["formref.submitted",{"_index":1695,"title":{},"body":{"injectables/FormsService.html":{}}}],["forms",{"_index":104,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["forms.service",{"_index":1361,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["formselectcomponent",{"_index":101,"title":{"components/FormSelectComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formservice",{"_index":1351,"title":{},"body":{"injectables/FieldBaseComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["formsmodule",{"_index":2789,"title":{},"body":{"modules/SharedModule.html":{}}}],["formsplaygroundcomponent",{"_index":103,"title":{"components/FormsPlaygroundComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["formsservice",{"_index":1354,"title":{"injectables/FormsService.html":{}},"body":{"injectables/FieldBaseComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"index.html":{}}}],["formsthis",{"_index":1605,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["formtextareacomponent",{"_index":106,"title":{"components/FormTextareaComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formtimecomponent",{"_index":108,"title":{"components/FormTimeComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formvalue",{"_index":1649,"title":{},"body":{"injectables/FormsService.html":{}}}],["formvalue[key",{"_index":1719,"title":{},"body":{"injectables/FormsService.html":{}}}],["forwardref",{"_index":357,"title":{},"body":{"directives/AppFileInputDirective.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":2331,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["fragment",{"_index":2103,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["framework",{"_index":1983,"title":{},"body":{"components/HomeComponent.html":{}}}],["frameworkcomponents",{"_index":1791,"title":{},"body":{"components/GridComponent.html":{}}}],["fringilla",{"_index":2023,"title":{},"body":{"components/HomeComponent.html":{}}}],["from(this.ensureusermanagerinitialized()).pipe",{"_index":808,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["from(this.usermanager.getuser",{"_index":809,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["fromevent",{"_index":1189,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["fromevent(document",{"_index":1205,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["fromevent(target",{"_index":1203,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["frommodel",{"_index":1062,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["frommodel(date",{"_index":1064,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["fromquery",{"_index":2109,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["fromquery.startswith(`${window.location.origin",{"_index":2114,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["front",{"_index":2002,"title":{},"body":{"components/HomeComponent.html":{}}}],["fulfilled",{"_index":2576,"title":{},"body":{"injectables/ModalService.html":{}}}],["fullwidth",{"_index":400,"title":{},"body":{"components/AppFormComponent.html":{}}}],["fully",{"_index":2226,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["func",{"_index":1660,"title":{},"body":{"injectables/FormsService.html":{}}}],["func.tostring().replace(/\\s/g",{"_index":1728,"title":{},"body":{"injectables/FormsService.html":{}}}],["funcstr",{"_index":1727,"title":{},"body":{"injectables/FormsService.html":{}}}],["funcstr.indexof(\"{'required",{"_index":1730,"title":{},"body":{"injectables/FormsService.html":{}}}],["funcstr.indexof('multiplecheckboxesrequireonlyonechecked",{"_index":1731,"title":{},"body":{"injectables/FormsService.html":{}}}],["funcstr.indexof('multiplecheckboxrequireatleastone",{"_index":1732,"title":{},"body":{"injectables/FormsService.html":{}}}],["funcstr.indexof('multiplecheckboxrequiremorethanone",{"_index":1733,"title":{},"body":{"injectables/FormsService.html":{}}}],["funcstr.indexof('{required",{"_index":1729,"title":{},"body":{"injectables/FormsService.html":{}}}],["function",{"_index":341,"title":{},"body":{"directives/AppFileInputDirective.html":{},"injectables/CustomDateFormatter.html":{},"injectables/DataService.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interfaces/KeyValuePair.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["function(control",{"_index":1709,"title":{},"body":{"injectables/FormsService.html":{}}}],["function(x",{"_index":1195,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["functions",{"_index":3114,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":2225,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["fusce",{"_index":2038,"title":{},"body":{"components/HomeComponent.html":{}}}],["g",{"_index":2305,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["gbp",{"_index":1906,"title":{},"body":{"components/GridComponent.html":{}}}],["get('app/getapplicationdata",{"_index":589,"title":{},"body":{"injectables/AppService.html":{}}}],["get(url",{"_index":1116,"title":{},"body":{"injectables/DataService.html":{}}}],["getaccesstoken",{"_index":720,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["getappdata",{"_index":568,"title":{},"body":{"injectables/AppService.html":{},"classes/MockAppService.html":{}}}],["getbaseurl",{"_index":3084,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getbuttonclass",{"_index":186,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["getchanges",{"_index":442,"title":{},"body":{"components/AppFormComponent.html":{}}}],["getconfig",{"_index":437,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/ConfigService.html":{}}}],["getcontrols",{"_index":440,"title":{},"body":{"components/AppFormComponent.html":{},"components/FormCheckboxListComponent.html":{}}}],["getcultures",{"_index":1958,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getcurrentculture",{"_index":1960,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getdata",{"_index":2682,"title":{},"body":{"components/ProductsComponent.html":{}}}],["getdate",{"_index":1145,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["geterrortext",{"_index":1475,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["geterrortext(code",{"_index":1480,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["getfilterparams",{"_index":1797,"title":{},"body":{"components/GridComponent.html":{}}}],["getfilterparams(column",{"_index":1812,"title":{},"body":{"components/GridComponent.html":{}}}],["getfilters",{"_index":1798,"title":{},"body":{"components/GridComponent.html":{}}}],["getfilters(column",{"_index":1818,"title":{},"body":{"components/GridComponent.html":{}}}],["getformgroup",{"_index":1359,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["getfortext",{"_index":1104,"title":{},"body":{"injectables/DataService.html":{}}}],["getfortext(url",{"_index":1118,"title":{},"body":{"injectables/DataService.html":{}}}],["gethasopenmodals",{"_index":2582,"title":{},"body":{"injectables/ModalService.html":{}}}],["getimagesource",{"_index":2207,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["getisloggedin",{"_index":762,"title":{},"body":{"injectables/AuthorizeService.html":{},"components/HeaderComponent.html":{}}}],["getitem",{"_index":3146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getreturnurl",{"_index":2489,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["getreturnurl(state",{"_index":2108,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["getrowsselected",{"_index":1835,"title":{},"body":{"components/GridComponent.html":{}}}],["getstate",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["getstate(outlet",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["getsubmitted",{"_index":448,"title":{},"body":{"components/AppFormComponent.html":{}}}],["gettokenexpirationdate",{"_index":2285,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["gettokenexpirationdate(token",{"_index":2296,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["getuser",{"_index":721,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/HeaderComponent.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["getuserfromstorage",{"_index":722,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["getvalid",{"_index":444,"title":{},"body":{"components/AppFormComponent.html":{}}}],["getvalue",{"_index":446,"title":{},"body":{"components/AppFormComponent.html":{}}}],["getvaluegetter",{"_index":1799,"title":{},"body":{"components/GridComponent.html":{}}}],["getvaluegetter(column",{"_index":1820,"title":{},"body":{"components/GridComponent.html":{}}}],["given",{"_index":2601,"title":{},"body":{"injectables/ModalService.html":{}}}],["global",{"_index":1766,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["globalerrorhandler",{"_index":1734,"title":{"injectables/GlobalErrorHandler.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["goes",{"_index":2314,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["google",{"_index":2007,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":1275,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/FormFieldErrorComponent.html":{}}}],["greaterthan",{"_index":1265,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["grid",{"_index":203,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["grid'},{'name",{"_index":111,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["grid.component.html",{"_index":1789,"title":{},"body":{"components/GridComponent.html":{}}}],["grid.component.scss",{"_index":1788,"title":{},"body":{"components/GridComponent.html":{}}}],["grid.css",{"_index":1911,"title":{},"body":{"components/GridComponent.html":{}}}],["gridapi",{"_index":1792,"title":{},"body":{"components/GridComponent.html":{}}}],["gridcolumn",{"_index":1092,"title":{"interfaces/GridColumn.html":{}},"body":{"components/CustomersComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["gridcolumnapi",{"_index":1793,"title":{},"body":{"components/GridComponent.html":{}}}],["gridcolumns",{"_index":1794,"title":{},"body":{"components/GridComponent.html":{}}}],["gridcomponent",{"_index":110,"title":{"components/GridComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["gridfieldtype",{"_index":1779,"title":{},"body":{"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gridfieldtype.actionbutton",{"_index":1866,"title":{},"body":{"components/GridComponent.html":{}}}],["gridfieldtype.actionbuttons",{"_index":1859,"title":{},"body":{"components/GridComponent.html":{},"components/ProductsComponent.html":{}}}],["gridfieldtype.boolean",{"_index":2703,"title":{},"body":{"components/ProductsComponent.html":{}}}],["gridfieldtype.currency",{"_index":1904,"title":{},"body":{"components/GridComponent.html":{}}}],["gridfieldtype.date",{"_index":1877,"title":{},"body":{"components/GridComponent.html":{}}}],["gridfieldtype.dropdown",{"_index":1855,"title":{},"body":{"components/GridComponent.html":{}}}],["gridfieldtype.number",{"_index":1875,"title":{},"body":{"components/GridComponent.html":{},"components/ProductsComponent.html":{}}}],["gridfieldtype.text",{"_index":1879,"title":{},"body":{"components/GridComponent.html":{}}}],["group",{"_index":486,"title":{},"body":{"components/AppFormComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormDateComponent.html":{},"components/FormInputGroupComponent.html":{},"pipes/GroupByPipe.html":{},"components/ModalComponent.html":{},"miscellaneous/variables.html":{}}}],["group'},{'name",{"_index":80,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["group.addcontrol(control.name",{"_index":489,"title":{},"body":{"components/AppFormComponent.html":{}}}],["group.component.html",{"_index":1416,"title":{},"body":{"components/FormButtonGroupComponent.html":{},"components/FormInputGroupComponent.html":{}}}],["group.component.scss",{"_index":1529,"title":{},"body":{"components/FormInputGroupComponent.html":{}}}],["group.component.ts",{"_index":1415,"title":{},"body":{"components/FormButtonGroupComponent.html":{},"components/FormInputGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:10",{"_index":1419,"title":{},"body":{"components/FormButtonGroupComponent.html":{}}}],["group/form",{"_index":1414,"title":{},"body":{"components/FormButtonGroupComponent.html":{},"components/FormInputGroupComponent.html":{},"coverage.html":{}}}],["groupby",{"_index":1919,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["groupbypipe",{"_index":1915,"title":{"pipes/GroupByPipe.html":{}},"body":{"pipes/GroupByPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"index.html":{}}}],["groupedcollection",{"_index":1931,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["groupedcollection[key",{"_index":1940,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["guard",{"_index":682,"title":{"guards/AuthorizeGuard.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["guards",{"_index":684,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["handle",{"_index":2051,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["handleauthorization",{"_index":687,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["handleauthorization(isauthenticated",{"_index":698,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["handleerror",{"_index":1738,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handleerror(errorresponse",{"_index":1745,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler",{"_index":1767,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{}}}],["happens",{"_index":819,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["hasauthenticator",{"_index":1311,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["hasopenmodals",{"_index":2566,"title":{},"body":{"injectables/ModalService.html":{}}}],["hasrole",{"_index":723,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["hasrole(role",{"_index":744,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["hassidebar",{"_index":943,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["header",{"_index":1942,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":113,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["header.component.html",{"_index":1944,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1943,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headerclass",{"_index":912,"title":{},"body":{"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{}}}],["headercomponent",{"_index":112,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["headername",{"_index":1776,"title":{},"body":{"interfaces/GridColumn.html":{},"components/GridComponent.html":{}}}],["headers",{"_index":3121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["heading",{"_index":2669,"title":{},"body":{"components/PageHeadingComponent.html":{}}}],["heading'},{'name",{"_index":137,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["heading.component.html",{"_index":2671,"title":{},"body":{"components/PageHeadingComponent.html":{}}}],["heading.component.scss",{"_index":2670,"title":{},"body":{"components/PageHeadingComponent.html":{}}}],["heading.component.ts",{"_index":2668,"title":{},"body":{"components/PageHeadingComponent.html":{},"coverage.html":{}}}],["heading.component.ts:11",{"_index":2673,"title":{},"body":{"components/PageHeadingComponent.html":{}}}],["heading.component.ts:8",{"_index":2672,"title":{},"body":{"components/PageHeadingComponent.html":{}}}],["heading/page",{"_index":2667,"title":{},"body":{"components/PageHeadingComponent.html":{},"coverage.html":{}}}],["height",{"_index":1398,"title":{},"body":{"components/FooterComponent.html":{},"components/ImageResizerComponent.html":{},"components/LoadingComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["here",{"_index":1271,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/INavigationState.html":{},"components/LoginComponent.html":{},"components/PrivacyComponent.html":{}}}],["hidden",{"_index":458,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["hide",{"_index":2659,"title":{},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{}}}],["hidecancel",{"_index":2557,"title":{},"body":{"interfaces/ModalOptions.html":{}}}],["hidesubmit",{"_index":2558,"title":{},"body":{"interfaces/ModalOptions.html":{}}}],["high",{"_index":1593,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["history",{"_index":2105,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["hits",{"_index":2123,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["hjln",{"_index":1682,"title":{},"body":{"injectables/FormsService.html":{}}}],["hk",{"_index":1676,"title":{},"body":{"injectables/FormsService.html":{}}}],["holder",{"_index":2597,"title":{},"body":{"injectables/ModalService.html":{}}}],["home",{"_index":115,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["home.component.html",{"_index":1977,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":114,"title":{"components/HomeComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["host",{"_index":365,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/ToastComponent.html":{}}}],["hostbinding",{"_index":1257,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"directives/FieldColorValidationDirective.html":{}}}],["hostbinding('class",{"_index":1260,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["hostbinding('class.is",{"_index":1379,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["hostbindings",{"_index":1243,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"directives/FieldColorValidationDirective.html":{}}}],["hostlistener",{"_index":356,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["hostlistener('change",{"_index":369,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["hostlisteners",{"_index":321,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["html",{"_index":41,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["html5",{"_index":1991,"title":{},"body":{"components/HomeComponent.html":{}}}],["htmlinputelement",{"_index":2194,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["http",{"_index":1109,"title":{},"body":{"injectables/DataService.html":{}}}],["http_interceptors",{"_index":2785,"title":{},"body":{"modules/SharedModule.html":{}}}],["httpclient",{"_index":1110,"title":{},"body":{"injectables/DataService.html":{}}}],["httpclientmodule",{"_index":2784,"title":{},"body":{"modules/SharedModule.html":{}}}],["httperrorresponse",{"_index":670,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpevent",{"_index":669,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/FormsService.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpeventtype",{"_index":1691,"title":{},"body":{"injectables/FormsService.html":{}}}],["httpeventtype.uploadprogress",{"_index":1723,"title":{},"body":{"injectables/FormsService.html":{}}}],["httphandler",{"_index":664,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":668,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":662,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpresponse",{"_index":2470,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["https://github.com/atk",{"_index":2315,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["https://github.com/ng",{"_index":2756,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["https://identityserver.fullstackpro.xyz",{"_index":3144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://jwt.io",{"_index":2359,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["https://localhost:5007",{"_index":3145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://stackoverflow.com/questions/44356040/angular",{"_index":1765,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["https://www.regexpal.com/?fam=104738",{"_index":1704,"title":{},"body":{"injectables/FormsService.html":{}}}],["hub",{"_index":973,"title":{},"body":{"components/ChatComponent.html":{},"components/MoveShapeComponent.html":{}}}],["hubconnection",{"_index":982,"title":{},"body":{"components/ChatComponent.html":{},"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["hubconnectionbuilder",{"_index":985,"title":{},"body":{"components/ChatComponent.html":{},"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["hubconnectionbuilder().withurl(`${this.baseurl}chathub`).build",{"_index":1001,"title":{},"body":{"components/ChatComponent.html":{}}}],["hubconnectionbuilder().withurl(`${this.baseurl}shapehub`).build",{"_index":1193,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["iaccordionitem",{"_index":28,"title":{"interfaces/IAccordionItem.html":{}},"body":{"components/AccordionComponent.html":{},"interfaces/IAccordionItem.html":{},"coverage.html":{}}}],["iappclient",{"_index":3033,"title":{},"body":{"coverage.html":{}}}],["iapplicationconfig",{"_index":585,"title":{},"body":{"injectables/AppService.html":{},"classes/MockAppService.html":{}}}],["iapplicationdataviewmodel",{"_index":3034,"title":{},"body":{"coverage.html":{}}}],["iauthenticationresult",{"_index":740,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/typealiases.html":{}}}],["icard",{"_index":2043,"title":{"interfaces/ICard.html":{}},"body":{"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"coverage.html":{}}}],["icardevent",{"_index":959,"title":{"interfaces/ICardEvent.html":{}},"body":{"components/CardDeckComponent.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"coverage.html":{}}}],["icategoriesclient",{"_index":3035,"title":{},"body":{"coverage.html":{}}}],["icategorieslistvm",{"_index":3037,"title":{},"body":{"coverage.html":{}}}],["icategorydto",{"_index":3038,"title":{},"body":{"coverage.html":{}}}],["icellrendererangularcomp",{"_index":177,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{}}}],["icon",{"_index":2660,"title":{},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{}}}],["icreatecustomercommand",{"_index":3039,"title":{},"body":{"coverage.html":{}}}],["icreateproductcommand",{"_index":3040,"title":{},"body":{"coverage.html":{}}}],["iculture",{"_index":1965,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iculturesdisplayviewmodel",{"_index":3041,"title":{},"body":{"coverage.html":{}}}],["icustomerdetailvm",{"_index":3042,"title":{},"body":{"coverage.html":{}}}],["icustomerlookupdto",{"_index":3043,"title":{},"body":{"coverage.html":{}}}],["icustomersclient",{"_index":3044,"title":{},"body":{"coverage.html":{}}}],["icustomerslistvm",{"_index":3045,"title":{},"body":{"coverage.html":{}}}],["id",{"_index":1101,"title":{},"body":{"components/CustomersComponent.html":{},"components/HomeComponent.html":{},"components/SearchInputComponent.html":{}}}],["idateparams",{"_index":1148,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["identifier",{"_index":2986,"title":{},"body":{"coverage.html":{}}}],["identitymanagepath",{"_index":604,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["identityregisterpath",{"_index":605,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["idp",{"_index":821,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["idx",{"_index":2328,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["iemployeedetailvm",{"_index":3047,"title":{},"body":{"coverage.html":{}}}],["iemployeelookupdto",{"_index":3049,"title":{},"body":{"coverage.html":{}}}],["iemployeesclient",{"_index":3050,"title":{},"body":{"coverage.html":{}}}],["iemployeeterritorydto",{"_index":3051,"title":{},"body":{"coverage.html":{}}}],["ienableauthenticatormodel",{"_index":1314,"title":{"interfaces/IEnableAuthenticatorModel.html":{}},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{}}}],["ienvironmentinformation",{"_index":3052,"title":{},"body":{"coverage.html":{}}}],["ifieldconfig",{"_index":414,"title":{"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{}},"body":{"components/AppFormComponent.html":{},"components/ChatComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"interfaces/FieldOption.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{}}}],["ifloatingfilter",{"_index":1237,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["ifloatingfilterparams",{"_index":1258,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["iframe",{"_index":824,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["ilistitem",{"_index":2045,"title":{"interfaces/IListItem.html":{}},"body":{"interfaces/IListItem.html":{},"components/ListComponent.html":{},"coverage.html":{}}}],["image",{"_index":118,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/UtilsService.html":{}}}],["image.replace(/^data:image\\/(png|jpg|jpeg);base64",{"_index":2965,"title":{},"body":{"injectables/UtilsService.html":{}}}],["image/jpeg",{"_index":2968,"title":{},"body":{"injectables/UtilsService.html":{}}}],["imageresizercomponent",{"_index":117,"title":{"components/ImageResizerComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["images",{"_index":2251,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["imagesource",{"_index":2178,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["imagetoformdata",{"_index":2951,"title":{},"body":{"injectables/UtilsService.html":{}}}],["imagetoformdata(image",{"_index":2959,"title":{},"body":{"injectables/UtilsService.html":{}}}],["img",{"_index":2206,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["img.height",{"_index":2253,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["img.onload",{"_index":2250,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["img.src",{"_index":2236,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["img.src.length",{"_index":2274,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["img.width",{"_index":2252,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["imodaloptions",{"_index":1318,"title":{"interfaces/IModalOptions.html":{}},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"injectables/FieldBaseComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{}}}],["important",{"_index":1428,"title":{},"body":{"components/FormCheckboxComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/INavigationState.html":{},"components/ImageResizerComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{}}}],["imports",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{}}}],["inavigationstate",{"_index":2047,"title":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{}},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"coverage.html":{}}}],["inavigationstate).returnurl",{"_index":2111,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["including",{"_index":1756,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individuals",{"_index":2008,"title":{},"body":{"components/HomeComponent.html":{}}}],["infinite",{"_index":2450,"title":{},"body":{"components/LoadingComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{}}}],["info(message",{"_index":2868,"title":{},"body":{"injectables/ToastService.html":{}}}],["inherited",{"_index":1408,"title":{},"body":{"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["initialdata",{"_index":2730,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["initialize",{"_index":2323,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["initialnavigation",{"_index":560,"title":{},"body":{"modules/AppModule.html":{}}}],["initiated",{"_index":2130,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["inject",{"_index":579,"title":{},"body":{"injectables/AppService.html":{},"components/ChatComponent.html":{},"injectables/DataService.html":{},"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["injectable",{"_index":565,"title":{"injectables/AppService.html":{},"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/DataService.html":{},"injectables/FieldBaseComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LoadingService.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"injectables/ToastService.html":{},"injectables/TranslatePipe.html":{},"injectables/UtilsService.html":{}},"body":{"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/DataService.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FieldBaseComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/IUser.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"injectables/ToastService.html":{},"injectables/TranslatePipe.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["injectables",{"_index":566,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/DataService.html":{},"injectables/FieldBaseComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LoadingService.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"injectables/ToastService.html":{},"injectables/TranslatePipe.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["injectiontoken",{"_index":1299,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["injectiontoken('api_base_url",{"_index":3141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('cookies",{"_index":1302,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1740,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["inline",{"_index":2904,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["input",{"_index":33,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/CustomDateFormatter.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["input'},{'name",{"_index":97,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["input.component.html",{"_index":1528,"title":{},"body":{"components/FormInputComponent.html":{},"components/SearchInputComponent.html":{}}}],["input.component.scss",{"_index":1527,"title":{},"body":{"components/FormInputComponent.html":{},"components/SearchInputComponent.html":{}}}],["input.component.ts",{"_index":1526,"title":{},"body":{"components/FormInputComponent.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:12",{"_index":2735,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:13",{"_index":2737,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:14",{"_index":2738,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:15",{"_index":2740,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:16",{"_index":2739,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:17",{"_index":2736,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:18",{"_index":2741,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:19",{"_index":2734,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:20",{"_index":2742,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:21",{"_index":2753,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:22",{"_index":2750,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:24",{"_index":2751,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:25",{"_index":2733,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:29",{"_index":2744,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:35",{"_index":2752,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:60",{"_index":2747,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:64",{"_index":2743,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.directive.ts",{"_index":310,"title":{},"body":{"directives/AppFileInputDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input.directive.ts:26",{"_index":331,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:27",{"_index":350,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:28",{"_index":351,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:29",{"_index":352,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:32",{"_index":336,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:37",{"_index":329,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:44",{"_index":349,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:50",{"_index":354,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:56",{"_index":339,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:60",{"_index":343,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.directive.ts:64",{"_index":345,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["input.value",{"_index":2212,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["input/form",{"_index":1525,"title":{},"body":{"components/FormInputComponent.html":{},"coverage.html":{}}}],["input/search",{"_index":2724,"title":{},"body":{"components/SearchInputComponent.html":{},"coverage.html":{}}}],["input:checked",{"_index":2918,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["input:focus",{"_index":2920,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["inputgroup",{"_index":1334,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"interfaces/IFieldConfig-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["inputgroupaddonhandler",{"_index":1344,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{}}}],["inputgroupaddonlabel",{"_index":1343,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{}}}],["inputs",{"_index":21,"title":{},"body":{"components/AccordionComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/GridComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/SearchInputComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["inspected",{"_index":2355,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["instance).onfloatingfilterchanged('equals",{"_index":1268,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["instanceof",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/FormsService.html":{},"interceptors/LoadingInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{}}}],["instead",{"_index":2125,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["intercept",{"_index":659,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":661,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(request",{"_index":2468,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interceptor",{"_index":655,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":657,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interface",{"_index":598,"title":{"interfaces/ApplicationPathsType.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/ForgotPassword.html":{},"interfaces/GridColumn.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"interfaces/KeyValuePair.html":{},"interfaces/ModalOptions.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"interfaces/SuccessAuthenticationResult.html":{}},"body":{"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/ForgotPassword.html":{},"interfaces/GridColumn.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"interfaces/KeyValuePair.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/ModalOptions.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":600,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/ForgotPassword.html":{},"interfaces/GridColumn.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"interfaces/KeyValuePair.html":{},"interfaces/ModalOptions.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"interfaces/SuccessAuthenticationResult.html":{},"index.html":{}}}],["internal",{"_index":1041,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{}}}],["invalid",{"_index":1370,"title":{},"body":{"directives/FieldColorValidationDirective.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormTimeComponent.html":{},"injectables/FormsService.html":{}}}],["invalid(form",{"_index":1628,"title":{},"body":{"injectables/FormsService.html":{}}}],["invaliddomain",{"_index":1500,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["invalidmoney",{"_index":1502,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["invalidpostcode",{"_index":1504,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["ioption",{"_index":1328,"title":{"interfaces/IOption.html":{}},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{}}}],["iproblemdetails",{"_index":3053,"title":{},"body":{"coverage.html":{}}}],["iproductdetailvm",{"_index":3054,"title":{},"body":{"coverage.html":{}}}],["iproductdto",{"_index":3055,"title":{},"body":{"coverage.html":{}}}],["iproductsclient",{"_index":3056,"title":{},"body":{"coverage.html":{}}}],["iproductslistvm",{"_index":3057,"title":{},"body":{"coverage.html":{}}}],["is2faenabled",{"_index":1313,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["isauthenticated",{"_index":700,"title":{},"body":{"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["iscollapsed",{"_index":1946,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isdisabled",{"_index":346,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["isfocused",{"_index":355,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["isloggedin",{"_index":727,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/HeaderComponent.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["isnan(date.valueof",{"_index":1698,"title":{},"body":{"injectables/FormsService.html":{}}}],["isnan(tointeger(value",{"_index":1038,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["isnan(value",{"_index":1702,"title":{},"body":{"injectables/FormsService.html":{}}}],["isnumber",{"_index":3074,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnumber(date.day",{"_index":1054,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["isnumber(date.month",{"_index":1056,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["isnumber(dateparts[0",{"_index":1045,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["isnumber(dateparts[1",{"_index":1050,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["isnumber(dateparts[2",{"_index":1052,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["isnumber(value",{"_index":1037,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"miscellaneous/functions.html":{}}}],["isociallogins",{"_index":1305,"title":{"interfaces/ISocialLogins.html":{}},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{}}}],["isostring",{"_index":1699,"title":{},"body":{"injectables/FormsService.html":{}}}],["issameoriginurl",{"_index":2374,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["issameoriginurl(req",{"_index":2378,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["istemplate",{"_index":2856,"title":{},"body":{"components/ToastComponent.html":{}}}],["istemplate(toast",{"_index":2859,"title":{},"body":{"components/ToastComponent.html":{}}}],["istokenexpired",{"_index":2286,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["istokenexpired(token",{"_index":2299,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["it's",{"_index":2099,"title":{},"body":{"interfaces/INavigationState.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{}}}],["item",{"_index":508,"title":{},"body":{"components/AppFormComponent.html":{},"components/CardDeckComponent.html":{},"components/ListComponent.html":{}}}],["item),[ngmodel]:not([ngbtypeahead]),[formcontrol",{"_index":1368,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["item),[ngmodel]:not([ngbtypeahead]),[formcontrol]'},{'name",{"_index":163,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["item.description",{"_index":39,"title":{},"body":{"components/AccordionComponent.html":{}}}],["item.disabled",{"_index":507,"title":{},"body":{"components/AppFormComponent.html":{}}}],["item.name",{"_index":473,"title":{},"body":{"components/AppFormComponent.html":{}}}],["item.text",{"_index":2410,"title":{},"body":{"components/ListComponent.html":{}}}],["item.title",{"_index":38,"title":{},"body":{"components/AccordionComponent.html":{}}}],["item.value",{"_index":1531,"title":{},"body":{"components/FormRadioListComponent.html":{}}}],["item[descriptionkey",{"_index":962,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["item[titlekey",{"_index":961,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["items",{"_index":22,"title":{},"body":{"components/AccordionComponent.html":{},"components/CardDeckComponent.html":{}}}],["itemtoupdate",{"_index":1125,"title":{},"body":{"injectables/DataService.html":{}}}],["itwofactormodel",{"_index":1310,"title":{"interfaces/ITwoFactorModel.html":{}},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{}}}],["iupdatecustomercommand",{"_index":3058,"title":{},"body":{"coverage.html":{}}}],["iupdateproductcommand",{"_index":3059,"title":{},"body":{"coverage.html":{}}}],["iupsertcategorycommand",{"_index":3060,"title":{},"body":{"coverage.html":{}}}],["iupsertemployeecommand",{"_index":3061,"title":{},"body":{"coverage.html":{}}}],["iuser",{"_index":755,"title":{"interfaces/IUser.html":{}},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{}}}],["javascript",{"_index":1993,"title":{},"body":{"components/HomeComponent.html":{}}}],["join",{"_index":626,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"classes/JwtHelperService.html":{},"miscellaneous/variables.html":{}}}],["jpeg",{"_index":2244,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["jpg",{"_index":2270,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["json",{"_index":1129,"title":{},"body":{"injectables/DataService.html":{},"components/FormsPlaygroundComponent.html":{}}}],["json.parse(decoded",{"_index":2363,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["jwt",{"_index":2357,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["jwthelperservice",{"_index":2277,"title":{"classes/JwtHelperService.html":{}},"body":{"classes/JwtHelperService.html":{},"coverage.html":{}}}],["jwtinterceptor",{"_index":2372,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/JwtInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{},"index.html":{}}}],["key",{"_index":1304,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"pipes/GroupByPipe.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"components/SearchInputComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":2605,"title":{},"body":{"injectables/ModalService.html":{}}}],["keyframes",{"_index":2458,"title":{},"body":{"components/LoadingComponent.html":{}}}],["keyvaluepair",{"_index":1303,"title":{"interfaces/KeyValuePair.html":{}},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{}}}],["label",{"_index":995,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FormCheckboxComponent.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"components/SearchInputComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["language",{"_index":1584,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["largetextcelleditor",{"_index":2708,"title":{},"body":{"components/ProductsComponent.html":{}}}],["last",{"_index":2629,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["lastly",{"_index":2015,"title":{},"body":{"components/HomeComponent.html":{}}}],["leave",{"_index":3152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["led",{"_index":2005,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":1198,"title":{},"body":{"directives/DraggableDirective.html":{},"components/LoadingComponent.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["leftnav",{"_index":2664,"title":{},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{}}}],["legend",{"_index":40,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"index.html":{}}}],["len",{"_index":2976,"title":{},"body":{"injectables/UtilsService.html":{}}}],["length",{"_index":1494,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["lessthan",{"_index":1266,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["lg",{"_index":2590,"title":{},"body":{"injectables/ModalService.html":{}}}],["ligula",{"_index":2025,"title":{},"body":{"components/HomeComponent.html":{}}}],["line",{"_index":1399,"title":{},"body":{"components/FooterComponent.html":{}}}],["line:directive",{"_index":2642,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["linear",{"_index":2451,"title":{},"body":{"components/LoadingComponent.html":{}}}],["link",{"_index":2661,"title":{},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{}}}],["links",{"_index":2139,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["list",{"_index":162,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["list'},{'name",{"_index":85,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["list.component.html",{"_index":1433,"title":{},"body":{"components/FormCheckboxListComponent.html":{},"components/FormRadioListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.scss",{"_index":1432,"title":{},"body":{"components/FormCheckboxListComponent.html":{},"components/FormRadioListComponent.html":{}}}],["list.component.ts",{"_index":1431,"title":{},"body":{"components/FormCheckboxListComponent.html":{},"components/FormRadioListComponent.html":{},"coverage.html":{}}}],["list.component.ts:11",{"_index":1434,"title":{},"body":{"components/FormCheckboxListComponent.html":{}}}],["list/form",{"_index":1430,"title":{},"body":{"components/FormCheckboxListComponent.html":{},"components/FormRadioListComponent.html":{},"coverage.html":{}}}],["listcomponent",{"_index":120,"title":{"components/ListComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["listsize",{"_index":2727,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["literal",{"_index":1778,"title":{},"body":{"interfaces/GridColumn.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":895,"title":{},"body":{"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["loaded",{"_index":2227,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["loading",{"_index":2412,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{}}}],["loading'},{'name",{"_index":122,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["loading.component.html",{"_index":2414,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":2413,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.service",{"_index":2471,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["loadingcomponent",{"_index":121,"title":{"components/LoadingComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["loadinginterceptor",{"_index":2461,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"interceptors/LoadingInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{},"index.html":{}}}],["loadingscreenservice",{"_index":2421,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingservice",{"_index":2417,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["loadingsubscription",{"_index":2415,"title":{},"body":{"components/LoadingComponent.html":{}}}],["lodash",{"_index":3101,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":886,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["logged",{"_index":632,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/variables.html":{}}}],["loggedout",{"_index":606,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["loggedoutpathcomponents",{"_index":607,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":126,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":124,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["login(returnurl",{"_index":2077,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["login.component.css",{"_index":2061,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":2060,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["loginactions",{"_index":633,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"interfaces/INavigationState.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginactions.login",{"_index":2064,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["loginactions.logincallback",{"_index":2067,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["loginactions.loginfailed",{"_index":2069,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["loginactions.profile",{"_index":2072,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["loginactions.register",{"_index":2074,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["logincallback",{"_index":608,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logincallbackpathcomponents",{"_index":609,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":123,"title":{"components/LoginComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginfailed",{"_index":610,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["loginfailedpathcomponents",{"_index":611,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["loginmenu",{"_index":2132,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["loginmenucomponent",{"_index":125,"title":{"components/LoginMenuComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginpathcomponents",{"_index":612,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["loginprovider",{"_index":1306,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["loginproviders",{"_index":2527,"title":{},"body":{"classes/MockAppService.html":{}}}],["logout",{"_index":613,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"interfaces/INavigationState-1.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"miscellaneous/variables.html":{}}}],["logout'},{'name",{"_index":129,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["logout(returnurl",{"_index":2149,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["logout.component.css",{"_index":2134,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["logout.component.html",{"_index":2133,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["logoutactions",{"_index":630,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logoutactions.loggedout",{"_index":2146,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["logoutactions.logout",{"_index":2135,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["logoutactions.logoutcallback",{"_index":2144,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["logoutcallback",{"_index":614,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logoutcallbackpathcomponents",{"_index":615,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logoutcomponent",{"_index":128,"title":{"components/LogoutComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["logoutpathcomponents",{"_index":616,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["low",{"_index":1595,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["magna",{"_index":2033,"title":{},"body":{"components/HomeComponent.html":{}}}],["main",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["maintain",{"_index":2258,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["make",{"_index":2358,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["makestatekey",{"_index":578,"title":{},"body":{"injectables/AppService.html":{}}}],["makestatekey('appdata",{"_index":582,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":770,"title":{},"body":{"injectables/AuthorizeService.html":{},"directives/DraggableDirective.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"components/LoginMenuComponent.html":{},"components/MoveShapeComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["map((mm",{"_index":1221,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["map(term",{"_index":2764,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["map(u",{"_index":904,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["map(user",{"_index":810,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["map(x",{"_index":2770,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["margin",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageResizerComponent.html":{},"components/LoadingComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["matching",{"_index":171,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":2256,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["max_height",{"_index":2204,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["max_width",{"_index":2203,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["maximum",{"_index":1496,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["maxlength",{"_index":1495,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["md.clientx",{"_index":1211,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["md.clienty",{"_index":1214,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["medium",{"_index":1594,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["menu",{"_index":2506,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu'},{'name",{"_index":127,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["menu.component.html",{"_index":2508,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu.component.scss",{"_index":2507,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu.component.ts",{"_index":2505,"title":{},"body":{"components/LoginMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:13",{"_index":2511,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu.component.ts:14",{"_index":2509,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu.component.ts:18",{"_index":2510,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu/login",{"_index":2504,"title":{},"body":{"components/LoginMenuComponent.html":{},"coverage.html":{}}}],["mergemap",{"_index":771,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["message",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"components/ChatComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"interfaces/KeyValuePair.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"injectables/ToastService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":974,"title":{},"body":{"components/ChatComponent.html":{}}}],["meta",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{}}}],["method",{"_index":502,"title":{},"body":{"components/AppFormComponent.html":{}}}],["methods",{"_index":19,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FieldBaseComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{}}}],["metus",{"_index":2021,"title":{},"body":{"components/HomeComponent.html":{}}}],["microsoft/signalr",{"_index":986,"title":{},"body":{"components/ChatComponent.html":{},"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{},"dependencies.html":{}}}],["millions",{"_index":1997,"title":{},"body":{"components/HomeComponent.html":{}}}],["mime",{"_index":2957,"title":{},"body":{"injectables/UtilsService.html":{}}}],["minimum",{"_index":1493,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["minlength",{"_index":1492,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["miscellaneous",{"_index":3108,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm.clientx",{"_index":1223,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mm.clienty",{"_index":1224,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mm.preventdefault",{"_index":1222,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mock",{"_index":3082,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockappservice",{"_index":2523,"title":{"classes/MockAppService.html":{}},"body":{"classes/MockAppService.html":{},"coverage.html":{}}}],["mockauthservice",{"_index":2528,"title":{"classes/MockAuthService.html":{}},"body":{"classes/MockAuthService.html":{},"coverage.html":{}}}],["modal",{"_index":131,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["modal.component.html",{"_index":2534,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":2533,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":130,"title":{"components/ModalComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["modaloptions",{"_index":2540,"title":{"interfaces/ModalOptions.html":{}},"body":{"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"coverage.html":{}}}],["modalservice",{"_index":258,"title":{"injectables/ModalService.html":{}},"body":{"components/AppComponent.html":{},"components/ImageResizerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"coverage.html":{}}}],["modalstateservice",{"_index":2536,"title":{"injectables/ModalStateService.html":{}},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"coverage.html":{}}}],["modaltemplate",{"_index":2640,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["modaltemplatedirective",{"_index":166,"title":{"directives/ModalTemplateDirective.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["model",{"_index":401,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"components/SearchInputComponent.html":{},"components/TypeaheadComponent.html":{}}}],["models",{"_index":35,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/AppFormComponent.html":{},"components/CardDeckComponent.html":{},"injectables/FieldBaseComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"modules/SharedModule.html":{}}}],["modern",{"_index":1985,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":518,"title":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"index.html":{}}}],["modules",{"_index":520,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"index.html":{},"modules.html":{}}}],["money_regex",{"_index":1611,"title":{},"body":{"injectables/FormsService.html":{}}}],["moneyvalidator",{"_index":1612,"title":{},"body":{"injectables/FormsService.html":{}}}],["month",{"_index":1047,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/GridComponent.html":{}}}],["more",{"_index":1512,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"components/HomeComponent.html":{},"classes/JwtHelperService.html":{}}}],["mousedown",{"_index":1206,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mousedown.pipe",{"_index":1208,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mousedrag",{"_index":1207,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mousedrag.subscribe(pos",{"_index":1227,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mouseevent",{"_index":957,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["mousemove",{"_index":1204,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mousemove.pipe",{"_index":1220,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["mouseup",{"_index":1202,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["move",{"_index":133,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"miscellaneous/variables.html":{}}}],["moveshape",{"_index":3168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moveshapecomponent",{"_index":132,"title":{"components/MoveShapeComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mr",{"_index":1562,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["mrs",{"_index":1563,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["ms",{"_index":2849,"title":{},"body":{"interceptors/TimingInterceptor.html":{},"components/ToggleSwitchComponent.html":{}}}],["msgpack",{"_index":3093,"title":{},"body":{"dependencies.html":{}}}],["multi",{"_index":363,"title":{},"body":{"directives/AppFileInputDirective.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["multiplecheckboxrequireatleastone",{"_index":1508,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["multiplecheckboxrequireatleastone(fa",{"_index":1631,"title":{},"body":{"injectables/FormsService.html":{}}}],["multiplecheckboxrequiremorethanone",{"_index":1511,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["multiplecheckboxrequiremorethanone(fa",{"_index":1634,"title":{},"body":{"injectables/FormsService.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["navigatetoreturnurl",{"_index":2490,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["navigatetoreturnurl(returnurl",{"_index":2098,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["navigationend",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem",{"_index":2657,"title":{"interfaces/NavItem.html":{}},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"coverage.html":{}}}],["navitemtemplate",{"_index":2662,"title":{},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{}}}],["need",{"_index":2803,"title":{},"body":{"modules/SharedModule.html":{}}}],["needs",{"_index":2056,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["net",{"_index":1588,"title":{},"body":{"components/FormsPlaygroundComponent.html":{},"components/HomeComponent.html":{}}}],["never",{"_index":2090,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["new",{"_index":594,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"directives/FormFieldDirective.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interfaces/KeyValuePair.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MoveShapeComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToggleSwitchComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":1405,"title":{},"body":{"interfaces/ForgotPassword.html":{},"interfaces/ResetPasswordToken.html":{}}}],["next",{"_index":663,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"directives/ModalTemplateDirective.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req",{"_index":2397,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":676,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":2474,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["ng",{"_index":167,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":358,"title":{},"body":{"directives/AppFileInputDirective.html":{},"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":910,"title":{},"body":{"components/CardComponent.html":{},"components/LoadingComponent.html":{},"components/MoveShapeComponent.html":{}}}],["ngbdateadapter",{"_index":1061,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{},"modules/SharedModule.html":{}}}],["ngbdateparserformatter",{"_index":1024,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"modules/SharedModule.html":{}}}],["ngbdatestruct",{"_index":1028,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/DateFilterComponent.html":{}}}],["ngbinputdatepicker",{"_index":1151,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["ngbitem",{"_index":2748,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["ngbmodal",{"_index":2567,"title":{},"body":{"injectables/ModalService.html":{}}}],["ngbmodalref",{"_index":2627,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["ngbmodule",{"_index":2788,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngbtypeaheadselectitemevent",{"_index":2746,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["ngclassinvalid",{"_index":1385,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["ngclassvalid",{"_index":1380,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["ngcontrol",{"_index":1372,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["ngform",{"_index":390,"title":{},"body":{"components/AppFormComponent.html":{},"components/ChatComponent.html":{},"injectables/FormsService.html":{}}}],["ngmodule",{"_index":536,"title":{},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"injectables/ModalStateService.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{}}}],["ngonchanges",{"_index":393,"title":{},"body":{"components/AppFormComponent.html":{},"directives/FormFieldDirective.html":{},"components/GridComponent.html":{}}}],["ngondestroy",{"_index":1183,"title":{},"body":{"directives/DraggableDirective.html":{},"components/LoadingComponent.html":{},"components/SearchInputComponent.html":{}}}],["ngoninit",{"_index":20,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"directives/DraggableDirective.html":{},"components/ExamplesComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["nisl",{"_index":2036,"title":{},"body":{"components/HomeComponent.html":{}}}],["non",{"_index":2020,"title":{},"body":{"components/HomeComponent.html":{}}}],["none",{"_index":2425,"title":{},"body":{"components/LoadingComponent.html":{}}}],["note",{"_index":1269,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["now",{"_index":1899,"title":{},"body":{"components/GridComponent.html":{}}}],["nowrap",{"_index":2909,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["null",{"_index":348,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"injectables/AuthorizeService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/DateFilterComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/variables.html":{}}}],["nulla",{"_index":2019,"title":{},"body":{"components/HomeComponent.html":{}}}],["number",{"_index":1034,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{},"interfaces/GridColumn.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interfaces/KeyValuePair.html":{},"interceptors/LoadingInterceptor.html":{},"components/SearchInputComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number(dateparts[0",{"_index":1896,"title":{},"body":{"components/GridComponent.html":{}}}],["number(dateparts[1",{"_index":1895,"title":{},"body":{"components/GridComponent.html":{}}}],["number(dateparts[2",{"_index":1894,"title":{},"body":{"components/GridComponent.html":{}}}],["numbernotzerovalidator",{"_index":1507,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["numbernotzerovalidator(fc",{"_index":1636,"title":{},"body":{"injectables/FormsService.html":{}}}],["numbervalidator",{"_index":1506,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["numbervalidator(fc",{"_index":1638,"title":{},"body":{"injectables/FormsService.html":{}}}],["object",{"_index":1331,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/variables.html":{}}}],["object.keys(components).join",{"_index":1462,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["object.keys(formvalue",{"_index":1718,"title":{},"body":{"injectables/FormsService.html":{}}}],["object.keys(groupedcollection).map(key",{"_index":1939,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["object.keys(this.form.controls",{"_index":470,"title":{},"body":{"components/AppFormComponent.html":{}}}],["object.keys(this.form.controls).foreach(field",{"_index":513,"title":{},"body":{"components/AppFormComponent.html":{}}}],["objects",{"_index":1901,"title":{},"body":{"components/GridComponent.html":{},"pipes/GroupByPipe.html":{}}}],["objs",{"_index":2979,"title":{},"body":{"injectables/UtilsService.html":{}}}],["observable",{"_index":667,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/DataService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginMenuComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{}}}],["offset",{"_index":2975,"title":{},"body":{"injectables/UtilsService.html":{}}}],["offsetseconds",{"_index":2300,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["og:description",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["og:title",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["oidc",{"_index":766,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/HeaderComponent.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"dependencies.html":{}}}],["ok",{"_index":2613,"title":{},"body":{"injectables/ModalService.html":{}}}],["oklabel",{"_index":2216,"title":{},"body":{"components/ImageResizerComponent.html":{},"interfaces/ModalOptions.html":{}}}],["oncancel",{"_index":1342,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{}}}],["oncardclick",{"_index":945,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["once",{"_index":1764,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["onchange",{"_index":1536,"title":{},"body":{"components/FormSelectComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["onchange($event",{"_index":1537,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["onchanges",{"_index":384,"title":{},"body":{"components/AppFormComponent.html":{},"directives/FormFieldDirective.html":{},"components/GridComponent.html":{}}}],["onclick",{"_index":914,"title":{},"body":{"components/CardComponent.html":{}}}],["onclickhandler",{"_index":940,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["onclickhandler($event",{"_index":956,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["ondatechanged",{"_index":1146,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["ondatechanged(selecteddate",{"_index":1155,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["ondestroy",{"_index":1179,"title":{},"body":{"directives/DraggableDirective.html":{},"components/LoadingComponent.html":{},"components/SearchInputComponent.html":{}}}],["one",{"_index":1509,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"components/HomeComponent.html":{},"classes/JwtHelperService.html":{}}}],["ongridready",{"_index":1800,"title":{},"body":{"components/GridComponent.html":{}}}],["ongridready(params",{"_index":1823,"title":{},"body":{"components/GridComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"directives/DraggableDirective.html":{},"components/ExamplesComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["onlyselected",{"_index":1882,"title":{},"body":{"components/GridComponent.html":{}}}],["onlyself",{"_index":517,"title":{},"body":{"components/AppFormComponent.html":{}}}],["onparentmodelchanged",{"_index":1241,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["onparentmodelchanged(parentmodel",{"_index":1248,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["onremove",{"_index":2169,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["onremove(input",{"_index":2193,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["onsave",{"_index":2170,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["onselectchange",{"_index":1345,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{}}}],["onselectitem",{"_index":2728,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["onselectitem(ngbitem",{"_index":2745,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["onsubmit",{"_index":998,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["opacity",{"_index":2442,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/ModalService.html":{}}}],["open(options",{"_index":2573,"title":{},"body":{"injectables/ModalService.html":{}}}],["opened",{"_index":857,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"components/ModalComponent.html":{},"injectables/ModalStateService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["opens",{"_index":2575,"title":{},"body":{"injectables/ModalService.html":{}}}],["option",{"_index":1510,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["option.value",{"_index":1278,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"components/FormSelectComponent.html":{}}}],["optional",{"_index":192,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"interfaces/ICard.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/ProductsComponent.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":492,"title":{},"body":{"components/AppFormComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FormFieldErrorComponent.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"injectables/ToastService.html":{}}}],["options.cancellabel",{"_index":2548,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["options.map((item",{"_index":496,"title":{},"body":{"components/AppFormComponent.html":{}}}],["options.oklabel",{"_index":2549,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["options.showbuttons",{"_index":2612,"title":{},"body":{"injectables/ModalService.html":{}}}],["options.size",{"_index":2587,"title":{},"body":{"injectables/ModalService.html":{}}}],["options.sticky",{"_index":2604,"title":{},"body":{"injectables/ModalService.html":{}}}],["options.title",{"_index":2546,"title":{},"body":{"components/ModalComponent.html":{}}}],["order",{"_index":2637,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["origin",{"_index":2119,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["otherwise",{"_index":1762,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["out",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["outlet",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata.state",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":929,"title":{},"body":{"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"components/SearchInputComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["output.length",{"_index":2307,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["outputs",{"_index":913,"title":{},"body":{"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ImageResizerComponent.html":{},"components/SearchInputComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["overflow",{"_index":2552,"title":{},"body":{"components/ModalComponent.html":{}}}],["overlay",{"_index":2430,"title":{},"body":{"components/LoadingComponent.html":{}}}],["overview",{"_index":3122,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":3086,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":2440,"title":{},"body":{"components/LoadingComponent.html":{}}}],["padnumber",{"_index":3075,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["padnumber(date.day",{"_index":1055,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["padnumber(date.month",{"_index":1057,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["padnumber(value",{"_index":1039,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"miscellaneous/functions.html":{}}}],["page",{"_index":136,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["pageheadingcomponent",{"_index":135,"title":{"components/PageHeadingComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["pagenav",{"_index":2663,"title":{"interfaces/PageNav.html":{}},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"coverage.html":{}}}],["pairs",{"_index":2980,"title":{},"body":{"injectables/UtilsService.html":{}}}],["param",{"_index":2585,"title":{},"body":{"injectables/ModalService.html":{}}}],["parameter",{"_index":2058,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["parameters",{"_index":191,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/ProductsComponent.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":183,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/GridComponent.html":{}}}],["params.api",{"_index":1870,"title":{},"body":{"components/GridComponent.html":{}}}],["params.columnapi",{"_index":1872,"title":{},"body":{"components/GridComponent.html":{}}}],["params.primarylabel",{"_index":244,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["params.secondarylabel",{"_index":242,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["parentmodel",{"_index":1251,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["parentmodel.filter",{"_index":1277,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["parse",{"_index":1026,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["parse(value",{"_index":1030,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["parseddate",{"_index":1074,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["parseddate.getutcdate",{"_index":1078,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["parseddate.getutcfullyear",{"_index":1076,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["parseddate.getutcmonth",{"_index":1077,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["parseint(`${value",{"_index":1035,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["parseint(md.target.style.left",{"_index":1217,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["parseint(md.target.style.top",{"_index":1219,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["parseiso",{"_index":1068,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["parseiso(date",{"_index":1075,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["parsequery",{"_index":2952,"title":{},"body":{"injectables/UtilsService.html":{}}}],["parsequery(querystring",{"_index":2961,"title":{},"body":{"injectables/UtilsService.html":{}}}],["parts",{"_index":2352,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["parts.length",{"_index":2354,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["pass",{"_index":2606,"title":{},"body":{"injectables/ModalService.html":{}}}],["passed",{"_index":2608,"title":{},"body":{"injectables/ModalService.html":{},"injectables/ModalStateService.html":{}}}],["password",{"_index":1321,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":1105,"title":{},"body":{"injectables/DataService.html":{}}}],["patch(url",{"_index":1120,"title":{},"body":{"injectables/DataService.html":{}}}],["patchform",{"_index":394,"title":{},"body":{"components/AppFormComponent.html":{}}}],["patchform(model",{"_index":421,"title":{},"body":{"components/AppFormComponent.html":{}}}],["path",{"_index":1522,"title":{},"body":{"components/FormFilePathComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["path'},{'name",{"_index":95,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["path.component.html",{"_index":1524,"title":{},"body":{"components/FormFilePathComponent.html":{}}}],["path.component.scss",{"_index":1523,"title":{},"body":{"components/FormFilePathComponent.html":{}}}],["path.component.ts",{"_index":1521,"title":{},"body":{"components/FormFilePathComponent.html":{},"coverage.html":{}}}],["path/form",{"_index":1520,"title":{},"body":{"components/FormFilePathComponent.html":{},"coverage.html":{}}}],["perform",{"_index":833,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["pipe",{"_index":1914,"title":{"pipes/GroupByPipe.html":{},"pipes/SafePipe.html":{},"pipes/UppercasePipe.html":{}},"body":{"pipes/GroupByPipe.html":{},"pipes/SafePipe.html":{},"injectables/TranslatePipe.html":{},"pipes/UppercasePipe.html":{},"coverage.html":{}}}],["pipe(take(1",{"_index":2151,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["pipes",{"_index":1916,"title":{},"body":{"pipes/GroupByPipe.html":{},"pipes/SafePipe.html":{},"modules/SharedModule.html":{},"pipes/UppercasePipe.html":{},"index.html":{}}}],["pipetransform",{"_index":1924,"title":{},"body":{"pipes/GroupByPipe.html":{},"pipes/SafePipe.html":{},"injectables/TranslatePipe.html":{},"pipes/UppercasePipe.html":{}}}],["placeholder",{"_index":1329,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"components/SearchInputComponent.html":{}}}],["platform",{"_index":2004,"title":{},"body":{"components/HomeComponent.html":{}}}],["playground",{"_index":1286,"title":{},"body":{"components/ExamplesComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["playground'},{'name",{"_index":105,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["playground.component",{"_index":1296,"title":{},"body":{"modules/ExamplesModule.html":{}}}],["playground.component.html",{"_index":1554,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["playground.component.scss",{"_index":1553,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["playground.component.ts",{"_index":1552,"title":{},"body":{"components/FormsPlaygroundComponent.html":{},"coverage.html":{}}}],["playground.component.ts:120",{"_index":1558,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["playground.component.ts:13",{"_index":1559,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["playground.component.ts:14",{"_index":1556,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["playground.component.ts:17",{"_index":1557,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["playground/forms",{"_index":1295,"title":{},"body":{"modules/ExamplesModule.html":{},"components/FormsPlaygroundComponent.html":{},"coverage.html":{}}}],["please",{"_index":1542,"title":{},"body":{"components/FormSelectComponent.html":{},"injectables/GlobalErrorHandler.html":{}}}],["point",{"_index":2055,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["pointer",{"_index":964,"title":{},"body":{"components/CardDeckComponent.html":{},"components/DateFilterComponent.html":{},"components/FormDateComponent.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["policy",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/PrivacyComponent.html":{}}}],["pop",{"_index":784,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["popup",{"_index":826,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["popupdisabled",{"_index":712,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["popuperror",{"_index":851,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["popuperror.message",{"_index":852,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["popups",{"_index":829,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["popupsignouterror",{"_index":876,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["porta",{"_index":2026,"title":{},"body":{"components/HomeComponent.html":{}}}],["pos.left",{"_index":1232,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["pos.top",{"_index":1229,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["position",{"_index":1171,"title":{},"body":{"components/DateFilterComponent.html":{},"components/LoadingComponent.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":1106,"title":{},"body":{"injectables/DataService.html":{}}}],["post(url",{"_index":1122,"title":{},"body":{"injectables/DataService.html":{}}}],["postcode",{"_index":1505,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["postcode_regex",{"_index":1613,"title":{},"body":{"injectables/FormsService.html":{}}}],["postcodevalidator",{"_index":1614,"title":{},"body":{"injectables/FormsService.html":{}}}],["pr",{"_index":1673,"title":{},"body":{"injectables/FormsService.html":{}}}],["praesent",{"_index":2030,"title":{},"body":{"components/HomeComponent.html":{}}}],["preboot",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["prebootmodule",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["prebootmodule.withconfig",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["prefer",{"_index":2247,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["prepend",{"_index":1444,"title":{},"body":{"components/FormDateComponent.html":{}}}],["prerendering",{"_index":3097,"title":{},"body":{"dependencies.html":{}}}],["prevent",{"_index":2117,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["prevents",{"_index":1926,"title":{},"body":{"pipes/GroupByPipe.html":{},"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["preview",{"_index":2245,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["previous",{"_index":1936,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["previous[current[property",{"_index":1934,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["previous[current[property]].push(current",{"_index":1935,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["primary",{"_index":224,"title":{},"body":{"components/ActionButtonComponent.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["primaryclicked",{"_index":231,"title":{},"body":{"components/ActionButtonsComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{}}}],["primaryclicked($event",{"_index":234,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["primarylabel",{"_index":1783,"title":{},"body":{"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{}}}],["privacy",{"_index":139,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["privacy.component.html",{"_index":2675,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacycomponent",{"_index":138,"title":{"components/PrivacyComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["private",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"injectables/AppService.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/ChatComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"directives/FieldColorValidationDirective.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"injectables/ToastService.html":{}}}],["problemdetails",{"_index":3016,"title":{},"body":{"coverage.html":{}}}],["process",{"_index":2053,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["processlogincallback",{"_index":2086,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["processlogoutcallback",{"_index":2153,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["processrequestwithtoken",{"_index":2375,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["processrequestwithtoken(token",{"_index":2380,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["product",{"_index":2689,"title":{},"body":{"components/ProductsComponent.html":{}}}],["productdetailvm",{"_index":3018,"title":{},"body":{"coverage.html":{}}}],["productdto",{"_index":2687,"title":{},"body":{"components/ProductsComponent.html":{},"coverage.html":{}}}],["productid",{"_index":2694,"title":{},"body":{"components/ProductsComponent.html":{}}}],["production",{"_index":3142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productname",{"_index":2695,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products",{"_index":2677,"title":{},"body":{"components/ProductsComponent.html":{},"components/ShopComponent.html":{},"miscellaneous/variables.html":{}}}],["products'},{'name",{"_index":141,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["products.component.html",{"_index":2679,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products.component.scss",{"_index":2678,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products/products.component",{"_index":2825,"title":{},"body":{"modules/ShopModule.html":{}}}],["productsclient",{"_index":2684,"title":{},"body":{"components/ProductsComponent.html":{},"coverage.html":{}}}],["productscomponent",{"_index":140,"title":{"components/ProductsComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["productslistvm",{"_index":3021,"title":{},"body":{"coverage.html":{}}}],["profile",{"_index":617,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["profilepathcomponents",{"_index":618,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["programming",{"_index":1583,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["programmingexperience",{"_index":1590,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["programminglanguage",{"_index":1582,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["progress",{"_index":1653,"title":{},"body":{"injectables/FormsService.html":{}}}],["promise",{"_index":576,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/ModalService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"modules/SharedModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":595,"title":{},"body":{"injectables/AppService.html":{}}}],["properly",{"_index":788,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["properties",{"_index":181,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"interfaces/FieldOption.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interfaces/KeyValuePair.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalStateService.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["property",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"pipes/GroupByPipe.html":{},"injectables/ModalService.html":{}}}],["proportions",{"_index":2259,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["protocol",{"_index":2399,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"dependencies.html":{}}}],["provide",{"_index":361,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/GridComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":583,"title":{},"body":{"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/DataService.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/IUser.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["providerdisplayname",{"_index":1308,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["providerkey",{"_index":1307,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["providers",{"_index":312,"title":{},"body":{"directives/AppFileInputDirective.html":{},"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"injectables/ModalStateService.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":182,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"injectables/AppService.html":{},"injectables/AuthorizeService.html":{},"components/ChatComponent.html":{},"injectables/DataService.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"modules/SharedModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToastComponent.html":{},"pipes/UppercasePipe.html":{}}}],["pure",{"_index":1925,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["purposes",{"_index":1272,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["put",{"_index":1107,"title":{},"body":{"injectables/DataService.html":{}}}],["put(url",{"_index":1124,"title":{},"body":{"injectables/DataService.html":{}}}],["px",{"_index":1230,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["query",{"_index":2057,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/TranslatePipe.html":{},"injectables/UtilsService.html":{}}}],["query('.block",{"_index":3154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query(':enter",{"_index":3151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query(':leave",{"_index":3159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparameternames",{"_index":629,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"guards/AuthorizeGuard.html":{},"interfaces/INavigationState.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["queryparameternames.message",{"_index":2083,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["queryparameternames.returnurl",{"_index":708,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["queryparams",{"_index":707,"title":{},"body":{"guards/AuthorizeGuard.html":{},"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["querystring",{"_index":2963,"title":{},"body":{"injectables/UtilsService.html":{}}}],["querystring).split",{"_index":2983,"title":{},"body":{"injectables/UtilsService.html":{}}}],["querystring.substr(1",{"_index":2982,"title":{},"body":{"injectables/UtilsService.html":{}}}],["querystring[0",{"_index":2981,"title":{},"body":{"injectables/UtilsService.html":{}}}],["radio",{"_index":100,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["radiolist",{"_index":1325,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":2456,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["reactiveformsmodule",{"_index":2790,"title":{},"body":{"modules/SharedModule.html":{}}}],["read",{"_index":1276,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ImageResizerComponent.html":{}}}],["reader",{"_index":2198,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["reader.onload",{"_index":2228,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["reader.readasdataurl(file",{"_index":2230,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["readfile",{"_index":2171,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["readfile(file",{"_index":2197,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["readfiles",{"_index":2172,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["readfiles(file",{"_index":2200,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["reading",{"_index":2232,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["readonly",{"_index":654,"title":{},"body":{"interfaces/ApplicationPathsType.html":{}}}],["received",{"_index":1003,"title":{},"body":{"components/ChatComponent.html":{}}}],["recoverycodesleft",{"_index":1312,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["redirect",{"_index":724,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/enumerations.html":{}}}],["redirectauthenticationresult",{"_index":775,"title":{"interfaces/RedirectAuthenticationResult.html":{}},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["redirecterror",{"_index":863,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["redirects",{"_index":2089,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["redirectsignouterror",{"_index":878,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["redirectto",{"_index":3167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirecttoapiauthorizationpath",{"_index":2491,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirecttoapiauthorizationpath(apiauthorizationpath",{"_index":2122,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["redirecttoprofile",{"_index":2096,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["redirecttoregister",{"_index":2094,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["reference",{"_index":2621,"title":{},"body":{"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{}}}],["refresh",{"_index":187,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{}}}],["register",{"_index":619,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"components/LoginMenuComponent.html":{},"directives/ModalTemplateDirective.html":{},"miscellaneous/variables.html":{}}}],["registering",{"_index":2623,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["registeronchange",{"_index":317,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["registeronchange(fn",{"_index":337,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["registerontouched",{"_index":318,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["registerontouched(fn",{"_index":342,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["registerpathcomponents",{"_index":620,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["regular",{"_index":2138,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["reject",{"_index":596,"title":{},"body":{"injectables/AppService.html":{}}}],["rejected",{"_index":2578,"title":{},"body":{"injectables/ModalService.html":{}}}],["relative",{"_index":2113,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["remove",{"_index":2101,"title":{},"body":{"interfaces/INavigationState.html":{},"components/ImageResizerComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{}}}],["remove(toast",{"_index":2870,"title":{},"body":{"injectables/ToastService.html":{}}}],["removeitem",{"_index":3149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renderer2",{"_index":328,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["renderers",{"_index":1840,"title":{},"body":{"components/GridComponent.html":{}}}],["replace",{"_index":2100,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["replace(/:/g",{"_index":624,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["replace(/\\//g",{"_index":623,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["replace(/_/g",{"_index":2306,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["replaceurl",{"_index":2107,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["req",{"_index":666,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clone",{"_index":2393,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["req.method",{"_index":2847,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["req.url.startswith(`${window.location.origin",{"_index":2398,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["req.url.startswith(`//${window.location.host",{"_index":2401,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["req.urlwithparams}%c",{"_index":2848,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":2389,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["required",{"_index":1491,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{}}}],["requiredfiletype",{"_index":1618,"title":{},"body":{"injectables/FormsService.html":{}}}],["requiredfiletype(type",{"_index":1640,"title":{},"body":{"injectables/FormsService.html":{}}}],["res",{"_index":2476,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["res.customers",{"_index":1099,"title":{},"body":{"components/CustomersComponent.html":{}}}],["res.products",{"_index":2712,"title":{},"body":{"components/ProductsComponent.html":{}}}],["reset",{"_index":395,"title":{},"body":{"components/AppFormComponent.html":{},"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"index.html":{}}}],["resetpasswordtoken",{"_index":1402,"title":{"interfaces/ResetPasswordToken.html":{}},"body":{"interfaces/ForgotPassword.html":{},"interfaces/ResetPasswordToken.html":{},"coverage.html":{}}}],["resizable",{"_index":1825,"title":{},"body":{"components/GridComponent.html":{}}}],["resize",{"_index":2173,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resize(img",{"_index":2202,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resized",{"_index":2243,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resized_jpeg",{"_index":2241,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer",{"_index":2164,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer'},{'name",{"_index":119,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["resizer.component.html",{"_index":2166,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.scss",{"_index":2165,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts",{"_index":2163,"title":{},"body":{"components/ImageResizerComponent.html":{},"coverage.html":{}}}],["resizer.component.ts:10",{"_index":2187,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:100",{"_index":2205,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:11",{"_index":2182,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:12",{"_index":2185,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:13",{"_index":2184,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:14",{"_index":2183,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:15",{"_index":2186,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:16",{"_index":2189,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:17",{"_index":2188,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:19",{"_index":2180,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:23",{"_index":2208,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:26",{"_index":2192,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:28",{"_index":2196,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:33",{"_index":2195,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:59",{"_index":2191,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:67",{"_index":2199,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer.component.ts:78",{"_index":2201,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["resizer/image",{"_index":2162,"title":{},"body":{"components/ImageResizerComponent.html":{},"coverage.html":{}}}],["resolve(transferredappdata",{"_index":597,"title":{},"body":{"injectables/AppService.html":{}}}],["resolver",{"_index":1453,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["response",{"_index":891,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/functions.html":{}}}],["response.json",{"_index":897,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["response.ok",{"_index":893,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["responsetype",{"_index":1135,"title":{},"body":{"injectables/DataService.html":{}}}],["responsibility",{"_index":2050,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["restrict",{"_index":2550,"title":{},"body":{"components/ModalComponent.html":{}}}],["result",{"_index":170,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.message",{"_index":2084,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["result.push(array.slice(index",{"_index":2978,"title":{},"body":{"injectables/UtilsService.html":{}}}],["result.status",{"_index":2080,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["result[this.key",{"_index":2758,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["results",{"_index":172,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rethrow",{"_index":1761,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["return",{"_index":208,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FormCheckboxListComponent.html":{},"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/TranslatePipe.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"injectables/FieldBaseComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":628,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"miscellaneous/variables.html":{}}}],["returnurltype",{"_index":627,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rewrite",{"_index":2011,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":1173,"title":{},"body":{"components/DateFilterComponent.html":{},"components/ImageResizerComponent.html":{},"components/LoadingComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["rightnav",{"_index":2665,"title":{},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{}}}],["role",{"_index":746,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["root",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/DataService.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/IUser.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["root'},{'name",{"_index":55,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["rotate",{"_index":2448,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rotate(0deg",{"_index":2459,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rotate(360deg",{"_index":2460,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rounded",{"_index":2925,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["route.data.displaytext",{"_index":1972,"title":{},"body":{"components/HeaderComponent.html":{}}}],["router",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["router.animations",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":539,"title":{},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{}}}],["routermodule.forchild",{"_index":2795,"title":{},"body":{"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":1297,"title":{},"body":{"modules/ExamplesModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{}}}],["routermodule.forroot(routes",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":695,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["routertransition",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":547,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"components/HeaderComponent.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["rows",{"_index":1802,"title":{},"body":{"components/GridComponent.html":{}}}],["rowsselected",{"_index":1803,"title":{},"body":{"components/GridComponent.html":{}}}],["rxjs",{"_index":673,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/DataService.html":{},"directives/DraggableDirective.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MoveShapeComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":675,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"directives/DraggableDirective.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FormsService.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MoveShapeComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{}}}],["s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@[*[a",{"_index":1666,"title":{},"body":{"injectables/FormsService.html":{}}}],["safe",{"_index":2717,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safepipe",{"_index":2715,"title":{"pipes/SafePipe.html":{}},"body":{"pipes/SafePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"index.html":{}}}],["same",{"_index":2012,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["sanitizer",{"_index":2721,"title":{},"body":{"pipes/SafePipe.html":{}}}],["save",{"_index":2177,"title":{},"body":{"components/ImageResizerComponent.html":{},"components/ModalComponent.html":{}}}],["scale",{"_index":1996,"title":{},"body":{"components/HomeComponent.html":{}}}],["scelerisque",{"_index":2035,"title":{},"body":{"components/HomeComponent.html":{}}}],["search",{"_index":143,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["search(terms",{"_index":2940,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchinputcomponent",{"_index":142,"title":{"components/SearchInputComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["secondary",{"_index":216,"title":{},"body":{"components/ActionButtonComponent.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["secondaryclicked",{"_index":232,"title":{},"body":{"components/ActionButtonsComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{}}}],["secondaryclicked($event",{"_index":237,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["secondarylabel",{"_index":1784,"title":{},"body":{"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{}}}],["see",{"_index":817,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["select",{"_index":1326,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"components/FormSelectComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["select'},{'name",{"_index":102,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["select.component.html",{"_index":1535,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.scss",{"_index":1534,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts",{"_index":1533,"title":{},"body":{"components/FormSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:11",{"_index":1538,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select/form",{"_index":1532,"title":{},"body":{"components/FormSelectComponent.html":{},"coverage.html":{}}}],["selected",{"_index":1332,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/GridComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["selecteddate",{"_index":1157,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["selecteddate.day",{"_index":1166,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["selecteddate.month",{"_index":1165,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["selectitem",{"_index":2732,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"directives/FieldColorValidationDirective.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["selects",{"_index":2220,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["self",{"_index":1377,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["semper",{"_index":2029,"title":{},"body":{"components/HomeComponent.html":{}}}],["send",{"_index":997,"title":{},"body":{"components/ChatComponent.html":{},"components/ImageResizerComponent.html":{}}}],["sendmessage",{"_index":975,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendmessage(form",{"_index":978,"title":{},"body":{"components/ChatComponent.html":{}}}],["sent",{"_index":990,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["server",{"_index":3091,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":2387,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{}}}],["services",{"_index":1987,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"directives/ModalTemplateDirective.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/TranslatePipe.html":{}}}],["serviceworkermodule",{"_index":540,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":377,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["setconfig(value",{"_index":439,"title":{},"body":{"components/AppFormComponent.html":{}}}],["setdate",{"_index":1147,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["setdate(date",{"_index":1158,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["setdisabled",{"_index":396,"title":{},"body":{"components/AppFormComponent.html":{}}}],["setdisabled(name",{"_index":424,"title":{},"body":{"components/AppFormComponent.html":{}}}],["setdisabledstate",{"_index":319,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["setdisabledstate(isdisabled",{"_index":344,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["setfocused(isfocused",{"_index":353,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["setheaders",{"_index":2394,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["setitem",{"_index":3148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settimeout",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["settings",{"_index":896,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["settings.automaticsilentrenew",{"_index":898,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["settings.includeidtokeninsilentrenew",{"_index":899,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["setvalue",{"_index":397,"title":{},"body":{"components/AppFormComponent.html":{}}}],["setvalue(name",{"_index":427,"title":{},"body":{"components/AppFormComponent.html":{}}}],["shadow",{"_index":2922,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["shape",{"_index":2646,"title":{},"body":{"components/MoveShapeComponent.html":{},"components/SignalrComponent.html":{},"miscellaneous/variables.html":{}}}],["shape'},{'name",{"_index":134,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["shape.component",{"_index":2837,"title":{},"body":{"modules/SignalrModule.html":{}}}],["shape.component.html",{"_index":2648,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["shape.component.scss",{"_index":2647,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["shape.component.ts",{"_index":2645,"title":{},"body":{"components/MoveShapeComponent.html":{},"coverage.html":{}}}],["shape.component.ts:12",{"_index":2652,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["shape.component.ts:13",{"_index":2649,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["shape.component.ts:16",{"_index":2650,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["shape/draggable.directive",{"_index":2838,"title":{},"body":{"modules/SignalrModule.html":{}}}],["shape/draggable.directive.ts",{"_index":1178,"title":{},"body":{"directives/DraggableDirective.html":{},"coverage.html":{}}}],["shape/draggable.directive.ts:10",{"_index":1187,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["shape/draggable.directive.ts:11",{"_index":1184,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["shape/draggable.directive.ts:13",{"_index":1188,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["shape/draggable.directive.ts:15",{"_index":1186,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["shape/draggable.directive.ts:54",{"_index":1185,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["shape/move",{"_index":2644,"title":{},"body":{"components/MoveShapeComponent.html":{},"modules/SignalrModule.html":{},"coverage.html":{}}}],["shared",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedkey",{"_index":1316,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["sharedmodule",{"_index":529,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"index.html":{},"modules.html":{}}}],["shop",{"_index":2814,"title":{},"body":{"components/ShopComponent.html":{},"miscellaneous/variables.html":{}}}],["shop'},{'name",{"_index":145,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["shop.component",{"_index":2823,"title":{},"body":{"modules/ShopModule.html":{}}}],["shop.component.html",{"_index":2816,"title":{},"body":{"components/ShopComponent.html":{}}}],["shop.component.scss",{"_index":2815,"title":{},"body":{"components/ShopComponent.html":{}}}],["shop.routes",{"_index":2822,"title":{},"body":{"modules/ShopModule.html":{}}}],["shopcomponent",{"_index":144,"title":{"components/ShopComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shopmodule",{"_index":2817,"title":{"modules/ShopModule.html":{}},"body":{"modules/ShopModule.html":{},"index.html":{},"modules.html":{}}}],["show",{"_index":188,"title":{},"body":{"components/ActionButtonComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"injectables/ToastService.html":{}}}],["show(textortpl",{"_index":2872,"title":{},"body":{"injectables/ToastService.html":{}}}],["showasterisk",{"_index":1352,"title":{},"body":{"injectables/FieldBaseComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["showasterisk(config",{"_index":1356,"title":{},"body":{"injectables/FieldBaseComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{}}}],["showbuttons",{"_index":2559,"title":{},"body":{"interfaces/ModalOptions.html":{}}}],["showfooter",{"_index":909,"title":{},"body":{"components/CardComponent.html":{}}}],["showindicator",{"_index":1619,"title":{},"body":{"injectables/FormsService.html":{}}}],["showindicator(config",{"_index":1642,"title":{},"body":{"injectables/FormsService.html":{}}}],["showuploadbutton",{"_index":2174,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["sign",{"_index":2158,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["signalr",{"_index":2827,"title":{},"body":{"components/SignalrComponent.html":{},"miscellaneous/variables.html":{}}}],["signalr'},{'name",{"_index":147,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["signalr.component",{"_index":2835,"title":{},"body":{"modules/SignalrModule.html":{}}}],["signalr.component.html",{"_index":2829,"title":{},"body":{"components/SignalrComponent.html":{}}}],["signalr.component.scss",{"_index":2828,"title":{},"body":{"components/SignalrComponent.html":{}}}],["signalr.routes",{"_index":2839,"title":{},"body":{"modules/SignalrModule.html":{}}}],["signalrcomponent",{"_index":146,"title":{"components/SignalrComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["signalrmodule",{"_index":2830,"title":{"modules/SignalrModule.html":{}},"body":{"modules/SignalrModule.html":{},"index.html":{},"modules.html":{}}}],["signin",{"_index":725,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["signin(state",{"_index":749,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["signing",{"_index":872,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["signout",{"_index":726,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["signout(state",{"_index":751,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["signoutresponse",{"_index":880,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["signoutresponse.state.data",{"_index":883,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["silenterror",{"_index":842,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["silently",{"_index":818,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["simple",{"_index":1994,"title":{},"body":{"components/HomeComponent.html":{}}}],["simply",{"_index":793,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["single",{"_index":2391,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["size",{"_index":2560,"title":{},"body":{"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"components/ToggleSwitchComponent.html":{}}}],["slicesize",{"_index":2970,"title":{},"body":{"injectables/UtilsService.html":{}}}],["slider",{"_index":2910,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["slider.round",{"_index":2927,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["slider.round:before",{"_index":2928,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["slider:before",{"_index":2915,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["sliders",{"_index":2926,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["sm",{"_index":2591,"title":{},"body":{"injectables/ModalService.html":{}}}],["solid",{"_index":2453,"title":{},"body":{"components/LoadingComponent.html":{}}}],["somewhere",{"_index":2636,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["sortable",{"_index":1102,"title":{},"body":{"components/CustomersComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/ProductsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"modules/ExamplesModule.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"components/FooterComponent.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/MockAppService.html":{},"classes/MockAuthService.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"components/PageHeadingComponent.html":{},"interfaces/PageNav.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"pipes/SafePipe.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"modules/ShopModule.html":{},"components/SignalrComponent.html":{},"modules/SignalrModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{}}}],["space",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["specify",{"_index":2603,"title":{},"body":{"injectables/ModalService.html":{}}}],["spinner",{"_index":2444,"title":{},"body":{"components/LoadingComponent.html":{}}}],["split",{"_index":625,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":2175,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["src/.../api",{"_index":3116,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.service.ts",{"_index":3131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.constants.ts",{"_index":3133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authorize.service.ts",{"_index":3110,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../custom",{"_index":3118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":3135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":3132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form",{"_index":3134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forms.ts",{"_index":3113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../grid.ts",{"_index":3111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jestglobalmocks.ts",{"_index":3137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":3117,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../models.ts",{"_index":3112,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../router.animations.ts",{"_index":3138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.ts",{"_index":3115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../shop.routes.ts",{"_index":3139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../signalr.routes.ts",{"_index":3140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/+examples/examples.component.ts",{"_index":1279,"title":{},"body":{"components/ExamplesComponent.html":{},"coverage.html":{}}}],["src/app/+examples/examples.component.ts:12",{"_index":1284,"title":{},"body":{"components/ExamplesComponent.html":{}}}],["src/app/+examples/examples.component.ts:8",{"_index":1283,"title":{},"body":{"components/ExamplesComponent.html":{}}}],["src/app/+examples/examples.module.ts",{"_index":1291,"title":{},"body":{"modules/ExamplesModule.html":{}}}],["src/app/+examples/examples/forms",{"_index":1551,"title":{},"body":{"components/FormsPlaygroundComponent.html":{},"coverage.html":{}}}],["src/app/+examples/examples/shop/customers/customers.component.ts",{"_index":1082,"title":{},"body":{"components/CustomersComponent.html":{},"coverage.html":{}}}],["src/app/+examples/examples/shop/customers/customers.component.ts:10",{"_index":1089,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/+examples/examples/shop/customers/customers.component.ts:12",{"_index":1095,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/+examples/examples/shop/customers/customers.component.ts:13",{"_index":1093,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/+examples/examples/shop/customers/customers.component.ts:14",{"_index":1091,"title":{},"body":{"components/CustomersComponent.html":{}}}],["src/app/+examples/examples/shop/products/products.component.ts",{"_index":2676,"title":{},"body":{"components/ProductsComponent.html":{},"coverage.html":{}}}],["src/app/+examples/examples/shop/products/products.component.ts:12",{"_index":2685,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/+examples/examples/shop/products/products.component.ts:14",{"_index":2707,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/+examples/examples/shop/products/products.component.ts:15",{"_index":2706,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/+examples/examples/shop/products/products.component.ts:64",{"_index":2693,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/+examples/examples/shop/products/products.component.ts:68",{"_index":2692,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/+examples/examples/shop/products/products.component.ts:73",{"_index":2691,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/+examples/examples/shop/products/products.component.ts:79",{"_index":2688,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/+examples/examples/shop/shop.component.ts",{"_index":2813,"title":{},"body":{"components/ShopComponent.html":{},"coverage.html":{}}}],["src/app/+examples/examples/shop/shop.module.ts",{"_index":2821,"title":{},"body":{"modules/ShopModule.html":{}}}],["src/app/+examples/examples/shop/shop.routes.ts",{"_index":2993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/+examples/examples/signalr/chat/chat.component.ts",{"_index":969,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/+examples/examples/signalr/chat/chat.component.ts:13",{"_index":981,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/+examples/examples/signalr/chat/chat.component.ts:14",{"_index":983,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/+examples/examples/signalr/chat/chat.component.ts:15",{"_index":984,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/+examples/examples/signalr/chat/chat.component.ts:16",{"_index":976,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/+examples/examples/signalr/chat/chat.component.ts:20",{"_index":979,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/+examples/examples/signalr/chat/chat.component.ts:30",{"_index":977,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/+examples/examples/signalr/move",{"_index":1177,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{},"coverage.html":{}}}],["src/app/+examples/examples/signalr/signalr.component.ts",{"_index":2826,"title":{},"body":{"components/SignalrComponent.html":{},"coverage.html":{}}}],["src/app/+examples/examples/signalr/signalr.module.ts",{"_index":2834,"title":{},"body":{"modules/SignalrModule.html":{}}}],["src/app/+examples/examples/signalr/signalr.routes.ts",{"_index":2996,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":2997,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":532,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":1387,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":1941,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:14",{"_index":1955,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:16",{"_index":1951,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:20",{"_index":1956,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:23",{"_index":1957,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:26",{"_index":1959,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:29",{"_index":1961,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:32",{"_index":1953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:34",{"_index":1954,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/privacy/privacy.component.ts",{"_index":2674,"title":{},"body":{"components/PrivacyComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1976,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/models.ts",{"_index":1298,"title":{},"body":{"interfaces/Field.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/router.animations.ts",{"_index":3066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/accordion/accordion.component.ts",{"_index":9,"title":{},"body":{"components/AccordionComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/accordion/accordion.component.ts:13",{"_index":29,"title":{},"body":{"components/AccordionComponent.html":{}}}],["src/app/shared/components/accordion/accordion.component.ts:9",{"_index":25,"title":{},"body":{"components/AccordionComponent.html":{}}}],["src/app/shared/components/card",{"_index":934,"title":{},"body":{"components/CardDeckComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/card/card.component.ts",{"_index":906,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/card/card.component.ts:18",{"_index":928,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/shared/components/card/card.component.ts:19",{"_index":922,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/shared/components/card/card.component.ts:20",{"_index":920,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/shared/components/card/card.component.ts:21",{"_index":921,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/shared/components/card/card.component.ts:22",{"_index":924,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/shared/components/card/card.component.ts:24",{"_index":917,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/shared/components/card/card.component.ts:27",{"_index":926,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/shared/components/card/card.component.ts:29",{"_index":925,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/shared/components/forms/components/field",{"_index":1347,"title":{},"body":{"injectables/FieldBaseComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/forms/components/form",{"_index":308,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts",{"_index":383,"title":{},"body":{"components/AppFormComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:105",{"_index":428,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:109",{"_index":422,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:113",{"_index":423,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:117",{"_index":429,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:12",{"_index":436,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:13",{"_index":412,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:14",{"_index":411,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:15",{"_index":432,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:16",{"_index":430,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:19",{"_index":410,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:22",{"_index":438,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:26",{"_index":441,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:30",{"_index":443,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:34",{"_index":445,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:38",{"_index":447,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:42",{"_index":449,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:44",{"_index":408,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:48",{"_index":420,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:55",{"_index":419,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:71",{"_index":418,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:77",{"_index":415,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/components/form/form.component.ts:90",{"_index":426,"title":{},"body":{"components/AppFormComponent.html":{}}}],["src/app/shared/components/forms/directives/field",{"_index":1366,"title":{},"body":{"directives/FieldColorValidationDirective.html":{},"coverage.html":{}}}],["src/app/shared/components/forms/directives/form",{"_index":1445,"title":{},"body":{"directives/FormFieldDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/forms/forms.service.ts",{"_index":1606,"title":{},"body":{"injectables/FormsService.html":{},"coverage.html":{}}}],["src/app/shared/components/forms/forms.service.ts:10",{"_index":1686,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:100",{"_index":1669,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:11",{"_index":1671,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:110",{"_index":1688,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:12",{"_index":1668,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:120",{"_index":1665,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:129",{"_index":1687,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:13",{"_index":1690,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:138",{"_index":1672,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:14",{"_index":1625,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:147",{"_index":1641,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:163",{"_index":1643,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:173",{"_index":1648,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:18",{"_index":1657,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:183",{"_index":1654,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:191",{"_index":1659,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:24",{"_index":1630,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:28",{"_index":1627,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:36",{"_index":1645,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:43",{"_index":1632,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:58",{"_index":1635,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:73",{"_index":1651,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:78",{"_index":1639,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/forms/forms.service.ts:89",{"_index":1637,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/app/shared/components/grid/components/date",{"_index":1140,"title":{},"body":{"components/DateFilterComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/grid/components/dropdown",{"_index":1235,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"coverage.html":{}}}],["src/app/shared/components/grid/grid.component.ts",{"_index":1785,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/grid/grid.component.ts:104",{"_index":1811,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:108",{"_index":1810,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:112",{"_index":1813,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:146",{"_index":1821,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:17",{"_index":1830,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:18",{"_index":1832,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:19",{"_index":1807,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:20",{"_index":1809,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:21",{"_index":1808,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:22",{"_index":1834,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:24",{"_index":1826,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:28",{"_index":1829,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:33",{"_index":1806,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:37",{"_index":1836,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:40",{"_index":1822,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:83",{"_index":1824,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/grid.component.ts:88",{"_index":1819,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/shared/components/grid/renderers/action",{"_index":174,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/image",{"_index":2161,"title":{},"body":{"components/ImageResizerComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/list/list.component.ts",{"_index":2404,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/list/list.component.ts:10",{"_index":2406,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:13",{"_index":2407,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:15",{"_index":2409,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/loading/loading.component.ts",{"_index":2411,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/loading/loading.component.ts:12",{"_index":2420,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/shared/components/loading/loading.component.ts:16",{"_index":2422,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/shared/components/loading/loading.component.ts:24",{"_index":2423,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/shared/components/login",{"_index":2503,"title":{},"body":{"components/LoginMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/login/login.component.ts",{"_index":2048,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/login/login.component.ts:109",{"_index":2499,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/login/login.component.ts:18",{"_index":2493,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/login/login.component.ts:22",{"_index":2497,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/login/login.component.ts:46",{"_index":2495,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/login/login.component.ts:66",{"_index":2498,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/login/login.component.ts:82",{"_index":2502,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/login/login.component.ts:86",{"_index":2501,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/login/login.component.ts:90",{"_index":2496,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/login/login.component.ts:98",{"_index":2494,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/components/logout/logout.component.ts",{"_index":2128,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/logout/logout.component.ts:18",{"_index":2517,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/shared/components/logout/logout.component.ts:22",{"_index":2521,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/shared/components/logout/logout.component.ts:45",{"_index":2519,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/shared/components/logout/logout.component.ts:70",{"_index":2522,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/shared/components/logout/logout.component.ts:88",{"_index":2520,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/shared/components/logout/logout.component.ts:94",{"_index":2518,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/shared/components/modal/modal",{"_index":2633,"title":{},"body":{"directives/ModalTemplateDirective.html":{},"coverage.html":{}}}],["src/app/shared/components/modal/modal.component.ts",{"_index":2530,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/modal/modal.component.ts:14",{"_index":2537,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/components/modal/modal.component.ts:20",{"_index":2539,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/components/modal/modal.component.ts:24",{"_index":2538,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/components/page",{"_index":2666,"title":{},"body":{"components/PageHeadingComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/search",{"_index":2723,"title":{},"body":{"components/SearchInputComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/toast/toast.comonent.ts",{"_index":2853,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/toast/toast.comonent.ts:10",{"_index":2861,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/components/toast/toast.comonent.ts:12",{"_index":2860,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/components/toast/toast.comonent.ts:9",{"_index":2858,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/components/toggle",{"_index":2886,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/typeahead/typeahead.component.ts",{"_index":2935,"title":{},"body":{"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/typeahead/typeahead.component.ts:13",{"_index":2939,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/shared/components/typeahead/typeahead.component.ts:15",{"_index":2941,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/shared/components/typeahead/typeahead.component.ts:8",{"_index":2938,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/shared/components/typeahead/typeahead.component.ts:9",{"_index":2937,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/shared/constants/auth.constants.ts",{"_index":601,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/models/accordion.ts",{"_index":2042,"title":{},"body":{"interfaces/IAccordionItem.html":{},"coverage.html":{}}}],["src/app/shared/models/auth.ts",{"_index":1401,"title":{},"body":{"interfaces/ForgotPassword.html":{},"interfaces/ResetPasswordToken.html":{},"coverage.html":{}}}],["src/app/shared/models/card.ts",{"_index":2044,"title":{},"body":{"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"coverage.html":{}}}],["src/app/shared/models/forms.ts",{"_index":1333,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/models/grid.ts",{"_index":1772,"title":{},"body":{"interfaces/GridColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/models/list.ts",{"_index":2046,"title":{},"body":{"interfaces/IListItem.html":{},"coverage.html":{}}}],["src/app/shared/models/modal.ts",{"_index":2555,"title":{},"body":{"interfaces/ModalOptions.html":{},"coverage.html":{}}}],["src/app/shared/models/nav.ts",{"_index":2658,"title":{},"body":{"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"coverage.html":{}}}],["src/app/shared/pipes/group",{"_index":1917,"title":{},"body":{"pipes/GroupByPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/safe.pipe.ts",{"_index":2716,"title":{},"body":{"pipes/SafePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/safe.pipe.ts:7",{"_index":2719,"title":{},"body":{"pipes/SafePipe.html":{}}}],["src/app/shared/pipes/translate.pipe.ts",{"_index":2929,"title":{},"body":{"injectables/TranslatePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/translate.pipe.ts:11",{"_index":2933,"title":{},"body":{"injectables/TranslatePipe.html":{}}}],["src/app/shared/pipes/translate.pipe.ts:9",{"_index":2931,"title":{},"body":{"injectables/TranslatePipe.html":{}}}],["src/app/shared/pipes/uppercase.pipe.ts",{"_index":2942,"title":{},"body":{"pipes/UppercasePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/uppercase.pipe.ts:7",{"_index":2945,"title":{},"body":{"pipes/UppercasePipe.html":{}}}],["src/app/shared/services/app.service.ts",{"_index":567,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/app.service.ts:11",{"_index":573,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/shared/services/app.service.ts:14",{"_index":577,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/shared/services/app.service.ts:17",{"_index":575,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/shared/services/authorize.service.ts",{"_index":710,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/services/authorize.service.ts:131",{"_index":730,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:143",{"_index":752,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:165",{"_index":733,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:177",{"_index":735,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:181",{"_index":739,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:185",{"_index":754,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:189",{"_index":748,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:193",{"_index":737,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:213",{"_index":743,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:40",{"_index":756,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:41",{"_index":757,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:42",{"_index":758,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:43",{"_index":761,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:45",{"_index":763,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:49",{"_index":764,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:53",{"_index":745,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:57",{"_index":747,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:61",{"_index":742,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:78",{"_index":741,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/authorize.service.ts:93",{"_index":750,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["src/app/shared/services/config.service.ts",{"_index":1014,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/shared/services/config.service.ts:11",{"_index":1017,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/shared/services/config.service.ts:15",{"_index":1016,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/shared/services/config.service.ts:7",{"_index":1015,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/shared/services/custom",{"_index":1022,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/services/data.service.ts",{"_index":1103,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/shared/services/data.service.ts:16",{"_index":1117,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/services/data.service.ts:20",{"_index":1119,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/services/data.service.ts:24",{"_index":1126,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/services/data.service.ts:28",{"_index":1123,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/services/data.service.ts:32",{"_index":1121,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/services/data.service.ts:36",{"_index":1114,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/services/data.service.ts:9",{"_index":1111,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/services/global",{"_index":1735,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["src/app/shared/services/guards/authorize.guard.ts",{"_index":685,"title":{},"body":{"guards/AuthorizeGuard.html":{},"coverage.html":{}}}],["src/app/shared/services/guards/authorize.guard.ts:11",{"_index":690,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["src/app/shared/services/guards/authorize.guard.ts:13",{"_index":696,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["src/app/shared/services/guards/authorize.guard.ts:17",{"_index":699,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["src/app/shared/services/interceptors/auth.interceptor.ts",{"_index":658,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/services/interceptors/auth.interceptor.ts:10",{"_index":660,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/services/interceptors/auth.interceptor.ts:13",{"_index":665,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/shared/services/interceptors/jwt.interceptor.ts",{"_index":2373,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/services/interceptors/jwt.interceptor.ts:10",{"_index":2376,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/shared/services/interceptors/jwt.interceptor.ts:13",{"_index":2377,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/shared/services/interceptors/jwt.interceptor.ts:20",{"_index":2381,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/shared/services/interceptors/jwt.interceptor.ts:32",{"_index":2379,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/shared/services/interceptors/loading.interceptor.ts",{"_index":2462,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/services/interceptors/loading.interceptor.ts:11",{"_index":2466,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/shared/services/interceptors/loading.interceptor.ts:15",{"_index":2469,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/shared/services/interceptors/loading.interceptor.ts:31",{"_index":2467,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/shared/services/interceptors/timing.interceptor.ts",{"_index":2840,"title":{},"body":{"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/services/interceptors/timing.interceptor.ts:10",{"_index":2842,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/shared/services/interceptors/timing.interceptor.ts:7",{"_index":2841,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/shared/services/jwt",{"_index":2279,"title":{},"body":{"classes/JwtHelperService.html":{},"coverage.html":{}}}],["src/app/shared/services/loading.service.ts",{"_index":2480,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/shared/services/loading.service.ts:10",{"_index":2483,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading.service.ts:14",{"_index":2484,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading.service.ts:8",{"_index":2486,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/modal",{"_index":2618,"title":{},"body":{"injectables/ModalStateService.html":{},"coverage.html":{}}}],["src/app/shared/services/modal.service.ts",{"_index":2561,"title":{},"body":{"injectables/ModalService.html":{},"coverage.html":{}}}],["src/app/shared/services/modal.service.ts:13",{"_index":2568,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/shared/services/modal.service.ts:22",{"_index":2574,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/shared/services/modal.service.ts:50",{"_index":2581,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/shared/services/modal.service.ts:67",{"_index":2570,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/shared/services/modal.service.ts:71",{"_index":2572,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/shared/services/modal.service.ts:75",{"_index":2583,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/shared/services/toast.service.ts",{"_index":2865,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/shared/services/toast.service.ts:13",{"_index":2869,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:17",{"_index":2878,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:21",{"_index":2867,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:25",{"_index":2873,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:29",{"_index":2871,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:7",{"_index":2879,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:9",{"_index":2876,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/utils.service.ts",{"_index":2948,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["src/app/shared/services/utils.service.ts:16",{"_index":2958,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/shared/services/utils.service.ts:38",{"_index":2954,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/shared/services/utils.service.ts:49",{"_index":2962,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/shared/services/utils.service.ts:7",{"_index":2960,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2781,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.ts",{"_index":3079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/jestglobalmocks.ts",{"_index":3081,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":3083,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stagger(400",{"_index":3161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1005,"title":{},"body":{"components/ChatComponent.html":{},"components/ImageResizerComponent.html":{},"components/MoveShapeComponent.html":{}}}],["started",{"_index":1008,"title":{},"body":{"components/ChatComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["starting",{"_index":2054,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["startleft",{"_index":1216,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["startloading",{"_index":2481,"title":{},"body":{"injectables/LoadingService.html":{}}}],["starttop",{"_index":1218,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["startx",{"_index":1210,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["starty",{"_index":1213,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["state",{"_index":694,"title":{},"body":{"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"directives/ModalTemplateDirective.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/variables.html":{}}}],["state.options",{"_index":2542,"title":{},"body":{"components/ModalComponent.html":{}}}],["state.returnurl",{"_index":2120,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["state.service",{"_index":2584,"title":{},"body":{"injectables/ModalService.html":{}}}],["state.service.ts",{"_index":2619,"title":{},"body":{"injectables/ModalStateService.html":{},"coverage.html":{}}}],["state.service.ts:19",{"_index":2630,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["state.service.ts:24",{"_index":2628,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["state.service.ts:29",{"_index":2632,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["state.template",{"_index":2643,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["state.url",{"_index":709,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["statements",{"_index":2987,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":435,"title":{},"body":{"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{}}}],["staticaction",{"_index":2731,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["status",{"_index":776,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/functions.html":{}}}],["stoploading",{"_index":2482,"title":{},"body":{"injectables/LoadingService.html":{}}}],["storage",{"_index":2334,"title":{},"body":{"classes/JwtHelperService.html":{},"miscellaneous/variables.html":{}}}],["storage[key",{"_index":3147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":2635,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["stored",{"_index":1888,"title":{},"body":{"components/GridComponent.html":{}}}],["str",{"_index":2291,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["str.charat(idx",{"_index":2330,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["str.length",{"_index":2319,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["str.replace",{"_index":2304,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["string",{"_index":197,"title":{},"body":{"components/ActionButtonComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/DataService.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/ForgotPassword.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"injectables/FormsService.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/ModalOptions.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["string(str).replace",{"_index":2318,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["string.fromcharcode(255",{"_index":2342,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["stringtoisoutcstring",{"_index":1620,"title":{},"body":{"injectables/FormsService.html":{}}}],["stringtoisoutcstring(datestring",{"_index":1644,"title":{},"body":{"injectables/FormsService.html":{}}}],["stsurl",{"_index":3143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":3153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":173,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/ImageResizerComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["styleurls",{"_index":178,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["subject",{"_index":2485,"title":{},"body":{"injectables/LoadingService.html":{}}}],["submit",{"_index":1417,"title":{},"body":{"components/FormButtonGroupComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["submit($event",{"_index":1418,"title":{},"body":{"components/FormButtonGroupComponent.html":{}}}],["submitted",{"_index":405,"title":{},"body":{"components/AppFormComponent.html":{}}}],["subscription",{"_index":1182,"title":{},"body":{"directives/DraggableDirective.html":{},"components/LoadingComponent.html":{},"components/SearchInputComponent.html":{}}}],["success",{"_index":218,"title":{},"body":{"components/ActionButtonComponent.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/GridColumn.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["success(message",{"_index":2875,"title":{},"body":{"injectables/ToastService.html":{}}}],["success(state",{"_index":753,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["successauthenticationresult",{"_index":773,"title":{"interfaces/SuccessAuthenticationResult.html":{}},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["successfully",{"_index":2148,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["summarize",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["suppliercompanyname",{"_index":2699,"title":{},"body":{"components/ProductsComponent.html":{}}}],["support",{"_index":3126,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1465,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["supportedtypes",{"_index":1461,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["supposed",{"_index":2625,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["sure",{"_index":2215,"title":{},"body":{"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{}}}],["svg",{"_index":3127,"title":{},"body":{"modules.html":{}}}],["swaggerexception",{"_index":3022,"title":{},"body":{"coverage.html":{}}}],["switch",{"_index":211,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/GridComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"classes/JwtHelperService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["switch'},{'name",{"_index":152,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["switch.component.html",{"_index":2890,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.scss",{"_index":2889,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts",{"_index":2888,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:13",{"_index":2893,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:16",{"_index":2894,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:17",{"_index":2896,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:18",{"_index":2895,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:19",{"_index":2897,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:21",{"_index":2901,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:23",{"_index":2899,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch/toggle",{"_index":2887,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["switchmap",{"_index":2755,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["switchmap(term",{"_index":2768,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["t",{"_index":1115,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Field.html":{},"injectables/FormsService.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"injectables/ToastService.html":{}}}],["table",{"_index":2332,"title":{},"body":{"classes/JwtHelperService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3085,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":772,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["take(1",{"_index":802,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["takeuntil",{"_index":1190,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["takeuntil(mouseup",{"_index":1225,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["tap",{"_index":702,"title":{},"body":{"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FormsService.html":{},"interfaces/IUser.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginMenuComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((event",{"_index":1721,"title":{},"body":{"injectables/FormsService.html":{}}}],["tap(event",{"_index":2844,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["tap(res",{"_index":2475,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["tap(u",{"_index":805,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["target",{"_index":1200,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["target.style.left",{"_index":1231,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["target.style.top",{"_index":1228,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["targeted",{"_index":2390,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["team",{"_index":2006,"title":{},"body":{"components/HomeComponent.html":{}}}],["telehponevalidator",{"_index":1615,"title":{},"body":{"injectables/FormsService.html":{}}}],["telephone",{"_index":1498,"title":{},"body":{"components/FormFieldErrorComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{}}}],["telephone_regex",{"_index":1616,"title":{},"body":{"injectables/FormsService.html":{}}}],["tellus",{"_index":2040,"title":{},"body":{"components/HomeComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"interfaces/Field.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["template.directive.ts",{"_index":2634,"title":{},"body":{"directives/ModalTemplateDirective.html":{},"coverage.html":{}}}],["template.directive.ts:21",{"_index":2639,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["template[modal",{"_index":168,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["templateref",{"_index":919,"title":{},"body":{"components/CardComponent.html":{},"interfaces/Field.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["terms",{"_index":1596,"title":{},"body":{"components/FormsPlaygroundComponent.html":{},"components/TypeaheadComponent.html":{}}}],["test(fromquery",{"_index":2115,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["test(req.url",{"_index":2403,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["text",{"_index":965,"title":{},"body":{"components/CardDeckComponent.html":{},"injectables/DataService.html":{},"interfaces/GridColumn.html":{},"interfaces/IListItem.html":{},"components/LoadingComponent.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"components/SearchInputComponent.html":{},"miscellaneous/enumerations.html":{}}}],["text$.pipe(debouncetime(this.debouncetime",{"_index":2761,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["textarea",{"_index":1324,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"components/FormTextareaComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["textarea'},{'name",{"_index":107,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["textarea.component.html",{"_index":1546,"title":{},"body":{"components/FormTextareaComponent.html":{}}}],["textarea.component.scss",{"_index":1545,"title":{},"body":{"components/FormTextareaComponent.html":{}}}],["textarea.component.ts",{"_index":1544,"title":{},"body":{"components/FormTextareaComponent.html":{},"coverage.html":{}}}],["textarea/form",{"_index":1543,"title":{},"body":{"components/FormTextareaComponent.html":{},"coverage.html":{}}}],["textbox",{"_index":1319,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"miscellaneous/enumerations.html":{}}}],["textfilter",{"_index":1259,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["textfiltermodel",{"_index":1249,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["textobservable",{"_index":2760,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["textobservable.pipe",{"_index":2763,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["textortpl",{"_index":2874,"title":{},"body":{"injectables/ToastService.html":{}}}],["theme",{"_index":1912,"title":{},"body":{"components/GridComponent.html":{}}}],["then((data",{"_index":591,"title":{},"body":{"injectables/AppService.html":{}}}],["this._changedetectorref.detectchanges",{"_index":2428,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this._config",{"_index":454,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this._config.filter(x",{"_index":455,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this._elementref.nativeelement",{"_index":381,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["this._elementref.nativeelement.value",{"_index":376,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["this._elmref.nativeelement.style.display",{"_index":2424,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this._hubconnection",{"_index":1192,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this._hubconnection.invoke('moveshape",{"_index":1233,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this._hubconnection.on('shapemoved",{"_index":1194,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this._onchange",{"_index":379,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["this._onchange(file",{"_index":372,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["this._ontouched",{"_index":373,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["this._renderer.setproperty",{"_index":380,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["this._user",{"_index":796,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this._user.role",{"_index":797,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this._user.role.indexof(role",{"_index":798,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.activatedroute.snapshot.queryparammap.get(queryparameternames.message",{"_index":2070,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":2110,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["this.activatedroute.snapshot.url[1",{"_index":2062,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["this.appservice.appdata.content['app_description",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appservice.appdata.content['app_title",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appservice.appdata.content[query",{"_index":2934,"title":{},"body":{"injectables/TranslatePipe.html":{}}}],["this.appservice.appdata.cookieconsent.cookiestring",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appservice.appdata.cookieconsent.showconsent",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appservice.appdata.cultures",{"_index":1966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authorize.getaccesstoken().pipe(mergemap(token",{"_index":2382,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.authorize.isauthenticated().pipe(tap(isauthenticated",{"_index":704,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["this.authorizeservice",{"_index":2150,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["this.authorizeservice.completesignin(url",{"_index":2088,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.authorizeservice.completesignout(window.location.href",{"_index":2154,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["this.authorizeservice.getuser().pipe(map(u",{"_index":2515,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["this.authorizeservice.isauthenticated",{"_index":2513,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["this.authorizeservice.signin(state",{"_index":2078,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.authorizeservice.signout(state",{"_index":2152,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["this.authservice.isloggedin",{"_index":1963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.user",{"_index":1964,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.b64decodeunicode(output",{"_index":2311,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["this.base64toblob(base64imagecontent",{"_index":2967,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.base_url}api",{"_index":1127,"title":{},"body":{"injectables/DataService.html":{}}}],["this.cdref.detectchanges",{"_index":933,"title":{},"body":{"components/CardComponent.html":{}}}],["this.columns",{"_index":1100,"title":{},"body":{"components/CustomersComponent.html":{},"components/GridComponent.html":{}}}],["this.columns.map(c",{"_index":1845,"title":{},"body":{"components/GridComponent.html":{}}}],["this.component",{"_index":1458,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["this.component.instance.config",{"_index":1459,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["this.config",{"_index":505,"title":{},"body":{"components/AppFormComponent.html":{},"components/ChatComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormsPlaygroundComponent.html":{}}}],["this.config.filter",{"_index":457,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.config.find(control",{"_index":482,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.config.map(item",{"_index":506,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.config.onselectchange",{"_index":1539,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.config.onselectchange($event.target.value",{"_index":1540,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.config.onsubmit(this.formgroup",{"_index":1421,"title":{},"body":{"components/FormButtonGroupComponent.html":{}}}],["this.config.type",{"_index":1464,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["this.container.createcomponent(component",{"_index":1468,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["this.control.control",{"_index":1381,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["this.control.control.invalid",{"_index":1386,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["this.control.control.touched",{"_index":1383,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["this.control.control.valid",{"_index":1382,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["this.controls.foreach(control",{"_index":488,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.controls.map(item",{"_index":472,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.createcontrol(config",{"_index":485,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.createcontrol(control",{"_index":490,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.creategroup",{"_index":467,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.cultures.filter(x",{"_index":1967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.currencypipe.transform(params.data[column.field",{"_index":1905,"title":{},"body":{"components/GridComponent.html":{}}}],["this.currentvalue",{"_index":1263,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["this.customerclient.getall().subscribe(res",{"_index":1097,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.customers",{"_index":1098,"title":{},"body":{"components/CustomersComponent.html":{}}}],["this.dataservice",{"_index":588,"title":{},"body":{"injectables/AppService.html":{}}}],["this.date",{"_index":1163,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["this.decodetoken(token",{"_index":2364,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["this.decreaserequests",{"_index":2477,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["this.deleteproduct.bind(this",{"_index":2705,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.domain_regex.test(fc.value",{"_index":1706,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.dropdownfilteroptions",{"_index":1261,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["this.dynamicaction",{"_index":2767,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.dynamicaction(term).pipe",{"_index":2769,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.editproduct.bind(this",{"_index":2704,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.element.nativeelement",{"_index":1201,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["this.element.nativeelement.css",{"_index":1197,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.email_regex.test(fc.value",{"_index":1703,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.ensureusermanagerinitialized",{"_index":837,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.error('the",{"_index":858,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.error('there",{"_index":873,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.error(error",{"_index":887,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.error(redirecterror",{"_index":865,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.error(redirectsignouterror",{"_index":879,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.fb.array",{"_index":495,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.fb.control",{"_index":500,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.fb.control(item.selected",{"_index":497,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.fb.group",{"_index":487,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.fc.form",{"_index":1364,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["this.fc.validate",{"_index":1422,"title":{},"body":{"components/FormButtonGroupComponent.html":{}}}],["this.fieldconfig.errormessages",{"_index":1513,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["this.fieldconfig.errormessages[code",{"_index":1514,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["this.file",{"_index":374,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["this.file_src",{"_index":2209,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.footertemplate.nativeelement",{"_index":931,"title":{},"body":{"components/CardComponent.html":{}}}],["this.footertemplate.nativeelement.children.length",{"_index":932,"title":{},"body":{"components/CardComponent.html":{}}}],["this.form",{"_index":466,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.addcontrol(name",{"_index":484,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.controls[name",{"_index":501,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.controls[name].setvalue(value",{"_index":509,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.controls[name][method",{"_index":504,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.get(field",{"_index":515,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.patchvalue(model",{"_index":511,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.patchvalue(this.model",{"_index":469,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.removecontrol(control",{"_index":477,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.reset",{"_index":993,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.form.valid",{"_index":462,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.value",{"_index":463,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.form.valuechanges",{"_index":461,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.formcomponent.form.get(this.fieldconfig.name",{"_index":1485,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["this.formcomponent.submitted",{"_index":1384,"title":{},"body":{"directives/FieldColorValidationDirective.html":{},"components/FormFieldErrorComponent.html":{}}}],["this.formgroup.controls[this.config.name]).controls",{"_index":1435,"title":{},"body":{"components/FormCheckboxListComponent.html":{}}}],["this.formservice.showindicator(config",{"_index":1365,"title":{},"body":{"injectables/FieldBaseComponent.html":{}}}],["this.formsservice.datevalidator",{"_index":1574,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["this.formsservice.domainvalidator",{"_index":1578,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["this.formsservice.emailvalidator",{"_index":1568,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["this.formsservice.multiplecheckboxrequiremorethanone",{"_index":1585,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["this.formsservice.telehponevalidator",{"_index":1570,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["this.getdata",{"_index":2709,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.geterrortext(errorcode",{"_index":1490,"title":{},"body":{"components/FormFieldErrorComponent.html":{}}}],["this.getfilterparams.call(this",{"_index":1852,"title":{},"body":{"components/GridComponent.html":{}}}],["this.getfilters.call(this",{"_index":1850,"title":{},"body":{"components/GridComponent.html":{}}}],["this.gettokenexpirationdate(token",{"_index":2368,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["this.getuser().pipe(map(u",{"_index":799,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.getuserfromstorage().pipe",{"_index":804,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.getvaluegetter.call(this",{"_index":1853,"title":{},"body":{"components/GridComponent.html":{}}}],["this.gridapi",{"_index":1841,"title":{},"body":{"components/GridComponent.html":{}}}],["this.gridapi.exportdataascsv",{"_index":1881,"title":{},"body":{"components/GridComponent.html":{}}}],["this.gridapi.getselectedrows",{"_index":1842,"title":{},"body":{"components/GridComponent.html":{}}}],["this.gridapi.getselectedrows().length",{"_index":1843,"title":{},"body":{"components/GridComponent.html":{}}}],["this.gridcolumnapi",{"_index":1871,"title":{},"body":{"components/GridComponent.html":{}}}],["this.gridcolumns",{"_index":1844,"title":{},"body":{"components/GridComponent.html":{}}}],["this.handleauthorization(isauthenticated",{"_index":705,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["this.height",{"_index":2240,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.http.delete(`${this.baseurl}/${url",{"_index":1139,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(`${this.baseurl}/${url",{"_index":1134,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.patch(`${this.baseurl}/${url",{"_index":1138,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.post(`${this.baseurl}/${url",{"_index":1137,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.put(`${this.baseurl}/${url",{"_index":1136,"title":{},"body":{"injectables/DataService.html":{}}}],["this.hub",{"_index":1000,"title":{},"body":{"components/ChatComponent.html":{},"components/MoveShapeComponent.html":{}}}],["this.hub.invoke('moveshape",{"_index":2654,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["this.hub.invoke('send",{"_index":991,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.hub.on('send",{"_index":1002,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.hub.on('shapemoved",{"_index":2653,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["this.injector.get(toastservice).danger('unauthorised",{"_index":1752,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["this.injector.get(toastservice).danger(error",{"_index":1760,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["this.injector.get(toastservice).danger(this.formaterrors(errorresponse.error.errors",{"_index":1755,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["this.isauthenticated",{"_index":2512,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["this.iscollapsed",{"_index":1969,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.issameoriginurl(req",{"_index":2392,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.listsize",{"_index":2766,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.loading$.next(false",{"_index":2488,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loading$.next(true",{"_index":2487,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingscreenservice.loading$.pipe().subscribe((status",{"_index":2427,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingservice.startloading",{"_index":2473,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["this.loadingservice.stoploading",{"_index":2479,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["this.loadingsubscription",{"_index":2426,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingsubscription.unsubscribe",{"_index":2429,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.login(this.getreturnurl",{"_index":2065,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.logout(this.getreturnurl",{"_index":2137,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["this.message.next('the",{"_index":2142,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["this.message.next('you",{"_index":2147,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["this.message.next(message",{"_index":2071,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.message.next(result.message",{"_index":2093,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["this.message.next(undefined",{"_index":2079,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.messages.push(data",{"_index":992,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messages.push(received",{"_index":1004,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.meta.addtags",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalservice",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/ImageResizerComponent.html":{}}}],["this.modalservice.hasopenmodals",{"_index":2617,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.modalservice.open(this.state.options.component",{"_index":2593,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.modalservice.open(this.state.template",{"_index":2614,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.model",{"_index":468,"title":{},"body":{"components/AppFormComponent.html":{},"injectables/ConfigService.html":{},"components/SearchInputComponent.html":{}}}],["this.money_regex.test(control.value",{"_index":1708,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.navigatetoreturnurl(returnurl",{"_index":2081,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["this.navigatetoreturnurl(this.getreturnurl(result.state",{"_index":2092,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["this.ngform.resetform",{"_index":512,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.ngform.submitted",{"_index":464,"title":{},"body":{"components/AppFormComponent.html":{}}}],["this.oncardclick.next",{"_index":960,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["this.onchange.next(e.target.checked",{"_index":2903,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["this.onsubmit.bind(this",{"_index":1600,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["this.options",{"_index":2541,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.params",{"_index":206,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["this.params.buttontype",{"_index":212,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.params.click(this.params.data",{"_index":207,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.params.dropdownfilteroptions",{"_index":1262,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["this.params.ondatechanged",{"_index":1167,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["this.params.parentfilterinstance(instance",{"_index":1264,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["this.params.primaryclicked(this.params.data",{"_index":240,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["this.params.secondaryclicked(this.params.data",{"_index":241,"title":{},"body":{"components/ActionButtonsComponent.html":{}}}],["this.params.show(this.params.data",{"_index":209,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.popupdisabled",{"_index":846,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.postcode_regex.test(control.value",{"_index":1707,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.processlogincallback",{"_index":2068,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.processlogoutcallback",{"_index":2145,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["this.processrequestwithtoken(token",{"_index":2383,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.products",{"_index":2711,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.productsclient.delete(product.productid).subscribe(this.getdata",{"_index":2714,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.productsclient.getall().subscribe(res",{"_index":2710,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.readfile(file",{"_index":2233,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.readfiles(input.files[0",{"_index":2223,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.redirect",{"_index":862,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.redirecttoapiauthorizationpath(`${applicationpaths.identitymanagepath}?${returnurltype}=?client_id=${applicationname",{"_index":2097,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.redirecttoapiauthorizationpath(`${applicationpaths.identityregisterpath}?${returnurltype}=?client_id=${applicationname",{"_index":2095,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.redirecttoprofile",{"_index":2073,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.redirecttoregister",{"_index":2075,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.remove.next",{"_index":2218,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.resize(img",{"_index":2238,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.resolver.resolvecomponentfactory",{"_index":1467,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["this.router.events.subscribe(evt",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/authentication/login",{"_index":680,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.router.navigate(applicationpaths.loginfailedpathcomponents",{"_index":2082,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(applicationpaths.loginpathcomponents",{"_index":706,"title":{},"body":{"guards/AuthorizeGuard.html":{}}}],["this.router.navigatebyurl(returnurl",{"_index":2106,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2722,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this.save.next(this.file_src",{"_index":2211,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.search(of(this.model)).subscribe",{"_index":2759,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.selectitem.next(ngbitem.item",{"_index":2773,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.sendmessage.bind(this",{"_index":999,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.setdate(null",{"_index":1169,"title":{},"body":{"components/DateFilterComponent.html":{}}}],["this.show(message",{"_index":2880,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.showfooter",{"_index":930,"title":{},"body":{"components/CardComponent.html":{}}}],["this.src",{"_index":2210,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.state.modal",{"_index":2592,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.modal.close('confirmed",{"_index":2543,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.state.modal.close(data",{"_index":2615,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.modal.componentinstance.data",{"_index":2610,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.modal.dismiss('not",{"_index":2544,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.state.modal.dismiss(data",{"_index":2616,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.modal.result",{"_index":2611,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.options",{"_index":2586,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.options.component",{"_index":2589,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.options.data",{"_index":2609,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.options.template",{"_index":2588,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.state.template",{"_index":2594,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.staticaction",{"_index":2762,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.staticaction(term).slice(0",{"_index":2765,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.subscription",{"_index":1226,"title":{},"body":{"directives/DraggableDirective.html":{},"components/SearchInputComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1234,"title":{},"body":{"directives/DraggableDirective.html":{},"components/SearchInputComponent.html":{}}}],["this.success(signoutresponse",{"_index":882,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.success(state",{"_index":840,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.success(user",{"_index":869,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.telephone_regex.test(fc.value",{"_index":1705,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.title.settitle(this.appservice.appdata.content['app_title",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toasts",{"_index":2884,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toasts.filter(t",{"_index":2885,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toasts.push",{"_index":2883,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.tokengetter",{"_index":2298,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["this.totalrequests",{"_index":2472,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["this.transferstate.get(app_data_key",{"_index":586,"title":{},"body":{"injectables/AppService.html":{}}}],["this.transferstate.set(app_data_key",{"_index":592,"title":{},"body":{"injectables/AppService.html":{}}}],["this.triggersaveonselect",{"_index":2224,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["this.updatetitleandmeta",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["this.urlbase64decode(parts[1",{"_index":2360,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["this.user",{"_index":795,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager",{"_index":889,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.events.addusersignedout(async",{"_index":901,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.getuser",{"_index":903,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.removeuser",{"_index":902,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.signincallback(url",{"_index":866,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.signinpopup(this.createarguments",{"_index":850,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.signinredirect(this.createarguments(state",{"_index":861,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.signinsilent(this.createarguments",{"_index":838,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.signoutcallback(url",{"_index":881,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.signoutpopup(this.createarguments",{"_index":874,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usermanager.signoutredirect(this.createarguments(state",{"_index":877,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.username",{"_index":2514,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["this.usersubject.asobservable",{"_index":807,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usersubject.next(null",{"_index":875,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usersubject.next(u",{"_index":806,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usersubject.next(user",{"_index":867,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usersubject.next(user.profile",{"_index":839,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.usersubject.pipe",{"_index":801,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["this.validationexist(x",{"_index":1716,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.width",{"_index":2239,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["three",{"_index":814,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["throw",{"_index":847,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"directives/FormFieldDirective.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["throwerror",{"_index":672,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["throwerror(error",{"_index":681,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["throwexception",{"_index":3064,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwexception(message",{"_index":3120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["time",{"_index":1323,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"directives/FormFieldDirective.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{},"components/LogoutComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["time'},{'name",{"_index":109,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["time.component.html",{"_index":1550,"title":{},"body":{"components/FormTimeComponent.html":{}}}],["time.component.scss",{"_index":1549,"title":{},"body":{"components/FormTimeComponent.html":{}}}],["time.component.ts",{"_index":1548,"title":{},"body":{"components/FormTimeComponent.html":{},"coverage.html":{}}}],["time/form",{"_index":1547,"title":{},"body":{"components/FormTimeComponent.html":{},"coverage.html":{}}}],["times",{"_index":2547,"title":{},"body":{"components/ModalComponent.html":{}}}],["timinginterceptor",{"_index":2780,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/SharedModule.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["title",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"interfaces/Field.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"interfaces/KeyValuePair.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{}}}],["titlekey",{"_index":944,"title":{},"body":{"components/CardDeckComponent.html":{}}}],["toast",{"_index":2854,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toast'},{'name",{"_index":149,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["toast.component.html",{"_index":2855,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.service",{"_index":1750,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["toast.textortpl",{"_index":2864,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":148,"title":{"components/ToastComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["toasts",{"_index":2863,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toastservice",{"_index":1749,"title":{"injectables/ToastService.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toformdata",{"_index":1621,"title":{},"body":{"injectables/FormsService.html":{}}}],["toformdata(formvalue",{"_index":1647,"title":{},"body":{"injectables/FormsService.html":{}}}],["toggle",{"_index":151,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["togglemenu",{"_index":1947,"title":{},"body":{"components/HeaderComponent.html":{}}}],["toggleswitchcomponent",{"_index":150,"title":{"components/ToggleSwitchComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["tointeger",{"_index":3076,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tointeger(dateparts[0",{"_index":1049,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["tointeger(dateparts[1",{"_index":1051,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["tointeger(dateparts[2",{"_index":1053,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["tointeger(value",{"_index":1033,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"miscellaneous/functions.html":{}}}],["token",{"_index":1404,"title":{},"body":{"interfaces/ForgotPassword.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/ResetPasswordToken.html":{}}}],["token.split",{"_index":2353,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["tokengetter",{"_index":2281,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["tokens",{"_index":2104,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["tomodel",{"_index":1063,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["tomodel(date",{"_index":1066,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{}}}],["tooltip",{"_index":1341,"title":{},"body":{"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IFieldConfig-1.html":{}}}],["top",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"directives/DraggableDirective.html":{},"components/LoadingComponent.html":{},"components/MoveShapeComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["topromise",{"_index":590,"title":{},"body":{"injectables/AppService.html":{},"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["totalrequests",{"_index":2463,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["trackbyfn",{"_index":2405,"title":{},"body":{"components/ListComponent.html":{}}}],["trackbyfn(index",{"_index":2408,"title":{},"body":{"components/ListComponent.html":{}}}],["traditional",{"_index":834,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["transferredappdata",{"_index":587,"title":{},"body":{"injectables/AppService.html":{}}}],["transferstate",{"_index":571,"title":{},"body":{"injectables/AppService.html":{}}}],["transform",{"_index":1920,"title":{},"body":{"pipes/GroupByPipe.html":{},"components/LoadingComponent.html":{},"pipes/SafePipe.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"pipes/UppercasePipe.html":{},"miscellaneous/variables.html":{}}}],["transform(collection",{"_index":1921,"title":{},"body":{"pipes/GroupByPipe.html":{}}}],["transform(query",{"_index":2932,"title":{},"body":{"injectables/TranslatePipe.html":{}}}],["transform(url",{"_index":2718,"title":{},"body":{"pipes/SafePipe.html":{}}}],["transform(value",{"_index":2944,"title":{},"body":{"pipes/UppercasePipe.html":{}}}],["transition",{"_index":2913,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["translate",{"_index":1394,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/TranslatePipe.html":{}}}],["translatepipe",{"_index":2778,"title":{"injectables/TranslatePipe.html":{}},"body":{"modules/SharedModule.html":{},"injectables/TranslatePipe.html":{},"coverage.html":{},"index.html":{}}}],["translatex",{"_index":3160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":3158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":3155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(26px",{"_index":2924,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["translatey(0px",{"_index":3164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(100px",{"_index":3162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transparent",{"_index":2455,"title":{},"body":{"components/LoadingComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["trigger('routertransition",{"_index":3150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggering",{"_index":2141,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["triggersaveonselect",{"_index":2176,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["true",{"_index":364,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"modules/SharedModule.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["trueorfalsevalidator",{"_index":1622,"title":{},"body":{"injectables/FormsService.html":{}}}],["trueorfalsevalidator(fc",{"_index":1650,"title":{},"body":{"injectables/FormsService.html":{}}}],["try",{"_index":812,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"classes/JwtHelperService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["trying",{"_index":885,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"directives/FormFieldDirective.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["tslint:disable",{"_index":2641,"title":{},"body":{"directives/ModalTemplateDirective.html":{}}}],["two",{"_index":831,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationPathsType.html":{},"interceptors/AuthInterceptor.html":{},"guards/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"injectables/ConfigService.html":{},"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/CustomersComponent.html":{},"injectables/DataService.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"injectables/FieldBaseComponent.html":{},"directives/FieldColorValidationDirective.html":{},"interfaces/FieldOption.html":{},"interfaces/ForgotPassword.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"interfaces/IAccordionItem.html":{},"interfaces/ICard.html":{},"interfaces/ICardEvent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IListItem.html":{},"interfaces/IModalOptions.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/KeyValuePair.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalOptions.html":{},"injectables/ModalService.html":{},"injectables/ModalStateService.html":{},"directives/ModalTemplateDirective.html":{},"components/MoveShapeComponent.html":{},"interfaces/NavItem.html":{},"interfaces/PageNav.html":{},"components/ProductsComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/ResetPasswordToken.html":{},"components/SearchInputComponent.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interceptors/TimingInterceptor.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"injectables/TranslatePipe.html":{},"components/TypeaheadComponent.html":{},"pipes/UppercasePipe.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.tolowercase",{"_index":1712,"title":{},"body":{"injectables/FormsService.html":{}}}],["typeahead",{"_index":154,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["typeahead.component.html",{"_index":2936,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeaheadcomponent",{"_index":153,"title":{"components/TypeaheadComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{},"index.html":{}}}],["typealiases",{"_index":3128,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1073,"title":{},"body":{"injectables/CustomNgbDateNativeUTCAdapter.html":{},"injectables/FormsService.html":{}}}],["types",{"_index":1466,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["typescript",{"_index":2001,"title":{},"body":{"components/HomeComponent.html":{}}}],["u",{"_index":800,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"components/LoginMenuComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["u.name",{"_index":2516,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["u.profile",{"_index":905,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["uage",{"_index":2902,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["ullamcorper",{"_index":2018,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":890,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"injectables/FormsService.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["unitprice",{"_index":2697,"title":{},"body":{"components/ProductsComponent.html":{}}}],["universal",{"_index":556,"title":{},"body":{"modules/AppModule.html":{}}}],["unset",{"_index":967,"title":{},"body":{"components/CardDeckComponent.html":{},"components/FormCheckboxComponent.html":{}}}],["unsupported",{"_index":1463,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["until",{"_index":2248,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["up",{"_index":791,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["updatecustomercommand",{"_index":3023,"title":{},"body":{"coverage.html":{}}}],["updateproductcommand",{"_index":3024,"title":{},"body":{"coverage.html":{}}}],["updatetitleandmeta",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["upload",{"_index":2222,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["uploadprogress",{"_index":1623,"title":{},"body":{"injectables/FormsService.html":{}}}],["uploadprogress(cb",{"_index":1652,"title":{},"body":{"injectables/FormsService.html":{}}}],["uppercasepipe",{"_index":2779,"title":{"pipes/UppercasePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/UppercasePipe.html":{},"coverage.html":{},"index.html":{}}}],["ups",{"_index":785,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["upsertcategorycommand",{"_index":3025,"title":{},"body":{"coverage.html":{}}}],["upsertemployeecommand",{"_index":3026,"title":{},"body":{"coverage.html":{}}}],["uri",{"_index":2102,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["url",{"_index":731,"title":{},"body":{"injectables/AuthorizeService.html":{},"injectables/DataService.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"pipes/SafePipe.html":{}}}],["urlbase64decode",{"_index":2287,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["urlbase64decode(str",{"_index":2302,"title":{},"body":{"classes/JwtHelperService.html":{}}}],["usage",{"_index":1604,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["use",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"directives/FormFieldDirective.html":{}}}],["useclass",{"_index":2808,"title":{},"body":{"modules/SharedModule.html":{}}}],["used",{"_index":2626,"title":{},"body":{"injectables/ModalStateService.html":{}}}],["useexisting",{"_index":362,"title":{},"body":{"directives/AppFileInputDirective.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2809,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":728,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/ModalService.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["user's",{"_index":2052,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["user.access_token",{"_index":811,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["user.profile",{"_index":868,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["user.state",{"_index":870,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["usereplacetonavigate",{"_index":888,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["userid",{"_index":1403,"title":{},"body":{"interfaces/ForgotPassword.html":{},"interfaces/ResetPasswordToken.html":{}}}],["usermanager",{"_index":713,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["usermanager(settings",{"_index":900,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["username",{"_index":1565,"title":{},"body":{"components/FormsPlaygroundComponent.html":{},"components/LoginMenuComponent.html":{}}}],["users",{"_index":1998,"title":{},"body":{"components/HomeComponent.html":{}}}],["usersubject",{"_index":714,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["using",{"_index":823,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["usually",{"_index":2129,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["utilsservice",{"_index":2947,"title":{"injectables/UtilsService.html":{}},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["uw",{"_index":1683,"title":{},"body":{"injectables/FormsService.html":{}}}],["uwyz0",{"_index":1674,"title":{},"body":{"injectables/FormsService.html":{}}}],["valid",{"_index":404,"title":{},"body":{"components/AppFormComponent.html":{},"directives/FieldColorValidationDirective.html":{},"injectables/FormsService.html":{}}}],["valid(form",{"_index":1656,"title":{},"body":{"injectables/FormsService.html":{}}}],["validate",{"_index":398,"title":{},"body":{"components/AppFormComponent.html":{}}}],["validation",{"_index":491,"title":{},"body":{"components/AppFormComponent.html":{},"components/ChatComponent.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FormsPlaygroundComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["validation.directive.ts",{"_index":1367,"title":{},"body":{"directives/FieldColorValidationDirective.html":{},"coverage.html":{}}}],["validation.directive.ts:13",{"_index":1376,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["validation.directive.ts:18",{"_index":1375,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["validation.directive.ts:9",{"_index":1374,"title":{},"body":{"directives/FieldColorValidationDirective.html":{}}}],["validationexist",{"_index":1624,"title":{},"body":{"injectables/FormsService.html":{}}}],["validationexist(func",{"_index":1658,"title":{},"body":{"injectables/FormsService.html":{}}}],["validatorfn",{"_index":1300,"title":{},"body":{"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"interfaces/KeyValuePair.html":{}}}],["validators",{"_index":987,"title":{},"body":{"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["validators.required",{"_index":996,"title":{},"body":{"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["validators.requiredtrue",{"_index":1599,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["value",{"_index":338,"title":{},"body":{"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"injectables/AuthorizeService.html":{},"components/ChatComponent.html":{},"injectables/CustomDateFormatter.html":{},"injectables/DataService.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"interfaces/Field.html":{},"interfaces/Field-1.html":{},"interfaces/FieldOption.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"components/GridComponent.html":{},"pipes/GroupByPipe.html":{},"components/HeaderComponent.html":{},"interfaces/IEnableAuthenticatorModel.html":{},"interfaces/IFieldConfig.html":{},"interfaces/IFieldConfig-1.html":{},"interfaces/IModalOptions.html":{},"interfaces/IOption.html":{},"interfaces/ISocialLogins.html":{},"interfaces/ITwoFactorModel.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"interfaces/KeyValuePair.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"injectables/ToastService.html":{},"pipes/UppercasePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.touppercase",{"_index":2946,"title":{},"body":{"pipes/UppercasePipe.html":{}}}],["value.trim().split",{"_index":1043,"title":{},"body":{"injectables/CustomDateFormatter.html":{}}}],["valuechanged",{"_index":1242,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{}}}],["valuechanged(value",{"_index":1252,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["valuegetter",{"_index":1777,"title":{},"body":{"interfaces/GridColumn.html":{},"components/GridComponent.html":{}}}],["valuegetterparams",{"_index":1838,"title":{},"body":{"components/GridComponent.html":{}}}],["values",{"_index":2257,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["var",{"_index":44,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"components/DropdownFloatingFilterComponent.html":{},"components/ExamplesComponent.html":{},"components/FooterComponent.html":{},"components/FormButtonComponent.html":{},"components/FormButtonGroupComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormCheckboxListComponent.html":{},"components/FormDateComponent.html":{},"components/FormFieldErrorComponent.html":{},"components/FormFileComponent.html":{},"components/FormFilePathComponent.html":{},"components/FormInputComponent.html":{},"components/FormInputGroupComponent.html":{},"components/FormRadioListComponent.html":{},"components/FormSelectComponent.html":{},"components/FormTextareaComponent.html":{},"components/FormTimeComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/PrivacyComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/ShopComponent.html":{},"components/SignalrComponent.html":{},"components/ToastComponent.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["variable",{"_index":2994,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3130,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":2034,"title":{},"body":{"components/HomeComponent.html":{}}}],["vestibulum",{"_index":2024,"title":{},"body":{"components/HomeComponent.html":{}}}],["view",{"_index":1999,"title":{},"body":{"components/HomeComponent.html":{},"directives/ModalTemplateDirective.html":{}}}],["viewchild",{"_index":451,"title":{},"body":{"components/AppFormComponent.html":{},"components/CardComponent.html":{},"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{},"components/MoveShapeComponent.html":{}}}],["viewchild('draggable",{"_index":2651,"title":{},"body":{"components/MoveShapeComponent.html":{}}}],["viewchild('footertemplate",{"_index":927,"title":{},"body":{"components/CardComponent.html":{}}}],["viewchild('formref",{"_index":434,"title":{},"body":{"components/AppFormComponent.html":{}}}],["viewchild(appformcomponent",{"_index":980,"title":{},"body":{"components/ChatComponent.html":{},"components/FormsPlaygroundComponent.html":{}}}],["viewcontainerref",{"_index":1451,"title":{},"body":{"directives/FormFieldDirective.html":{}}}],["viewencapsulation",{"_index":1837,"title":{},"body":{"components/GridComponent.html":{}}}],["viewencapsulation.none",{"_index":1787,"title":{},"body":{"components/GridComponent.html":{}}}],["void",{"_index":31,"title":{},"body":{"components/AccordionComponent.html":{},"components/ActionButtonComponent.html":{},"components/ActionButtonsComponent.html":{},"components/AppComponent.html":{},"directives/AppFileInputDirective.html":{},"components/AppFormComponent.html":{},"guards/AuthorizeGuard.html":{},"components/CardComponent.html":{},"components/CardDeckComponent.html":{},"components/ChatComponent.html":{},"components/CustomersComponent.html":{},"components/DateFilterComponent.html":{},"directives/DraggableDirective.html":{},"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{},"components/ExamplesComponent.html":{},"components/FormButtonGroupComponent.html":{},"directives/FormFieldDirective.html":{},"components/FormFieldErrorComponent.html":{},"components/FormSelectComponent.html":{},"components/FormsPlaygroundComponent.html":{},"injectables/FormsService.html":{},"injectables/GlobalErrorHandler.html":{},"components/GridComponent.html":{},"components/HeaderComponent.html":{},"interfaces/INavigationState.html":{},"components/ImageResizerComponent.html":{},"components/ListComponent.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/MoveShapeComponent.html":{},"components/PageHeadingComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"injectables/ToastService.html":{},"components/ToggleSwitchComponent.html":{},"components/TypeaheadComponent.html":{}}}],["wait",{"_index":2237,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["want",{"_index":790,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"components/ImageResizerComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["warn",{"_index":2213,"title":{},"body":{"components/ImageResizerComponent.html":{},"injectables/ModalService.html":{},"injectables/ToastService.html":{}}}],["warn(message",{"_index":2877,"title":{},"body":{"injectables/ToastService.html":{}}}],["warn(options",{"_index":2580,"title":{},"body":{"injectables/ModalService.html":{}}}],["warning",{"_index":220,"title":{},"body":{"components/ActionButtonComponent.html":{},"interfaces/GridColumn.html":{},"injectables/ModalService.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["ways",{"_index":816,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["we're",{"_index":1273,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["web",{"_index":1982,"title":{},"body":{"components/HomeComponent.html":{}}}],["webkit",{"_index":2912,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["website",{"_index":1577,"title":{},"body":{"components/FormsPlaygroundComponent.html":{}}}],["websites",{"_index":1989,"title":{},"body":{"components/HomeComponent.html":{}}}],["webstoragestatestore",{"_index":765,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["weight:bold",{"_index":2852,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["whether",{"_index":2598,"title":{},"body":{"injectables/ModalService.html":{}}}],["white",{"_index":2908,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["width",{"_index":1396,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/GridColumn.html":{},"components/GridComponent.html":{},"components/ImageResizerComponent.html":{},"components/LoadingComponent.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{},"components/ProductsComponent.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["window",{"_index":827,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["window.atob(base64",{"_index":2973,"title":{},"body":{"injectables/UtilsService.html":{}}}],["window.history.state.local",{"_index":2136,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["window.location.href",{"_index":2087,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["window.location.replace(apiauthorizationpath",{"_index":2127,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["window.scrollto(0",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["window.scrollx",{"_index":1212,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["window.scrolly",{"_index":1215,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["windowclass",{"_index":2596,"title":{},"body":{"injectables/ModalService.html":{}}}],["within",{"_index":2143,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{},"injectables/ModalService.html":{}}}],["work",{"_index":787,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{}}}],["worker",{"_index":542,"title":{},"body":{"modules/AppModule.html":{}}}],["worker.js",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["working",{"_index":1768,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["wrapper",{"_index":1244,"title":{},"body":{"components/DropdownFloatingFilterComponent.html":{},"interfaces/DropdownFloatingFilterParams.html":{}}}],["writevalue",{"_index":320,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["writevalue(value",{"_index":347,"title":{},"body":{"directives/AppFileInputDirective.html":{}}}],["www.example.com/api/products",{"_index":2400,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["wxh",{"_index":2254,"title":{},"body":{"components/ImageResizerComponent.html":{}}}],["x",{"_index":1199,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FormsService.html":{},"components/ModalComponent.html":{},"components/MoveShapeComponent.html":{}}}],["x).slice(0",{"_index":2771,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["x.current)[0",{"_index":1968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["x.hidden",{"_index":456,"title":{},"body":{"components/AppFormComponent.html":{}}}],["y",{"_index":1196,"title":{},"body":{"directives/DraggableDirective.html":{},"components/MoveShapeComponent.html":{}}}],["y0",{"_index":1677,"title":{},"body":{"injectables/FormsService.html":{}}}],["year",{"_index":1046,"title":{},"body":{"injectables/CustomDateFormatter.html":{},"injectables/CustomNgbDateNativeUTCAdapter.html":{},"components/GridComponent.html":{}}}],["yes",{"_index":736,"title":{},"body":{"injectables/AuthorizeService.html":{},"components/ImageResizerComponent.html":{},"classes/JwtHelperService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":2435,"title":{},"body":{"components/LoadingComponent.html":{}}}],["z0",{"_index":1661,"title":{},"body":{"injectables/FormsService.html":{}}}],["z]{2",{"_index":1664,"title":{},"body":{"injectables/FormsService.html":{}}}],["z]{2}|gir",{"_index":1684,"title":{},"body":{"injectables/FormsService.html":{}}}],["za",{"_index":1667,"title":{},"body":{"injectables/FormsService.html":{}}}],["zone.js",{"_index":3106,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"modules/ExamplesModule.html":{},"modules/SharedModule.html":{},"modules/ShopModule.html":{},"modules/SignalrModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccordionComponent.html":{"url":"components/AccordionComponent.html","title":"component - AccordionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/accordion/accordion.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accordion\n            \n\n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/accordion/accordion.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         IAccordionItem[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/accordion/accordion.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/accordion/accordion.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IAccordionItem } from '../../models';\n\n@Component({\n  selector: 'app-accordion',\n  templateUrl: './accordion.component.html',\n})\nexport class AccordionComponent implements OnInit {\n  @Input() items: IAccordionItem[];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ item.title }}\n        \n        \n      \n    \n    \n      {{ item.description }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ item.title }}                                    {{ item.description }}      '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionButtonComponent.html":{"url":"components/ActionButtonComponent.html","title":"component - ActionButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/grid/renderers/action-button/action-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICellRendererAngularComp\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-action-button\n            \n\n            \n                styleUrls\n                ./action-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./action-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Public\n                                click\n                            \n                            \n                                    Public\n                                getButtonClass\n                            \n                            \n                                refresh\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-button/action-button.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-button/action-button.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getButtonClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getButtonClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-button/action-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-button/action-button.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-button/action-button.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/renderers/action-button/action-button.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\n\nimport { ButtonType } from '../../../../models';\n\n@Component({\n  selector: 'appc-action-button',\n  styleUrls: ['./action-button.component.scss'],\n  templateUrl: './action-button.component.html',\n})\nexport class ActionButtonComponent implements ICellRendererAngularComp {\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  public click(event: Event) {\n    this.params.click(this.params.data);\n  }\n\n  public show(): boolean {\n    return this.params.show(this.params.data);\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n\n  public getButtonClass(): string {\n    switch (this.params.buttonType as ButtonType) {\n      case ButtonType.Secondary:\n        return 'btn-secondary';\n      case ButtonType.Success:\n        return 'btn-success';\n      case ButtonType.Warning:\n        return 'btn-warning';\n      case ButtonType.Danger:\n        return 'btn-danger';\n      default:\n        return 'btn-primary';\n    }\n  }\n}\n\n    \n\n    \n        \n  Cancel\n\n\n    \n\n    \n                \n                    ./action-button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Cancel'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionButtonsComponent.html":{"url":"components/ActionButtonsComponent.html","title":"component - ActionButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/grid/renderers/action-buttons/action-buttons.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICellRendererAngularComp\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-action-buttons\n            \n\n            \n                styleUrls\n                ./action-buttons.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./action-buttons.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Public\n                                primaryClicked\n                            \n                            \n                                refresh\n                            \n                            \n                                    Public\n                                secondaryClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-buttons/action-buttons.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            primaryClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    primaryClicked($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-buttons/action-buttons.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-buttons/action-buttons.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            secondaryClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    secondaryClicked($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/renderers/action-buttons/action-buttons.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/renderers/action-buttons/action-buttons.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\n\n@Component({\n  selector: 'appc-action-buttons',\n  styleUrls: ['./action-buttons.component.scss'],\n  templateUrl: './action-buttons.component.html',\n})\nexport class ActionButtonsComponent implements ICellRendererAngularComp {\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  public primaryClicked($event: Event) {\n    this.params.primaryClicked(this.params.data);\n  }\n\n  public secondaryClicked($event: Event) {\n    this.params.secondaryClicked(this.params.data);\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ params.secondaryLabel || 'Delete' }}\n  \n  \n    {{ params.primaryLabel || 'Edit' }}\n  \n\n\n    \n\n    \n                \n                    ./action-buttons.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ params.secondaryLabel || \\'Delete\\' }}        {{ params.primaryLabel || \\'Edit\\' }}  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getState\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateTitleAndMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, title: Title, meta: Meta, appService: AppService, modalService: ModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getState(outlet: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateTitleAndMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTitleAndMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { Router, NavigationEnd } from '@angular/router';\n\n// import { routerTransition } from './router.animations';\nimport { AppService, ModalService } from '@app/shared';\n@Component({\n  selector: 'appc-root',\n  // animations: [routerTransition],\n  styleUrls: ['./app.component.scss'],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private title: Title,\n    private meta: Meta,\n    private appService: AppService,\n    private modalService: ModalService,\n  ) {}\n\n  public ngOnInit() {\n    console.log(this.appService.appData);\n\n    this.updateTitleAndMeta();\n    this.router.events.subscribe(evt => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    });\n    // Check cookie consent\n    setTimeout(() => {\n      if (this.appService.appData.cookieConsent.showConsent) {\n        this.modalService\n          .open({\n            title: 'Cookie consent',\n            message: 'Use this space to summarize your privacy and cookie use policy.',\n          })\n          .then(\n            () => {\n              document.cookie = this.appService.appData.cookieConsent.cookieString;\n            },\n            () => {},\n          );\n      }\n    }, 0);\n  }\n\n  public getState(outlet: any) {\n    return outlet.activatedRouteData.state;\n  }\n\n  private updateTitleAndMeta() {\n    this.title.setTitle(this.appService.appData.content['app_title']);\n    this.meta.addTags([\n      { name: 'description', content: this.appService.appData.content['app_description'] },\n      { property: 'og:title', content: this.appService.appData.content['app_title'] },\n      { property: 'og:description', content: this.appService.appData.content['app_description'] },\n    ]);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                main {\n    margin-top: 60px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AppFileInputDirective.html":{"url":"directives/AppFileInputDirective.html","title":"directive - AppFileInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AppFileInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/forms/components/form-file/file-input.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                APP_FILE_INPUT_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appFileInput][type=file]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Private\n                                file\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    focused\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, _renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:26\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            change\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target.files' \n                \n            \n            \n                \nchange(event: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:32\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n\n\n                \n                    \n                        setfocused(isFocused: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form-file/file-input.directive.ts:50\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isFocused\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  ElementRef,\n  HostListener,\n  Input,\n  Renderer2,\n  Directive,\n  forwardRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst APP_FILE_INPUT_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AppFileInputDirective),\n  multi: true,\n};\n\n@Directive({\n  selector: '[appFileInput][type=file]',\n  providers: [APP_FILE_INPUT_ACCESSOR],\n  host: {\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false',\n  },\n})\nexport class AppFileInputDirective implements ControlValueAccessor {\n  @Input() name: string;\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n  private file: File | null = null;\n\n  @HostListener('change', ['$event.target.files'])\n  emitFiles(event: FileList) {\n    const file = event && event.item(0);\n    this._onChange(file);\n    this._onTouched();\n    this.file = file;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n  ) {}\n\n  writeValue(value: null) {\n    // clear file input\n    this._elementRef.nativeElement.value = '';\n    this.file = null;\n  }\n\n  set focused(isFocused: boolean) {\n    if (!isFocused) {\n      this._onTouched();\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(\n      this._elementRef.nativeElement,\n      'disabled',\n      isDisabled,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppFormComponent.html":{"url":"components/AppFormComponent.html","title":"component - AppFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form/form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n            \n                exportAs\n                appForm\n            \n\n\n\n\n\n\n\n            \n                selector\n                app-form\n            \n\n            \n                styleUrls\n                form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _config\n                            \n                            \n                                form\n                            \n                            \n                                ngForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createControl\n                            \n                            \n                                createGroup\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                patchForm\n                            \n                            \n                                reset\n                            \n                            \n                                setDisabled\n                            \n                            \n                                setValue\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                fullWidth\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                                \n                                    controls\n                                \n                                \n                                    changes\n                                \n                                \n                                    valid\n                                \n                                \n                                    value\n                                \n                                \n                                    submitted\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/forms/components/form/form.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fullWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createControl\n                        \n                        \n                    \n                \n            \n            \n                \ncreateControl(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FormControl | FormArray\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchForm\n                        \n                        \n                    \n                \n            \n            \n                \npatchForm(model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabled(name: string, disable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    disable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(name: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form/form.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IFieldConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:22\n                                \n                            \n\n                \n                    \n                        setconfig(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        controls\n                    \n                \n\n                \n                    \n                        getcontrols()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:26\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        changes\n                    \n                \n\n                \n                    \n                        getchanges()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        valid\n                    \n                \n\n                \n                    \n                        getvalid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                \n\n                \n                    \n                        getsubmitted()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form/form.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, NgForm, FormArray } from '@angular/forms';\nimport { IFieldConfig, FieldTypes } from '../../../../models';\n\n@Component({\n  exportAs: 'appForm',\n  selector: 'app-form',\n  styleUrls: ['form.component.scss'],\n  templateUrl: './form.component.html',\n})\nexport class AppFormComponent implements OnChanges, OnInit {\n  @ViewChild('formRef', { static: true }) ngForm: NgForm;\n  @Input() model: any;\n  @Input() fullWidth: boolean;\n  form: FormGroup;\n  _config: IFieldConfig[] = [];\n\n  @Input()\n  set config(value: IFieldConfig[]) {\n    this._config = value;\n  }\n  get config(): IFieldConfig[] {\n    return this._config.filter(x => !x.hidden);\n  }\n\n  get controls() {\n    return this.config.filter(({ type, hidden }) => type !== FieldTypes.Button && type !== FieldTypes.ButtonGroup && !hidden);\n  }\n\n  get changes() {\n    return this.form.valueChanges;\n  }\n\n  get valid() {\n    return this.form.valid;\n  }\n\n  get value() {\n    return this.form.value;\n  }\n\n  get submitted() {\n    return this.ngForm.submitted;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.form = this.createGroup();\n    if (this.model) {\n      this.form.patchValue(this.model);\n    }\n  }\n\n  ngOnChanges() {\n    if (this.form) {\n      const controls = Object.keys(this.form.controls);\n      const configControls = this.controls.map(item => item.name);\n\n      controls.filter(control => configControls.indexOf(control) === -1).forEach(control => this.form.removeControl(control));\n\n      configControls\n        .filter(control => controls.indexOf(control) === -1)\n        .forEach(name => {\n          const config = this.config.find(control => control.name === name);\n          this.form.addControl(name, this.createControl(config));\n        });\n    }\n  }\n\n  createGroup() {\n    const group = this.fb.group({});\n    this.controls.forEach(control => group.addControl(control.name, this.createControl(control)));\n    return group;\n  }\n\n  createControl(config: IFieldConfig): FormControl | FormArray {\n    const { disabled, validation, value, options } = config;\n    if (config.type === FieldTypes.Checkboxlist) {\n      return this.fb.array(\n        options.map((item, index) => {\n          return this.fb.control(item.selected);\n        }),\n        config.validation ? config.validation[0] : null,\n      );\n    }\n    return this.fb.control({ disabled, value }, validation);\n  }\n\n  setDisabled(name: string, disable: boolean) {\n    if (this.form.controls[name]) {\n      const method = disable ? 'disable' : 'enable';\n      this.form.controls[name][method]();\n      return;\n    }\n\n    this.config = this.config.map(item => {\n      if (item.name === name) {\n        item.disabled = disable;\n      }\n      return item;\n    });\n  }\n\n  setValue(name: string, value: any) {\n    this.form.controls[name].setValue(value, { emitEvent: true });\n  }\n\n  patchForm(model) {\n    this.form.patchValue(model);\n  }\n\n  reset() {\n    this.ngForm.resetForm();\n  }\n\n  validate() {\n    Object.keys(this.form.controls).forEach(field => {\n      const control = this.form.get(field);\n      control.markAsTouched({ onlySelf: true });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n     \n  \n\n\n    \n\n    \n                \n                    form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            PrivacyComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n// import { PrebootModule } from 'preboot';\n\nimport { environment } from '../environments/environment';\n\nimport { routes } from './app.routes';\n// Components\nimport { FooterComponent, HeaderComponent, PrivacyComponent } from '@app/components';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { SharedModule } from './shared';\n\n@NgModule({\n  declarations: [\n    // Components\n    AppComponent,\n    HomeComponent,\n    FooterComponent,\n    HeaderComponent,\n    PrivacyComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    // PrebootModule.withConfig({ appRoot: 'appc-root' }),\n    BrowserAnimationsModule,\n    BrowserTransferStateModule,\n    RouterModule.forRoot(routes, { initialNavigation: 'enabled' }),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    SharedModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appData\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrl: string, transferState: TransferState, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/app.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferState\n                                                  \n                                                        \n                                                                        TransferState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAppData\n                        \n                        \n                    \n                \n            \n            \n                \ngetAppData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/app.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appData\n                    \n                \n\n                \n                    \n                        getappData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/app.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { TransferState, makeStateKey } from '@angular/platform-browser';\nimport { Injectable, Inject } from '@angular/core';\n\nimport { DataService } from './data.service';\n\nconst APP_DATA_KEY = makeStateKey('appData');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n  constructor(@Inject('BASE_URL') private baseUrl: string, private transferState: TransferState, private dataService: DataService) {}\n\n  public get appData(): IApplicationConfig {\n    return this.transferState.get(APP_DATA_KEY, null as IApplicationConfig);\n  }\n  getAppData(): Promise {\n    const transferredAppData = this.transferState.get(APP_DATA_KEY, null as IApplicationConfig);\n    if (!transferredAppData) {\n      return this.dataService\n        .get('app/getapplicationdata')\n        .toPromise()\n        .then((data: IApplicationConfig) => {\n          this.transferState.set(APP_DATA_KEY, data);\n          return data;\n        });\n    }\n    return new Promise((resolve, reject) => {\n      resolve(transferredAppData);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationPathsType.html":{"url":"interfaces/ApplicationPathsType.html","title":"interface - ApplicationPathsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationPathsType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/constants/auth.constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ApiAuthorizationClientConfigurationUrl\n                                \n                                \n                                        DefaultLoginRedirectPath\n                                \n                                \n                                        IdentityManagePath\n                                \n                                \n                                        IdentityRegisterPath\n                                \n                                \n                                        LoggedOut\n                                \n                                \n                                        LoggedOutPathComponents\n                                \n                                \n                                        Login\n                                \n                                \n                                        LoginCallback\n                                \n                                \n                                        LoginCallbackPathComponents\n                                \n                                \n                                        LoginFailed\n                                \n                                \n                                        LoginFailedPathComponents\n                                \n                                \n                                        LoginPathComponents\n                                \n                                \n                                        LogOut\n                                \n                                \n                                        LogOutCallback\n                                \n                                \n                                        LogOutCallbackPathComponents\n                                \n                                \n                                        LogOutPathComponents\n                                \n                                \n                                        Profile\n                                \n                                \n                                        ProfilePathComponents\n                                \n                                \n                                        Register\n                                \n                                \n                                        RegisterPathComponents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ApiAuthorizationClientConfigurationUrl\n                                    \n                                \n                                \n                                    \n                                        ApiAuthorizationClientConfigurationUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DefaultLoginRedirectPath\n                                    \n                                \n                                \n                                    \n                                        DefaultLoginRedirectPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IdentityManagePath\n                                    \n                                \n                                \n                                    \n                                        IdentityManagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IdentityRegisterPath\n                                    \n                                \n                                \n                                    \n                                        IdentityRegisterPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoggedOut\n                                    \n                                \n                                \n                                    \n                                        LoggedOut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoggedOutPathComponents\n                                    \n                                \n                                \n                                    \n                                        LoggedOutPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Login\n                                    \n                                \n                                \n                                    \n                                        Login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginCallback\n                                    \n                                \n                                \n                                    \n                                        LoginCallback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginCallbackPathComponents\n                                    \n                                \n                                \n                                    \n                                        LoginCallbackPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginFailed\n                                    \n                                \n                                \n                                    \n                                        LoginFailed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginFailedPathComponents\n                                    \n                                \n                                \n                                    \n                                        LoginFailedPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginPathComponents\n                                    \n                                \n                                \n                                    \n                                        LoginPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LogOut\n                                    \n                                \n                                \n                                    \n                                        LogOut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LogOutCallback\n                                    \n                                \n                                \n                                    \n                                        LogOutCallback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LogOutCallbackPathComponents\n                                    \n                                \n                                \n                                    \n                                        LogOutCallbackPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LogOutPathComponents\n                                    \n                                \n                                \n                                    \n                                        LogOutPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Profile\n                                    \n                                \n                                \n                                    \n                                        Profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProfilePathComponents\n                                    \n                                \n                                \n                                    \n                                        ProfilePathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Register\n                                    \n                                \n                                \n                                    \n                                        Register:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RegisterPathComponents\n                                    \n                                \n                                \n                                    \n                                        RegisterPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { environment } from 'environments/environment';\nexport const ApplicationName = document.baseURI\n  .replace(/\\//g, '')\n  .replace(/:/g, '')\n  .split('.')\n  .join('');\n\nexport const ReturnUrlType = 'returnUrl';\n\nexport const QueryParameterNames = {\n  ReturnUrl: ReturnUrlType,\n  Message: 'message',\n};\n\nexport const LogoutActions = {\n  LogoutCallback: 'logout-callback',\n  Logout: 'logout',\n  LoggedOut: 'logged-out',\n};\n\nexport const LoginActions = {\n  Login: 'login',\n  LoginCallback: 'login-callback',\n  LoginFailed: 'login-failed',\n  Profile: 'profile',\n  Register: 'register',\n};\n\nlet applicationPaths: ApplicationPathsType = {\n  DefaultLoginRedirectPath: '/',\n  ApiAuthorizationClientConfigurationUrl: `${environment.stsUrl}_configuration/${ApplicationName}`,\n  Login: `authentication/${LoginActions.Login}`,\n  LoginFailed: `authentication/${LoginActions.LoginFailed}`,\n  LoginCallback: `authentication/${LoginActions.LoginCallback}`,\n  Register: `authentication/${LoginActions.Register}`,\n  Profile: `authentication/${LoginActions.Profile}`,\n  LogOut: `authentication/${LogoutActions.Logout}`,\n  LoggedOut: `authentication/${LogoutActions.LoggedOut}`,\n  LogOutCallback: `authentication/${LogoutActions.LogoutCallback}`,\n  LoginPathComponents: [],\n  LoginFailedPathComponents: [],\n  LoginCallbackPathComponents: [],\n  RegisterPathComponents: [],\n  ProfilePathComponents: [],\n  LogOutPathComponents: [],\n  LoggedOutPathComponents: [],\n  LogOutCallbackPathComponents: [],\n  IdentityRegisterPath: `${environment.stsUrl}Identity/Account/Register`,\n  IdentityManagePath: `${environment.stsUrl}Identity/Account/Manage`,\n};\n\napplicationPaths = {\n  ...applicationPaths,\n  LoginPathComponents: applicationPaths.Login.split('/'),\n  LoginFailedPathComponents: applicationPaths.LoginFailed.split('/'),\n  RegisterPathComponents: applicationPaths.Register.split('/'),\n  ProfilePathComponents: applicationPaths.Profile.split('/'),\n  LogOutPathComponents: applicationPaths.LogOut.split('/'),\n  LoggedOutPathComponents: applicationPaths.LoggedOut.split('/'),\n  LogOutCallbackPathComponents: applicationPaths.LogOutCallback.split('/'),\n};\n\ninterface ApplicationPathsType {\n  readonly DefaultLoginRedirectPath: string;\n  readonly ApiAuthorizationClientConfigurationUrl: string;\n  readonly Login: string;\n  readonly LoginFailed: string;\n  readonly LoginCallback: string;\n  readonly Register: string;\n  readonly Profile: string;\n  readonly LogOut: string;\n  readonly LoggedOut: string;\n  readonly LogOutCallback: string;\n  readonly LoginPathComponents: string[];\n  readonly LoginFailedPathComponents: string[];\n  readonly LoginCallbackPathComponents: string[];\n  readonly RegisterPathComponents: string[];\n  readonly ProfilePathComponents: string[];\n  readonly LogOutPathComponents: string[];\n  readonly LoggedOutPathComponents: string[];\n  readonly LogOutCallbackPathComponents: string[];\n  readonly IdentityRegisterPath: string;\n  readonly IdentityManagePath: string;\n}\n\nexport const ApplicationPaths: ApplicationPathsType = applicationPaths;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/interceptors/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/interceptors/auth.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/interceptors/auth.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private router: Router) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.status === 401) {\n          this.router.navigate(['/authentication/login']);\n        }\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthorizeGuard.html":{"url":"guards/AuthorizeGuard.html","title":"guard - AuthorizeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthorizeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/services/guards/authorize.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                handleAuthorization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authorize: AuthorizeService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/guards/authorize.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorize\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(_next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/guards/authorize.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthorization(isAuthenticated: boolean, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/guards/authorize.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAuthenticated\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthorizeService } from '../authorize.service';\nimport { tap } from 'rxjs/operators';\nimport { ApplicationPaths, QueryParameterNames } from '../../constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizeGuard implements CanActivate {\n  constructor(private authorize: AuthorizeService, private router: Router) {}\n  canActivate(_next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this.authorize.isAuthenticated().pipe(tap(isAuthenticated => this.handleAuthorization(isAuthenticated, state)));\n  }\n\n  private handleAuthorization(isAuthenticated: boolean, state: RouterStateSnapshot) {\n    if (!isAuthenticated) {\n      this.router.navigate(ApplicationPaths.LoginPathComponents, {\n        queryParams: {\n          [QueryParameterNames.ReturnUrl]: state.url,\n        },\n      });\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizeService.html":{"url":"injectables/AuthorizeService.html","title":"injectable - AuthorizeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/authorize.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _user\n                            \n                            \n                                    Private\n                                popUpDisabled\n                            \n                            \n                                    Private\n                                userManager\n                            \n                            \n                                    Private\n                                userSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                completeSignIn\n                            \n                            \n                                    Public\n                                    Async\n                                completeSignOut\n                            \n                            \n                                    Private\n                                createArguments\n                            \n                            \n                                    Private\n                                    Async\n                                ensureUserManagerInitialized\n                            \n                            \n                                    Private\n                                error\n                            \n                            \n                                    Public\n                                getAccessToken\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Private\n                                getUserFromStorage\n                            \n                            \n                                    Public\n                                hasRole\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                redirect\n                            \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                            \n                                    Public\n                                    Async\n                                signOut\n                            \n                            \n                                    Private\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            completeSignIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    completeSignIn(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            completeSignOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    completeSignOut(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createArguments(state?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            ensureUserManagerInitialized\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureUserManagerInitialized()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAuthenticationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUserFromStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRole(role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IAuthenticationResult\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            signIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(state: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut(state: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            success\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    success(state: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authorize.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IAuthenticationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/authorize.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popUpDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/authorize.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/authorize.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/authorize.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/authorize.service.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/authorize.service.ts:49\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User, UserManager, WebStorageStateStore } from 'oidc-client';\nimport { BehaviorSubject, concat, from, Observable } from 'rxjs';\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\nimport { ApplicationPaths, ApplicationName } from '../constants';\n\nexport type IAuthenticationResult = SuccessAuthenticationResult | FailureAuthenticationResult | RedirectAuthenticationResult;\n\nexport interface SuccessAuthenticationResult {\n  status: AuthenticationResultStatus.Success;\n  state: any;\n}\n\nexport interface FailureAuthenticationResult {\n  status: AuthenticationResultStatus.Fail;\n  message: string;\n}\n\nexport interface RedirectAuthenticationResult {\n  status: AuthenticationResultStatus.Redirect;\n}\n\nexport enum AuthenticationResultStatus {\n  Success,\n  Redirect,\n  Fail,\n}\n\nexport interface IUser extends User {\n  name: string;\n  role: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizeService {\n  // By default pop ups are disabled because they don't work properly on Edge.\n  // If you want to enable pop up authentication simply set this flag to false.\n  private _user: IUser;\n  private popUpDisabled = true;\n  private userManager: UserManager;\n  private userSubject: BehaviorSubject = new BehaviorSubject(null);\n\n  get isLoggedIn(): boolean {\n    return !!this.user;\n  }\n\n  get user(): IUser {\n    return this._user;\n  }\n\n  public hasRole(role: string): boolean {\n    return this._user && this._user.role && this._user.role.indexOf(role) > -1;\n  }\n\n  public isAuthenticated(): Observable {\n    return this.getUser().pipe(map(u => !!u));\n  }\n\n  public getUser(): Observable {\n    return concat(\n      this.userSubject.pipe(\n        take(1),\n        filter(u => !!u),\n      ),\n      this.getUserFromStorage().pipe(\n        filter(u => !!u),\n        tap(u => {\n          this._user = u;\n          this.userSubject.next(u);\n        }),\n      ),\n      this.userSubject.asObservable(),\n    );\n  }\n\n  public getAccessToken(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => from(this.userManager.getUser())),\n      map(user => user && user.access_token),\n    );\n  }\n\n  // We try to authenticate the user in three different ways:\n  // 1) We try to see if we can authenticate the user silently. This happens\n  //    when the user is already logged in on the IdP and is done using a hidden iframe\n  //    on the client.\n  // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\n  //    Pop-Up blocker or the user has disabled PopUps.\n  // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\n  //    redirect flow.\n  public async signIn(state: any): Promise {\n    await this.ensureUserManagerInitialized();\n    let user: User = null;\n    try {\n      user = await this.userManager.signinSilent(this.createArguments());\n      this.userSubject.next(user.profile as any);\n      return this.success(state);\n    } catch (silentError) {\n      // User might not be authenticated, fallback to popup authentication\n      console.log('Silent authentication error: ', silentError);\n\n      try {\n        if (this.popUpDisabled) {\n          throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n        }\n        user = await this.userManager.signinPopup(this.createArguments());\n        this.userSubject.next(user.profile as any);\n        return this.success(state);\n      } catch (popupError) {\n        if (popupError.message === 'Popup window closed') {\n          // The user explicitly cancelled the login action by closing an opened popup.\n          return this.error('The user closed the window.');\n        } else if (!this.popUpDisabled) {\n          console.log('Popup authentication error: ', popupError);\n        }\n\n        // PopUps might be blocked by the user, fallback to redirect\n        try {\n          await this.userManager.signinRedirect(this.createArguments(state));\n          return this.redirect();\n        } catch (redirectError) {\n          console.log('Redirect authentication error: ', redirectError);\n          return this.error(redirectError);\n        }\n      }\n    }\n  }\n\n  public async completeSignIn(url: string): Promise {\n    try {\n      await this.ensureUserManagerInitialized();\n      const user = await this.userManager.signinCallback(url);\n      this.userSubject.next(user && (user.profile as any));\n      return this.success(user && user.state);\n    } catch (error) {\n      console.log('There was an error signing in: ', error);\n      return this.error('There was an error signing in.');\n    }\n  }\n\n  public async signOut(state: any): Promise {\n    try {\n      if (this.popUpDisabled) {\n        throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n      }\n\n      await this.ensureUserManagerInitialized();\n      await this.userManager.signoutPopup(this.createArguments());\n      this.userSubject.next(null);\n      return this.success(state);\n    } catch (popupSignOutError) {\n      console.log('Popup signout error: ', popupSignOutError);\n      try {\n        await this.userManager.signoutRedirect(this.createArguments(state));\n        return this.redirect();\n      } catch (redirectSignOutError) {\n        console.log('Redirect signout error: ', popupSignOutError);\n        return this.error(redirectSignOutError);\n      }\n    }\n  }\n\n  public async completeSignOut(url: string): Promise {\n    await this.ensureUserManagerInitialized();\n    try {\n      const signoutResponse = await this.userManager.signoutCallback(url);\n      this.userSubject.next(null);\n      return this.success(signoutResponse && signoutResponse.state.data);\n    } catch (error) {\n      console.log(`There was an error trying to log out '${error}'.`);\n      return this.error(error);\n    }\n  }\n\n  private createArguments(state?: any): any {\n    return { useReplaceToNavigate: true, data: state };\n  }\n\n  private error(message: string): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Fail, message };\n  }\n\n  private success(state: any): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Success, state };\n  }\n\n  private redirect(): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Redirect };\n  }\n\n  private async ensureUserManagerInitialized(): Promise {\n    if (this.userManager !== undefined) {\n      return;\n    }\n    const response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\n    if (!response.ok) {\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\n    }\n\n    const settings: any = await response.json();\n    settings.automaticSilentRenew = true;\n    settings.includeIdTokenInSilentRenew = true;\n    this.userManager = new UserManager(settings);\n\n    this.userManager.events.addUserSignedOut(async () => {\n      await this.userManager.removeUser();\n      this.userSubject.next(null);\n    });\n  }\n\n  private getUserFromStorage(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => this.userManager.getUser()),\n      map(u => u && (u.profile as any)),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                footerTemplate\n                            \n                            \n                                showFooter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                headerClass\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/card/card.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     string | TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card/card.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card/card.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card/card.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card/card.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/card/card.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/card/card.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            footerTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('footerTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/card/card.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFooter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/card/card.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit, AfterViewInit {\n  @ViewChild('footerTemplate', { static: true }) footerTemplate;\n  @Input() title: string;\n  @Input() body: string | TemplateRef;\n  @Input() headerClass: string;\n  @Output() onClick = new EventEmitter();\n\n  showFooter: boolean;\n  constructor(private cdRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.showFooter =\n      this.footerTemplate.nativeElement &&\n      this.footerTemplate.nativeElement.children.length > 0;\n    this.cdRef.detectChanges();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ title }}\n      \n    \n    \n      \n        {{ body }}\n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ title }}                            {{ body }}                          '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDeckComponent.html":{"url":"components/CardDeckComponent.html","title":"component - CardDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/card-deck/card-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-deck\n            \n\n            \n                styleUrls\n                ./card-deck.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-deck.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClickHandler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bodyTemplate\n                            \n                            \n                                descriptionKey\n                            \n                            \n                                footerTemplate\n                            \n                            \n                                hasSidebar\n                            \n                            \n                                headerClass\n                            \n                            \n                                items\n                            \n                            \n                                title\n                            \n                            \n                                titleKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCardClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/card-deck/card-deck.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bodyTemplate\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        descriptionKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        footerTemplate\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSidebar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCardClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickHandler\n                        \n                        \n                    \n                \n            \n            \n                \nonClickHandler($event: MouseEvent, item: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/card-deck/card-deck.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ICardEvent } from '../../models';\n\n@Component({\n  selector: 'app-card-deck',\n  styleUrls: ['./card-deck.component.scss'],\n  templateUrl: './card-deck.component.html',\n})\nexport class CardDeckComponent implements OnInit {\n  @Input() title: string;\n  @Input() hasSidebar: boolean;\n  @Input() items: any[];\n  @Input() titleKey: string;\n  @Input() descriptionKey: string;\n  @Input() bodyTemplate: any;\n  @Input() footerTemplate: any;\n  @Input() headerClass: any;\n  @Output() onCardClick = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onClickHandler($event: MouseEvent, item: any) {\n    this.onCardClick.next({ $event, data: item });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ item[titleKey] }}\n          \n        \n        \n          \n            {{ item[descriptionKey] }}\n          \n          \n            \n          \n        \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./card-deck.component.scss\n                \n                a {\n  cursor: pointer;\n  text-decoration: unset;\n  color: unset;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ item[titleKey] }}                                                {{ item[descriptionKey] }}                                                                                                  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/+examples/examples/signalr/chat/chat.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-chat\n            \n\n            \n                styleUrls\n                ./chat.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                hub\n                            \n                            \n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/+examples/examples/signalr/chat/chat.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/signalr/chat/chat.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/signalr/chat/chat.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IFieldConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/chat/chat.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(AppFormComponent, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/chat/chat.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HubConnection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/chat/chat.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/chat/chat.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { Validators, NgForm } from '@angular/forms';\n\nimport { IFieldConfig, FieldTypes, AppFormComponent } from '@app/shared';\n\n@Component({\n  selector: 'appc-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss'],\n})\nexport class ChatComponent implements OnInit {\n  @ViewChild(AppFormComponent, { static: true }) form: AppFormComponent;\n  private hub: HubConnection;\n  messages: string[] = [];\n  config: IFieldConfig[];\n\n  constructor(@Inject('BASE_URL') private baseUrl: string) {}\n\n  public sendMessage(form: NgForm): void {\n    if (form.valid) {\n      const { message } = form.value;\n      const data = `Sent: ${message}`;\n      this.hub.invoke('send', message);\n      this.messages.push(data);\n      this.form.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.config = [\n      {\n        name: 'message',\n        type: FieldTypes.Textbox,\n        label: 'Message',\n        validation: [Validators.required],\n      },\n      {\n        name: 'button',\n        type: FieldTypes.Button,\n        label: 'Send',\n        onSubmit: this.sendMessage.bind(this),\n      },\n    ];\n    this.hub = new HubConnectionBuilder().withUrl(`${this.baseUrl}chathub`).build();\n\n    this.hub.on('send', (data: any) => {\n      const received = `Received: ${data}`;\n      this.messages.push(received);\n    });\n\n    this.hub\n      .start()\n      .then(() => console.log('Hub connection started'))\n      .catch(err => console.log('Error while establishing connection: ' + err));\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n\n\n  \n    {{ message }}\n  \n\n\n  No messages\n\n\n    \n\n    \n                \n                    ./chat.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ message }}    No messages'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/config.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/config.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/config.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/config.service.ts:11\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  model: any;\n\n  constructor() {}\n\n  get config() {\n    return this.model;\n  }\n\n  async load(): Promise {\n    const configResponse = await fetch('assets/config.json');\n    this.model = await configResponse.json();\n    return this.model;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomDateFormatter.html":{"url":"injectables/CustomDateFormatter.html","title":"injectable - CustomDateFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomDateFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/custom-date-formatter.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgbDateParserFormatter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(date: NgbDateStruct)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/custom-date-formatter.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            NgbDateStruct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/custom-date-formatter.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NgbDateStruct\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  NgbDateStruct,\n  NgbDateParserFormatter,\n} from '@ng-bootstrap/ng-bootstrap';\n\nexport function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomDateFormatter extends NgbDateParserFormatter {\n  // from input -> internal model\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('/');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return { year: null, month: null, day: toInteger(dateParts[0]) };\n      } else if (\n        dateParts.length === 2 &&\n        isNumber(dateParts[0]) &&\n        isNumber(dateParts[1])\n      ) {\n        return {\n          year: null,\n          month: toInteger(dateParts[1]),\n          day: toInteger(dateParts[0]),\n        };\n      } else if (\n        dateParts.length === 3 &&\n        isNumber(dateParts[0]) &&\n        isNumber(dateParts[1]) &&\n        isNumber(dateParts[2])\n      ) {\n        return {\n          year: toInteger(dateParts[2]),\n          month: toInteger(dateParts[1]),\n          day: toInteger(dateParts[0]),\n        };\n      }\n    }\n    return null;\n  }\n\n  // from internal model -> string\n  format(date: NgbDateStruct): string {\n    return date\n      ? `${isNumber(date.day) ? padNumber(date.day) : ''}/${\n          isNumber(date.month) ? padNumber(date.month) : ''\n        }/${date.year}`\n      : '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomNgbDateNativeUTCAdapter.html":{"url":"injectables/CustomNgbDateNativeUTCAdapter.html","title":"injectable - CustomNgbDateNativeUTCAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomNgbDateNativeUTCAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/custom-date-adapter.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgbDateAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromModel\n                            \n                            \n                                toModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fromModel\n                        \n                        \n                    \n                \n            \n            \n                \nfromModel(date: Date | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/custom-date-adapter.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NgbDateStruct\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toModel\n                        \n                        \n                    \n                \n            \n            \n                \ntoModel(date: NgbDateStruct)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/custom-date-adapter.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            NgbDateStruct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { parseISO } from 'date-fns';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomNgbDateNativeUTCAdapter extends NgbDateAdapter {\n  fromModel(date: Date | string): NgbDateStruct {\n    if (date instanceof Date) {\n      return {\n        year: date.getUTCFullYear(),\n        month: date.getUTCMonth() + 1,\n        day: date.getUTCDate(),\n      };\n    }\n\n    if (typeof date === 'string') {\n      const parsedDate = parseISO(date);\n      return {\n        year: parsedDate.getUTCFullYear(),\n        month: parsedDate.getUTCMonth() + 1,\n        day: parsedDate.getUTCDate(),\n      };\n    }\n\n    return null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date && date.year && date.month ? new Date(Date.UTC(date.year, date.month - 1, date.day)) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomersComponent.html":{"url":"components/CustomersComponent.html","title":"component - CustomersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/+examples/examples/shop/customers/customers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-customers\n            \n\n            \n                styleUrls\n                ./customers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./customers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                customers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(customerClient: CustomersClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/+examples/examples/shop/customers/customers.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customerClient\n                                                  \n                                                        \n                                                                        CustomersClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/shop/customers/customers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridColumn[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/shop/customers/customers.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomerLookupDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/shop/customers/customers.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CustomersClient, CustomerLookupDto } from '@app/api-client';\nimport { GridColumn } from '@app/shared';\n\n@Component({\n  selector: 'appc-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n})\nexport class CustomersComponent implements OnInit {\n  constructor(private customerClient: CustomersClient) {}\n  customers: CustomerLookupDto[];\n  columns: GridColumn[];\n  ngOnInit() {\n    this.customerClient.getAll().subscribe(res => {\n      this.customers = res.customers;\n      this.columns = [\n        {\n          field: 'id',\n          filter: true,\n          sortable: true,\n        },\n        {\n          field: 'name',\n          filter: true,\n          sortable: true,\n        },\n      ];\n    });\n  }\n}\n\n    \n\n    \n        Customers\n\n\n\n    \n\n    \n                \n                    ./customers.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Customers'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'CustomersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getForText\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(BASE_URL: string, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        BASE_URL\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/data.service.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/data.service.ts:16\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getForText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getForText(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/data.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(url: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/data.service.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/data.service.ts:28\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(url: string, itemToUpdate)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/data.service.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemToUpdate\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}api`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/data.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  baseUrl = `${this.BASE_URL}api`;\n  constructor(@Inject('BASE_URL') private BASE_URL: string, private http: HttpClient) {\n    console.log(BASE_URL);\n  }\n\n  // this function returns an observable of type T in the form of JSON\n  // the advantage of an observable : if it changes then this will fire off the change detection as the DOM has changed\n  public get(url: string): Observable {\n    return this.http.get(`${this.baseUrl}/${url}`);\n  }\n\n  public getForText(url: string): Observable {\n    return this.http.get(`${this.baseUrl}/${url}`, { responseType: 'text' });\n  }\n\n  public put(url: string, itemToUpdate): Observable {\n    return this.http.put(`${this.baseUrl}/${url}`, itemToUpdate);\n  }\n\n  public post(url: string, body: any): Observable {\n    return this.http.post(`${this.baseUrl}/${url}`, body);\n  }\n\n  public patch(url: string, body: any): Observable {\n    return this.http.patch(`${this.baseUrl}/${url}`, body);\n  }\n\n  public delete(url: string): Observable {\n    return this.http.delete(`${this.baseUrl}/${url}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateFilterComponent.html":{"url":"components/DateFilterComponent.html","title":"component - DateFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/grid/components/date-filter/date-filter.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-filter\n            \n\n            \n                styleUrls\n                ./date-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                date\n                            \n                            \n                                    Private\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                clear\n                            \n                            \n                                getDate\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                setDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: IDateParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/components/date-filter/date-filter.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            IDateParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear(dp: NgbInputDatepicker)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/components/date-filter/date-filter.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dp\n                                    \n                                            NgbInputDatepicker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/components/date-filter/date-filter.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(selectedDate: NgbDateStruct)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/components/date-filter/date-filter.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedDate\n                                    \n                                            NgbDateStruct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/components/date-filter/date-filter.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/components/date-filter/date-filter.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/components/date-filter/date-filter.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgbDateStruct, NgbInputDatepicker } from '@ng-bootstrap/ng-bootstrap';\nimport { IDateParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'app-date-filter',\n  templateUrl: './date-filter.component.html',\n  styleUrls: ['./date-filter.component.scss'],\n})\nexport class DateFilterComponent {\n  private date: Date;\n  private params: any;\n\n  agInit(params: IDateParams): void {\n    this.params = params;\n  }\n\n  onDateChanged(selectedDate: NgbDateStruct) {\n    this.date = selectedDate && new Date(selectedDate.year, selectedDate.month - 1, selectedDate.day);\n    this.params.onDateChanged();\n  }\n\n  getDate(): Date {\n    return this.date;\n  }\n\n  setDate(date: Date): void {\n    this.date = date || null;\n  }\n\n  clear(dp: NgbInputDatepicker) {\n    dp.writeValue(null);\n    this.setDate(null);\n    this.params.onDateChanged();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./date-filter.component.scss\n                \n                a.cross {\n  position: absolute;\n  right: 20px;\n  cursor: pointer;\n}\n\na.calendar {\n  position: absolute;\n  right: 5px;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'DateFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+examples/examples/signalr/move-shape/draggable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [draggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _hubConnection\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrl: string, element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/+examples/examples/signalr/move-shape/draggable.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/signalr/move-shape/draggable.directive.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/signalr/move-shape/draggable.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _hubConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HubConnection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/move-shape/draggable.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/move-shape/draggable.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/move-shape/draggable.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, Inject, OnDestroy } from '@angular/core';\nimport { HubConnectionBuilder, HubConnection } from '@microsoft/signalr';\nimport { fromEvent } from 'rxjs';\nimport { map, takeUntil, flatMap } from 'rxjs/operators';\n\n@Directive({\n  selector: '[draggable]',\n})\nexport class DraggableDirective implements OnInit, OnDestroy {\n  private _hubConnection: HubConnection;\n  private subscription: any;\n\n  constructor(@Inject('BASE_URL') private baseUrl: string, public element: ElementRef) {}\n\n  ngOnInit() {\n    this._hubConnection = new HubConnectionBuilder().withUrl(`${this.baseUrl}shapeHub`).build();\n    this._hubConnection.on('shapeMoved', function(x, y) {\n      this.element.nativeElement.css({ left: x, top: y });\n    });\n\n    const target = this.element.nativeElement;\n    const mouseup = fromEvent(target, 'mouseup');\n    const mousemove = fromEvent(document, 'mousemove');\n    const mousedown = fromEvent(target, 'mousedown');\n\n    const mousedrag = mousedown.pipe(\n      flatMap((md: any) => {\n        const startX = md.clientX + window.scrollX,\n          startY = md.clientY + window.scrollY,\n          startLeft = parseInt(md.target.style.left, 10) || 0,\n          startTop = parseInt(md.target.style.top, 10) || 0;\n\n        return mousemove.pipe(\n          map((mm: any) => {\n            mm.preventDefault();\n\n            return {\n              left: startLeft + mm.clientX - startX,\n              top: startTop + mm.clientY - startY,\n            };\n          }),\n          takeUntil(mouseup),\n        );\n      }),\n    );\n\n    this.subscription = mousedrag.subscribe(pos => {\n      target.style.top = pos.top + 'px';\n      target.style.left = pos.left + 'px';\n      this._hubConnection.invoke('MoveShape', pos.left, pos.top || 0);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownFloatingFilterComponent.html":{"url":"components/DropdownFloatingFilterComponent.html","title":"component - DropdownFloatingFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownFloatingFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                IFloatingFilter\n                AgFrameworkComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-dropdown-filter\n            \n\n            \n                styleUrls\n                ./dropdown-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentValue\n                            \n                            \n                                    Public\n                                dropdownFilterOptions\n                            \n                            \n                                    Private\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                onParentModelChanged\n                            \n                            \n                                valueChanged\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ag-input-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: DropdownFloatingFilterParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                DropdownFloatingFilterParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onParentModelChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonParentModelChanged(parentModel: TextFilterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentModel\n                                    \n                                            TextFilterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropdownFilterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DropdownFloatingFilterParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostBinding } from '@angular/core';\n\nimport { IFloatingFilter, IFloatingFilterParams, TextFilterModel, TextFilter } from 'ag-grid-community';\nimport { AgFrameworkComponent } from 'ag-grid-angular';\n\nexport interface DropdownFloatingFilterParams extends IFloatingFilterParams {\n  value: string;\n  dropdownFilterOptions: any[];\n}\n\n@Component({\n  selector: 'appc-dropdown-filter',\n  templateUrl: './dropdown-filter.component.html',\n  styleUrls: ['./dropdown-filter.component.scss'],\n})\nexport class DropdownFloatingFilterComponent implements IFloatingFilter, AgFrameworkComponent {\n  @HostBinding('class') class = 'ag-input-wrapper';\n\n  private params: DropdownFloatingFilterParams;\n\n  public dropdownFilterOptions: any[];\n  public currentValue: string;\n\n  agInit(params: DropdownFloatingFilterParams): void {\n    this.params = params;\n    this.dropdownFilterOptions = this.params.dropdownFilterOptions;\n    this.currentValue = '';\n  }\n\n  valueChanged(value: string) {\n    this.params.parentFilterInstance(instance => {\n      // value could be:\n      // greaterThan\n      // lessThan\n      // equals\n      (instance).onFloatingFilterChanged('equals', value);\n    });\n  }\n\n  onParentModelChanged(parentModel: TextFilterModel): void {\n    if (!parentModel) {\n      this.currentValue = '';\n    } else {\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\n      // so just read off the value and use that\n      this.currentValue = parentModel.filter;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{ option.value }}\n  \n\n\n    \n\n    \n                \n                    ./dropdown-filter.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ option.value }}  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownFloatingFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropdownFloatingFilterParams.html":{"url":"interfaces/DropdownFloatingFilterParams.html","title":"interface - DropdownFloatingFilterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropdownFloatingFilterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IFloatingFilterParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dropdownFilterOptions\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropdownFilterOptions\n                                    \n                                \n                                \n                                    \n                                        dropdownFilterOptions:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostBinding } from '@angular/core';\n\nimport { IFloatingFilter, IFloatingFilterParams, TextFilterModel, TextFilter } from 'ag-grid-community';\nimport { AgFrameworkComponent } from 'ag-grid-angular';\n\nexport interface DropdownFloatingFilterParams extends IFloatingFilterParams {\n  value: string;\n  dropdownFilterOptions: any[];\n}\n\n@Component({\n  selector: 'appc-dropdown-filter',\n  templateUrl: './dropdown-filter.component.html',\n  styleUrls: ['./dropdown-filter.component.scss'],\n})\nexport class DropdownFloatingFilterComponent implements IFloatingFilter, AgFrameworkComponent {\n  @HostBinding('class') class = 'ag-input-wrapper';\n\n  private params: DropdownFloatingFilterParams;\n\n  public dropdownFilterOptions: any[];\n  public currentValue: string;\n\n  agInit(params: DropdownFloatingFilterParams): void {\n    this.params = params;\n    this.dropdownFilterOptions = this.params.dropdownFilterOptions;\n    this.currentValue = '';\n  }\n\n  valueChanged(value: string) {\n    this.params.parentFilterInstance(instance => {\n      // value could be:\n      // greaterThan\n      // lessThan\n      // equals\n      (instance).onFloatingFilterChanged('equals', value);\n    });\n  }\n\n  onParentModelChanged(parentModel: TextFilterModel): void {\n    if (!parentModel) {\n      this.currentValue = '';\n    } else {\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\n      // so just read off the value and use that\n      this.currentValue = parentModel.filter;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExamplesComponent.html":{"url":"components/ExamplesComponent.html","title":"component - ExamplesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExamplesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/+examples/examples.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-examples\n            \n\n            \n                styleUrls\n                ./examples.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./examples.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/+examples/examples.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'appc-examples',\n  templateUrl: './examples.component.html',\n  styleUrls: ['./examples.component.scss']\n})\nexport class ExamplesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Dev playground\n\n\n    \n\n    \n                \n                    ./examples.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Dev playground'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExamplesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExamplesModule.html":{"url":"modules/ExamplesModule.html","title":"module - ExamplesModule","body":"\n                   \n\n\n\n\n    Modules\n    ExamplesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExamplesModule\n\n\n\ncluster_ExamplesModule_declarations\n\n\n\ncluster_ExamplesModule_imports\n\n\n\n\nExamplesComponent\n\nExamplesComponent\n\n\n\nExamplesModule\n\nExamplesModule\n\nExamplesModule -->\n\nExamplesComponent->ExamplesModule\n\n\n\n\n\nFormsPlaygroundComponent\n\nFormsPlaygroundComponent\n\nExamplesModule -->\n\nFormsPlaygroundComponent->ExamplesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nExamplesModule -->\n\nSharedModule->ExamplesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/+examples/examples.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExamplesComponent\n                        \n                        \n                            FormsPlaygroundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '@app/shared';\n\nimport { ExamplesComponent } from './examples.component';\nimport { routes } from './examples.routes';\nimport { FormsPlaygroundComponent } from './examples/forms-playground/forms-playground.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ExamplesComponent, FormsPlaygroundComponent]\n})\nexport class ExamplesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FailureAuthenticationResult.html":{"url":"interfaces/FailureAuthenticationResult.html","title":"interface - FailureAuthenticationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FailureAuthenticationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/authorize.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         AuthenticationResultStatus.Fail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticationResultStatus.Fail\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User, UserManager, WebStorageStateStore } from 'oidc-client';\nimport { BehaviorSubject, concat, from, Observable } from 'rxjs';\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\nimport { ApplicationPaths, ApplicationName } from '../constants';\n\nexport type IAuthenticationResult = SuccessAuthenticationResult | FailureAuthenticationResult | RedirectAuthenticationResult;\n\nexport interface SuccessAuthenticationResult {\n  status: AuthenticationResultStatus.Success;\n  state: any;\n}\n\nexport interface FailureAuthenticationResult {\n  status: AuthenticationResultStatus.Fail;\n  message: string;\n}\n\nexport interface RedirectAuthenticationResult {\n  status: AuthenticationResultStatus.Redirect;\n}\n\nexport enum AuthenticationResultStatus {\n  Success,\n  Redirect,\n  Fail,\n}\n\nexport interface IUser extends User {\n  name: string;\n  role: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizeService {\n  // By default pop ups are disabled because they don't work properly on Edge.\n  // If you want to enable pop up authentication simply set this flag to false.\n  private _user: IUser;\n  private popUpDisabled = true;\n  private userManager: UserManager;\n  private userSubject: BehaviorSubject = new BehaviorSubject(null);\n\n  get isLoggedIn(): boolean {\n    return !!this.user;\n  }\n\n  get user(): IUser {\n    return this._user;\n  }\n\n  public hasRole(role: string): boolean {\n    return this._user && this._user.role && this._user.role.indexOf(role) > -1;\n  }\n\n  public isAuthenticated(): Observable {\n    return this.getUser().pipe(map(u => !!u));\n  }\n\n  public getUser(): Observable {\n    return concat(\n      this.userSubject.pipe(\n        take(1),\n        filter(u => !!u),\n      ),\n      this.getUserFromStorage().pipe(\n        filter(u => !!u),\n        tap(u => {\n          this._user = u;\n          this.userSubject.next(u);\n        }),\n      ),\n      this.userSubject.asObservable(),\n    );\n  }\n\n  public getAccessToken(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => from(this.userManager.getUser())),\n      map(user => user && user.access_token),\n    );\n  }\n\n  // We try to authenticate the user in three different ways:\n  // 1) We try to see if we can authenticate the user silently. This happens\n  //    when the user is already logged in on the IdP and is done using a hidden iframe\n  //    on the client.\n  // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\n  //    Pop-Up blocker or the user has disabled PopUps.\n  // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\n  //    redirect flow.\n  public async signIn(state: any): Promise {\n    await this.ensureUserManagerInitialized();\n    let user: User = null;\n    try {\n      user = await this.userManager.signinSilent(this.createArguments());\n      this.userSubject.next(user.profile as any);\n      return this.success(state);\n    } catch (silentError) {\n      // User might not be authenticated, fallback to popup authentication\n      console.log('Silent authentication error: ', silentError);\n\n      try {\n        if (this.popUpDisabled) {\n          throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n        }\n        user = await this.userManager.signinPopup(this.createArguments());\n        this.userSubject.next(user.profile as any);\n        return this.success(state);\n      } catch (popupError) {\n        if (popupError.message === 'Popup window closed') {\n          // The user explicitly cancelled the login action by closing an opened popup.\n          return this.error('The user closed the window.');\n        } else if (!this.popUpDisabled) {\n          console.log('Popup authentication error: ', popupError);\n        }\n\n        // PopUps might be blocked by the user, fallback to redirect\n        try {\n          await this.userManager.signinRedirect(this.createArguments(state));\n          return this.redirect();\n        } catch (redirectError) {\n          console.log('Redirect authentication error: ', redirectError);\n          return this.error(redirectError);\n        }\n      }\n    }\n  }\n\n  public async completeSignIn(url: string): Promise {\n    try {\n      await this.ensureUserManagerInitialized();\n      const user = await this.userManager.signinCallback(url);\n      this.userSubject.next(user && (user.profile as any));\n      return this.success(user && user.state);\n    } catch (error) {\n      console.log('There was an error signing in: ', error);\n      return this.error('There was an error signing in.');\n    }\n  }\n\n  public async signOut(state: any): Promise {\n    try {\n      if (this.popUpDisabled) {\n        throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n      }\n\n      await this.ensureUserManagerInitialized();\n      await this.userManager.signoutPopup(this.createArguments());\n      this.userSubject.next(null);\n      return this.success(state);\n    } catch (popupSignOutError) {\n      console.log('Popup signout error: ', popupSignOutError);\n      try {\n        await this.userManager.signoutRedirect(this.createArguments(state));\n        return this.redirect();\n      } catch (redirectSignOutError) {\n        console.log('Redirect signout error: ', popupSignOutError);\n        return this.error(redirectSignOutError);\n      }\n    }\n  }\n\n  public async completeSignOut(url: string): Promise {\n    await this.ensureUserManagerInitialized();\n    try {\n      const signoutResponse = await this.userManager.signoutCallback(url);\n      this.userSubject.next(null);\n      return this.success(signoutResponse && signoutResponse.state.data);\n    } catch (error) {\n      console.log(`There was an error trying to log out '${error}'.`);\n      return this.error(error);\n    }\n  }\n\n  private createArguments(state?: any): any {\n    return { useReplaceToNavigate: true, data: state };\n  }\n\n  private error(message: string): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Fail, message };\n  }\n\n  private success(state: any): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Success, state };\n  }\n\n  private redirect(): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Redirect };\n  }\n\n  private async ensureUserManagerInitialized(): Promise {\n    if (this.userManager !== undefined) {\n      return;\n    }\n    const response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\n    if (!response.ok) {\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\n    }\n\n    const settings: any = await response.json();\n    settings.automaticSilentRenew = true;\n    settings.includeIdTokenInSilentRenew = true;\n    this.userManager = new UserManager(settings);\n\n    this.userManager.events.addUserSignedOut(async () => {\n      await this.userManager.removeUser();\n      this.userSubject.next(null);\n    });\n  }\n\n  private getUserFromStorage(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => this.userManager.getUser()),\n      map(u => u && (u.profile as any)),\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field.html":{"url":"interfaces/Field.html","title":"interface - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         IFieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFieldConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nexport const COOKIES = new InjectionToken('COOKIES');\nexport interface KeyValuePair {\n  key: string;\n  value: T;\n}\n\nexport interface ISocialLogins {\n  loginProvider: string;\n  providerKey: string;\n  providerDisplayName: string;\n  active: boolean;\n}\n\nexport interface ITwoFactorModel {\n  hasAuthenticator: boolean;\n\n  recoveryCodesLeft: number;\n\n  is2faEnabled: boolean;\n}\n\nexport interface IEnableAuthenticatorModel {\n  code: string;\n  sharedKey: string;\n  authenticatorUri: string;\n}\n\nexport interface IModalOptions {\n  title: string;\n  message?: string;\n  template?: any;\n}\nexport enum FieldTypes {\n  Textbox = 'input',\n  FileUpload = 'file',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  options?: IOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  validation?: ValidatorFn[];\n  value?: any;\n  onSubmit?: Function;\n  errorMessages?: Object;\n}\n\nexport interface IOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field-1.html":{"url":"interfaces/Field-1.html","title":"interface - Field-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         IFieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFieldConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidatorFn } from '@angular/forms';\n\nexport enum FieldTypes {\n  Textbox = 'input',\n  InputGroup = 'inputgroup',\n  FileUpload = 'file',\n  FilePathUpload = 'filepath',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n  ButtonGroup = 'buttongroup',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  cancelButtonLabel?: string;\n  disabled?: boolean;\n  options?: FieldOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  cssClass?: string;\n  focus?: boolean;\n  validation?: ValidatorFn[];\n  value?: any;\n  hidden?: boolean;\n  tooltip?: string;\n  onSubmit?: Function;\n  onCancel?: Function;\n  errorMessages?: Object;\n  inputGroupAddonLabel?: string;\n  inputGroupAddonHandler?: Function;\n  onSelectChange?: Function;\n}\n\nexport interface FieldOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldBaseComponent.html":{"url":"injectables/FieldBaseComponent.html","title":"injectable - FieldBaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/forms/components/field-base/field-base.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formGroup\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fc: AppFormComponent, formService: FormsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/forms/components/field-base/field-base.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fc\n                                                  \n                                                        \n                                                                        AppFormComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/field-base/field-base.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/field-base/field-base.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/field-base/field-base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/field-base/field-base.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n\n                \n                    \n                        getformGroup()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/field-base/field-base.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Directive } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { IFieldConfig, Field } from '../../../../models';\nimport { AppFormComponent } from '../form';\nimport { FormsService } from '../../forms.service';\n\n@Directive()\n@Injectable()\nexport abstract class FieldBaseComponent implements Field {\n  config: IFieldConfig;\n\n  constructor(public fc: AppFormComponent, public formService: FormsService) {}\n\n  get formGroup(): FormGroup {\n    return this.fc.form;\n  }\n\n  showAsterisk(config: IFieldConfig): boolean {\n    return this.formService.showIndicator(config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FieldColorValidationDirective.html":{"url":"directives/FieldColorValidationDirective.html","title":"directive - FieldColorValidationDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FieldColorValidationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/forms/directives/field-color-validation.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-invalid\n                            \n                            \n                                class.is-valid\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(control: NgControl, formComponent: AppFormComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/forms/directives/field-color-validation.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formComponent\n                                                  \n                                                        \n                                                                        AppFormComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-invalid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/directives/field-color-validation.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-valid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/directives/field-color-validation.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Self, HostBinding } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { AppFormComponent } from '../components';\n\n@Directive({\n  selector: '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]',\n})\nexport class FieldColorValidationDirective {\n  public constructor(@Self() private control: NgControl, private formComponent: AppFormComponent) {}\n\n  @HostBinding('class.is-valid')\n  get ngClassValid(): boolean {\n    return this.control.control && this.control.control.valid && (this.control.control.touched || this.formComponent.submitted);\n  }\n\n  @HostBinding('class.is-invalid')\n  get ngClassInvalid(): boolean {\n    return this.control.control && this.control.control.invalid && (this.control.control.touched || this.formComponent.submitted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldOption.html":{"url":"interfaces/FieldOption.html","title":"interface - FieldOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        selected\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidatorFn } from '@angular/forms';\n\nexport enum FieldTypes {\n  Textbox = 'input',\n  InputGroup = 'inputgroup',\n  FileUpload = 'file',\n  FilePathUpload = 'filepath',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n  ButtonGroup = 'buttongroup',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  cancelButtonLabel?: string;\n  disabled?: boolean;\n  options?: FieldOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  cssClass?: string;\n  focus?: boolean;\n  validation?: ValidatorFn[];\n  value?: any;\n  hidden?: boolean;\n  tooltip?: string;\n  onSubmit?: Function;\n  onCancel?: Function;\n  errorMessages?: Object;\n  inputGroupAddonLabel?: string;\n  inputGroupAddonHandler?: Function;\n  onSelectChange?: Function;\n}\n\nexport interface FieldOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'appc-footer',\n    styleUrls: ['./footer.component.scss'],\n    templateUrl: './footer.component.html'\n})\nexport class FooterComponent { }\n\n    \n\n    \n        \n    \n        &copy; 2020 {{'app_title' | translate}}\n    \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                .footer {\n  bottom: 0;\n  width: 100%;\n  height: 60px;\n  line-height: 60px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            © 2020 {{\\'app_title\\' | translate}}    '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPassword.html":{"url":"interfaces/ForgotPassword.html","title":"interface - ForgotPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ForgotPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordToken {\n  UserId: string;\n  Token: string;\n  NewPassword: string;\n  ConfirmPassword: string;\n}\n\nexport interface ForgotPassword {\n  email: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormButtonComponent.html":{"url":"components/FormButtonComponent.html","title":"component - FormButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-button/form-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-button\n            \n\n            \n                styleUrls\n                form-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-button',\n  styleUrls: ['form-button.component.scss'],\n  templateUrl: 'form-button.component.html',\n})\nexport class FormButtonComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n  \n\n\n    \n\n    \n                \n                    form-button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormButtonGroupComponent.html":{"url":"components/FormButtonGroupComponent.html","title":"component - FormButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-button-group/form-button-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-button-group\n            \n\n\n\n\n            \n                templateUrl\n                form-button-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-button-group/form-button-group.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-button-group',\n  templateUrl: 'form-button-group.component.html',\n})\nexport class FormButtonGroupComponent extends FieldBaseComponent {\n  submit($event: Event) {\n    $event.preventDefault();\n    this.config.onSubmit(this.formGroup);\n    this.fc.validate();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ config.cancelButtonLabel || 'Cancel' }}\n  \n  \n    {{ config.label || 'Submit' }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.cancelButtonLabel || \\'Cancel\\' }}        {{ config.label || \\'Submit\\' }}  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormCheckboxComponent.html":{"url":"components/FormCheckboxComponent.html","title":"component - FormCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-checkbox/form-checkbox.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-checkbox\n            \n\n            \n                styleUrls\n                form-checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-checkbox',\n  styleUrls: ['form-checkbox.component.scss'],\n  templateUrl: 'form-checkbox.component.html',\n})\nexport class FormCheckboxComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      {{ config.label }}\n    \n\n    \n  \n\n\n    \n\n    \n                \n                    form-checkbox.component.scss\n                \n                .form-check-label {\n  color: unset !important;\n}\n\n.custom-control-label {\n  color: unset !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ config.label }}          '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormCheckboxListComponent.html":{"url":"components/FormCheckboxListComponent.html","title":"component - FormCheckboxListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormCheckboxListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-checkbox-list/form-checkbox-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-checkbox-list\n            \n\n            \n                styleUrls\n                form-checkbox-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-checkbox-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controls\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controls\n                    \n                \n\n                \n                    \n                        getcontrols()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/forms/components/form-checkbox-list/form-checkbox-list.component.ts:11\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-checkbox-list',\n  styleUrls: ['form-checkbox-list.component.scss'],\n  templateUrl: 'form-checkbox-list.component.html',\n})\nexport class FormCheckboxListComponent extends FieldBaseComponent {\n  get controls() {\n    return (this.formGroup.controls[this.config.name]).controls;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n\n    \n      *\n    \n  \n\n  \n    \n      \n      \n        {{ config.options[i].value }}\n      \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    form-checkbox-list.component.scss\n                \n                .invalid-feedback {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *                                {{ config.options[i].value }}              '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormCheckboxListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormDateComponent.html":{"url":"components/FormDateComponent.html","title":"component - FormDateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormDateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-date/form-date.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-date\n            \n\n            \n                styleUrls\n                form-date.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-date.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-date',\n  styleUrls: ['form-date.component.scss'],\n  templateUrl: 'form-date.component.html',\n})\nexport class FormDateComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n    \n      *\n    \n  \n\n  \n    \n    \n      \n        \n      \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    form-date.component.scss\n                \n                .input-group-prepend {\n  cursor: pointer;\n}\n\n.invalid-feedback {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *                                            '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormDateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FormFieldDirective.html":{"url":"directives/FormFieldDirective.html","title":"directive - FormFieldDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FormFieldDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/forms/directives/form-field.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Field\n                            OnChanges\n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFormField]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolver: ComponentFactoryResolver, container: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/forms/directives/form-field.directive.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IFieldConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/forms/directives/form-field.directive.ts:53\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/directives/form-field.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/directives/form-field.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/directives/form-field.directive.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport {\n  FormButtonComponent,\n  FormButtonGroupComponent,\n  FormInputComponent,\n  FormInputGroupComponent,\n  FormFileComponent,\n  FormDateComponent,\n  FormTimeComponent,\n  FormSelectComponent,\n  FormCheckboxComponent,\n  FormCheckboxListComponent,\n  FormTextareaComponent,\n  FormRadioListComponent,\n  FormFilePathComponent,\n} from '../components';\nimport { Field, IFieldConfig } from '../../../models';\n\n\nconst components: { [type: string]: Type } = {\n  button: FormButtonComponent,\n  buttongroup: FormButtonGroupComponent,\n  input: FormInputComponent,\n  inputgroup: FormInputGroupComponent,\n  number: FormInputComponent,\n  file: FormFileComponent,\n  filepath: FormFilePathComponent,\n  password: FormInputComponent,\n  email: FormInputComponent,\n  date: FormDateComponent,\n  time: FormTimeComponent,\n  textarea: FormTextareaComponent,\n  checkbox: FormCheckboxComponent,\n  checkboxlist: FormCheckboxListComponent,\n  radiolist: FormRadioListComponent,\n  select: FormSelectComponent,\n};\n\n@Directive({\n  selector: '[appFormField]',\n})\nexport class FormFieldDirective implements Field, OnChanges, OnInit {\n  @Input() config: IFieldConfig;\n  component: ComponentRef;\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n  ) {}\n\n  ngOnChanges() {\n    if (this.component) {\n      this.component.instance.config = this.config;\n    }\n  }\n\n  ngOnInit() {\n    if (!components[this.config.type]) {\n      const supportedTypes = Object.keys(components).join(', ');\n      throw new Error(\n        `Trying to use an unsupported type (${this.config.type}). Supported types: ${supportedTypes}`,\n      );\n    }\n    const component = this.resolver.resolveComponentFactory(\n      components[this.config.type],\n    );\n    this.component = this.container.createComponent(component);\n    this.component.instance.config = this.config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormFieldErrorComponent.html":{"url":"components/FormFieldErrorComponent.html","title":"component - FormFieldErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormFieldErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-field-error/form-field-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-field-error, [appFormFieldError]\n            \n\n            \n                styleUrls\n                ./form-field-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-field-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                getErrorText\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fieldConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formComponent: AppFormComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/forms/components/form-field-error/form-field-error.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formComponent\n                                                  \n                                                        \n                                                                        AppFormComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fieldConfig\n                    \n                \n                \n                    \n                        Type :         IFieldConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form-field-error/form-field-error.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorMessage\n                        \n                        \n                    \n                \n            \n            \n                \nerrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-field-error/form-field-error.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getErrorText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrorText(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-field-error/form-field-error.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-field-error/form-field-error.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/components/form-field-error/form-field-error.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { IFieldConfig } from '../../../../models';\nimport { AppFormComponent } from '../form';\n\n@Component({\n  selector: 'app-form-field-error, [appFormFieldError]',\n  styleUrls: ['./form-field-error.component.scss'],\n  templateUrl: 'form-field-error.component.html',\n})\nexport class FormFieldErrorComponent implements OnInit {\n  @Input() public fieldConfig: IFieldConfig;\n  constructor(public formComponent: AppFormComponent) {}\n  ngOnInit() {}\n\n  errorMessage(): string {\n    const control: AbstractControl = this.formComponent.form.get(this.fieldConfig.name);\n    if (control) {\n      for (const errorCode in control.errors) {\n        if (control.errors.hasOwnProperty(errorCode) && (control.touched || this.formComponent.submitted)) {\n          return this.getErrorText(errorCode);\n        }\n      }\n    }\n    return '';\n  }\n\n  private getErrorText(code: string) {\n    const config: any = {\n      required: 'Field is required',\n      minlength: 'Invalid minimum length',\n      maxlength: 'Invalid maximum length',\n      email: 'Invalid email address',\n      telephone: 'Invalid telephone number',\n      date: 'Invalid date entered',\n      invalidDomain: 'Invalid domain name',\n      invalidMoney: 'Invalid amount entered',\n      invalidPostcode: 'Invalid postcode',\n      numberValidator: 'Invalid number',\n      numberNotZeroValidator: 'Number greater than 0 required',\n      multipleCheckboxRequireAtLeastOne: 'At least one option required',\n      multipleCheckboxRequireMoreThanOne: 'More than one options required',\n    };\n    return (this.fieldConfig.errorMessages && this.fieldConfig.errorMessages[code]) || config[code];\n  }\n}\n\n    \n\n    \n        \n  {{ errorMessage() }}\n\n\n    \n\n    \n                \n                    ./form-field-error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ errorMessage() }}'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormFieldErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormFileComponent.html":{"url":"components/FormFileComponent.html","title":"component - FormFileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormFileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-file/form-file.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-file\n            \n\n            \n                styleUrls\n                form-file.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-file.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-file',\n  styleUrls: ['form-file.component.scss'],\n  templateUrl: 'form-file.component.html',\n})\nexport class FormFileComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n\n    \n      *\n    \n  \n  \n\n  \n\n\n    \n\n    \n                \n                    form-file.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *          '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormFileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormFilePathComponent.html":{"url":"components/FormFilePathComponent.html","title":"component - FormFilePathComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormFilePathComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-file-path/form-file-path.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-file-path\n            \n\n            \n                styleUrls\n                form-file-path.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-file-path.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-file-path',\n  styleUrls: ['form-file-path.component.scss'],\n  templateUrl: 'form-file-path.component.html',\n})\nexport class FormFilePathComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n\n    \n      *\n    \n  \n  \n\n  \n\n\n    \n\n    \n                \n                    form-file-path.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *          '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormFilePathComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormInputComponent.html":{"url":"components/FormInputComponent.html","title":"component - FormInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-input/form-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-input\n            \n\n            \n                styleUrls\n                form-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-input',\n  styleUrls: ['form-input.component.scss'],\n  templateUrl: 'form-input.component.html',\n})\nexport class FormInputComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n\n    \n      *\n    \n\n    \n      \n    \n\n    \n      \n    \n  \n\n  \n\n  \n\n\n    \n\n    \n                \n                    form-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *                                      '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormInputGroupComponent.html":{"url":"components/FormInputGroupComponent.html","title":"component - FormInputGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormInputGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-input-group/form-input-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-input-group\n            \n\n            \n                styleUrls\n                form-input-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-input-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-input-group',\n  styleUrls: ['form-input-group.component.scss'],\n  templateUrl: 'form-input-group.component.html',\n})\nexport class FormInputGroupComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n\n    \n      *\n    \n  \n\n  \n    \n    \n      \n        {{ config.inputGroupAddonLabel }}\n      \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    form-input-group.component.scss\n                \n                .invalid-feedback {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *                              {{ config.inputGroupAddonLabel }}              '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormInputGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormRadioListComponent.html":{"url":"components/FormRadioListComponent.html","title":"component - FormRadioListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormRadioListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-radio-list/form-radio-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-radio-list\n            \n\n            \n                styleUrls\n                form-radio-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-radio-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-radio-list',\n  styleUrls: ['form-radio-list.component.scss'],\n  templateUrl: 'form-radio-list.component.html',\n})\nexport class FormRadioListComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n    \n      *\n    \n  \n\n  \n    \n    \n      {{ item.value }}\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    form-radio-list.component.scss\n                \n                .invalid-feedback {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *                      {{ item.value }}        '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormRadioListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSelectComponent.html":{"url":"components/FormSelectComponent.html","title":"component - FormSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-select/form-select.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-select\n            \n\n            \n                styleUrls\n                form-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/components/form-select/form-select.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-select',\n  styleUrls: ['form-select.component.scss'],\n  templateUrl: 'form-select.component.html',\n})\nexport class FormSelectComponent extends FieldBaseComponent {\n  onChange($event) {\n    if (this.config.onSelectChange) {\n      this.config.onSelectChange($event.target.value);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n    \n      *\n    \n  \n  \n    {{ config.placeholder || 'Please select...' }}\n    \n      {{ option.value }}\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    form-select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *            {{ config.placeholder || \\'Please select...\\' }}          {{ option.value }}        '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormTextareaComponent.html":{"url":"components/FormTextareaComponent.html","title":"component - FormTextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormTextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-textarea/form-textarea.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-textarea\n            \n\n            \n                styleUrls\n                form-textarea.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-textarea',\n  styleUrls: ['form-textarea.component.scss'],\n  templateUrl: 'form-textarea.component.html',\n})\nexport class FormTextareaComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n    \n      *\n    \n  \n\n  \n\n  \n\n\n    \n\n    \n                \n                    form-textarea.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *          '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormTextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormTimeComponent.html":{"url":"components/FormTimeComponent.html","title":"component - FormTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/forms/components/form-time/form-time.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FieldBaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-time\n            \n\n            \n                styleUrls\n                form-time.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                fc\n                            \n                            \n                                    Public\n                                formService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAsterisk\n                        \n                        \n                    \n                \n            \n            \n                \nshowAsterisk(config: IFieldConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         FieldBaseComponent\n\n                \n            \n            \n                \n                        Defined in         FieldBaseComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFieldConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FieldBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         FieldBaseComponent:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { FieldBaseComponent } from '../field-base';\n\n@Component({\n  selector: 'app-form-time',\n  styleUrls: ['form-time.component.scss'],\n  templateUrl: 'form-time.component.html',\n})\nexport class FormTimeComponent extends FieldBaseComponent {}\n\n    \n\n    \n        \n  \n    {{ config.label }}\n    \n      *\n    \n  \n\n  \n\n  \n\n\n    \n\n    \n                \n                    form-time.component.scss\n                \n                .invalid-feedback {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.label }}          *          '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormsPlaygroundComponent.html":{"url":"components/FormsPlaygroundComponent.html","title":"component - FormsPlaygroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormsPlaygroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/+examples/examples/forms-playground/forms-playground.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-forms-playground\n            \n\n            \n                styleUrls\n                ./forms-playground.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forms-playground.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formsService: FormsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/+examples/examples/forms-playground/forms-playground.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formsService\n                                                  \n                                                        \n                                                                        FormsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/forms-playground/forms-playground.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/forms-playground/forms-playground.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IFieldConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/forms-playground/forms-playground.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppFormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(AppFormComponent, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/forms-playground/forms-playground.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { FormsService, AppFormComponent } from '@app/shared';\nimport { IFieldConfig, FieldTypes } from '@app/models';\n\n@Component({\n  selector: 'appc-forms-playground',\n  templateUrl: './forms-playground.component.html',\n  styleUrls: ['./forms-playground.component.scss']\n})\nexport class FormsPlaygroundComponent implements OnInit {\n  @ViewChild(AppFormComponent, { static: true }) form: AppFormComponent;\n  config: IFieldConfig[];\n  constructor(private formsService: FormsService) { }\n\n  ngOnInit() {\n    this.config = [\n      {\n        name: 'title',\n        label: 'Title',\n        type: FieldTypes.Select,\n        validation: [Validators.required],\n        options: [\n          { key: 'mr', value: 'Mr' },\n          { key: 'mrs', value: 'Mrs' },\n          { key: 'dr', value: 'Dr' }\n        ]\n      },\n      {\n        name: 'username',\n        label: 'Username',\n        type: FieldTypes.Textbox,\n        validation: [Validators.required]\n      },\n      {\n        name: 'password',\n        label: 'Password',\n        type: FieldTypes.Password,\n        validation: [Validators.required]\n      },\n      {\n        name: 'email',\n        label: 'Email',\n        type: FieldTypes.Email,\n        validation: [Validators.required, this.formsService.emailValidator]\n      },\n      {\n        name: 'telephone',\n        label: 'Telephone',\n        type: FieldTypes.Number,\n        validation: [Validators.required, this.formsService.telehponeValidator]\n      },\n      {\n        name: 'dob',\n        label: 'Date of birth',\n        type: FieldTypes.Date,\n        validation: [Validators.required, this.formsService.dateValidator]\n      },\n      {\n        name: 'dot',\n        label: 'Date of time',\n        type: FieldTypes.Time,\n        validation: [Validators.required]\n      },\n      {\n        name: 'website',\n        label: 'Website',\n        type: FieldTypes.Textbox,\n        validation: [Validators.required, this.formsService.domainValidator]\n      },\n      {\n        name: 'bio',\n        label: 'Bio',\n        type: FieldTypes.Textarea,\n        validation: [Validators.required]\n      },\n      {\n        name: 'image',\n        label: 'Image',\n        type: FieldTypes.FileUpload,\n        validation: [Validators.required]\n      },\n      {\n        name: 'programmingLanguage',\n        label: 'Programming language',\n        type: FieldTypes.Checkboxlist,\n        validation: [this.formsService.multipleCheckboxRequireMoreThanOne],\n        options: [\n          { key: 'c#', value: 'Csharp' },\n          { key: '.net', value: 'Dotnet' }\n        ]\n      },\n      {\n        name: 'programmingExperience',\n        label: 'Programming experience?',\n        type: FieldTypes.Radiolist,\n        validation: [Validators.required],\n        options: [\n          { key: 'high', value: 'High' },\n          { key: 'medium', value: 'Medium' },\n          { key: 'low', value: 'Low' }\n        ]\n      },\n      {\n        name: 'terms',\n        label: 'Terms accepted?',\n        type: FieldTypes.Checkbox,\n        validation: [Validators.requiredTrue]\n      },\n      {\n        name: 'button',\n        label: 'Submit',\n        type: FieldTypes.Button,\n        onSubmit: this.onSubmit.bind(this)\n      },\n    ];\n  }\n\n  onSubmit() {\n    console.log(this.form.value);\n  }\n\n}\n\n    \n\n    \n        Dynamic forms\nThis demonstrates all the dynamic form field usage\n\n\n  \n    \n  \n\n  \n    \n      {{ form.value | json}}\n    \n  \n\n    \n\n    \n                \n                    ./forms-playground.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Dynamic formsThis demonstrates all the dynamic form field usage                    {{ form.value | json}}      '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormsPlaygroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormsService.html":{"url":"injectables/FormsService.html","title":"injectable - FormsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/forms/forms.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DOMAIN_REGEX\n                            \n                            \n                                domainValidator\n                            \n                            \n                                EMAIL_REGEX\n                            \n                            \n                                emailValidator\n                            \n                            \n                                MONEY_REGEX\n                            \n                            \n                                moneyValidator\n                            \n                            \n                                POSTCODE_REGEX\n                            \n                            \n                                postcodeValidator\n                            \n                            \n                                telehponeValidator\n                            \n                            \n                                TELEPHONE_REGEX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateValidator\n                            \n                            \n                                invalid\n                            \n                            \n                                multipleCheckboxRequireAtLeastOne\n                            \n                            \n                                multipleCheckboxRequireMoreThanOne\n                            \n                            \n                                numberNotZeroValidator\n                            \n                            \n                                numberValidator\n                            \n                            \n                                requiredFileType\n                            \n                            \n                                showIndicator\n                            \n                            \n                                stringToIsoUtcString\n                            \n                            \n                                toFormData\n                            \n                            \n                                trueOrFalseValidator\n                            \n                            \n                                uploadProgress\n                            \n                            \n                                valid\n                            \n                            \n                                    Private\n                                validationExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/forms/forms.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dateValidator\n                        \n                        \n                    \n                \n            \n            \n                \ndateValidator(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { date: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invalid\n                        \n                        \n                    \n                \n            \n            \n                \ninvalid(form: FormGroup, fieldConfig: IFieldConfig, formRef: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldConfig\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formRef\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            multipleCheckboxRequireAtLeastOne\n                        \n                        \n                    \n                \n            \n            \n                \nmultipleCheckboxRequireAtLeastOne(fa: FormArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fa\n                                    \n                                                FormArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { multipleCheckboxRequireAtLeastOne: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            multipleCheckboxRequireMoreThanOne\n                        \n                        \n                    \n                \n            \n            \n                \nmultipleCheckboxRequireMoreThanOne(fa: FormArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fa\n                                    \n                                                FormArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { multipleCheckboxRequireMoreThanOne: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberNotZeroValidator\n                        \n                        \n                    \n                \n            \n            \n                \nnumberNotZeroValidator(fc: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fc\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { numberNotZeroValidator: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberValidator\n                        \n                        \n                    \n                \n            \n            \n                \nnumberValidator(fc: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fc\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { numberValidator: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requiredFileType\n                        \n                        \n                    \n                \n            \n            \n                \nrequiredFileType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (control: any) => { requiredFileType: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showIndicator\n                        \n                        \n                    \n                \n            \n            \n                \nshowIndicator(config)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stringToIsoUtcString\n                        \n                        \n                    \n                \n            \n            \n                \nstringToIsoUtcString(dateString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toFormData\n                        \n                        \n                    \n                \n            \n            \n                \ntoFormData(formValue: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:173\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValue\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trueOrFalseValidator\n                        \n                        \n                    \n                \n            \n            \n                \ntrueOrFalseValidator(fc: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fc\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { required: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadProgress\n                        \n                        \n                    \n                \n            \n            \n                \nuploadProgress(cb: (progress: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:183\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valid\n                        \n                        \n                    \n                \n            \n            \n                \nvalid(form: FormGroup, fieldConfig: IFieldConfig, formRef: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldConfig\n                                    \n                                                IFieldConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formRef\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validationExist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validationExist(func)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/forms/forms.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DOMAIN_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            domainValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@[*[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+]*/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONEY_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^\\d{1,18}(\\.\\d{1,2})?$/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moneyValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:138\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POSTCODE_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^(([A-PR-UWYZ0-9][A-HK-Y0-9][AEHMNPRTVXY0-9]?[ABEHMNPRVWXY0-9]? ?){1,2}[0-9][ABD-HJLN-UW-Z]{2}|GIR 0AA)$/i\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postcodeValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telehponeValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TELEPHONE_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^([\\(\\)\\-\\.\\\\\\\\/+# 0-9x]|ext|extension)+$/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/forms/forms.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { NgForm, FormGroup, AbstractControl, FormArray } from '@angular/forms';\nimport { tap } from 'rxjs/operators';\n\nimport { IFieldConfig } from '../../models';\n\n@Injectable()\nexport class FormsService {\n  POSTCODE_REGEX = /^(([A-PR-UWYZ0-9][A-HK-Y0-9][AEHMNPRTVXY0-9]?[ABEHMNPRVWXY0-9]? ?){1,2}[0-9][ABD-HJLN-UW-Z]{2}|GIR 0AA)$/i;\n  MONEY_REGEX = /^\\d{1,18}(\\.\\d{1,2})?$/;\n  EMAIL_REGEX = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@[*[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+]*/;\n  TELEPHONE_REGEX = /^([\\(\\)\\-\\.\\\\\\\\/+# 0-9x]|ext|extension)+$/;\n  DOMAIN_REGEX = /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/;\n\n  constructor() {}\n\n  valid(form: FormGroup, fieldConfig: IFieldConfig, formRef: NgForm) {\n    if (form.controls[fieldConfig.name]) {\n      const valid = form.controls[fieldConfig.name].valid && (form.controls[fieldConfig.name].touched || formRef.submitted);\n      return valid;\n    }\n  }\n  invalid(form: FormGroup, fieldConfig: IFieldConfig, formRef: NgForm) {\n    return !form.controls[fieldConfig.name].valid && (form.controls[fieldConfig.name].touched || formRef.submitted);\n  }\n\n  dateValidator(control: AbstractControl) {\n    if (control.value) {\n      const date = new Date(control.value);\n      const valid = date instanceof Date && !isNaN(date.valueOf());\n      return valid ? undefined : { date: true };\n    }\n    return { date: true };\n  }\n  stringToIsoUtcString(dateString: string): string {\n    if (dateString) {\n      const isoString = new Date(dateString).toISOString();\n      return isoString;\n    }\n    return '';\n  }\n  multipleCheckboxRequireAtLeastOne(fa: FormArray) {\n    let valid = false;\n\n    for (let x = 0; x  1;\n    return valid\n      ? null\n      : {\n          multipleCheckboxRequireMoreThanOne: true,\n        };\n  }\n  trueOrFalseValidator(fc: AbstractControl) {\n    const valid = fc.value === true || fc.value === false;\n\n    return valid ? null : { required: true };\n  }\n  numberValidator(fc: AbstractControl) {\n    const value = +fc.value;\n    const valid = typeof value === 'number' && !isNaN(value);\n\n    return valid\n      ? null\n      : {\n          numberValidator: true,\n        };\n  }\n\n  numberNotZeroValidator(fc: AbstractControl) {\n    const value = +fc.value;\n    const valid = typeof value === 'number' && !isNaN(value) && value > 0;\n\n    return valid\n      ? null\n      : {\n          numberNotZeroValidator: true,\n        };\n  }\n\n  emailValidator = (fc: AbstractControl) => {\n    const valid = fc.value && this.EMAIL_REGEX.test(fc.value);\n\n    return valid\n      ? null\n      : {\n          email: true,\n        };\n  };\n  // https://www.regexpal.com/?fam=104738\n  telehponeValidator = (fc: AbstractControl) => {\n    const valid = fc.value && this.TELEPHONE_REGEX.test(fc.value);\n\n    return valid\n      ? null\n      : {\n          telephone: true,\n        };\n  };\n\n  domainValidator = (fc: AbstractControl): any => {\n    if (this.DOMAIN_REGEX.test(fc.value)) {\n      return null;\n    }\n    return {\n      invalidDomain: true,\n    };\n  };\n\n  postcodeValidator = (control: AbstractControl): any => {\n    const valid = this.POSTCODE_REGEX.test(control.value);\n    return valid\n      ? null\n      : {\n          invalidPostcode: true,\n        };\n  };\n\n  moneyValidator = (control: AbstractControl): any => {\n    const valid = this.MONEY_REGEX.test(control.value);\n    return valid\n      ? null\n      : {\n          invalidMoney: true,\n        };\n  };\n\n  requiredFileType(type: string) {\n    return function(control: AbstractControl) {\n      const file = control.value;\n      if (file) {\n        const extension = file.name.split('.')[1].toLowerCase();\n        if (type.toLowerCase() !== extension.toLowerCase()) {\n          return {\n            requiredFileType: true,\n          };\n        }\n        return null;\n      }\n      return null;\n    };\n  }\n\n  showIndicator(config) {\n    return (\n      config.validation &&\n      config.validation.length > 0 &&\n      config.validation.some(x => {\n        return this.validationExist(x);\n      })\n    );\n  }\n\n  toFormData(formValue: T) {\n    const formData = new FormData();\n\n    for (const key of Object.keys(formValue)) {\n      const value = formValue[key];\n      formData.append(key, value);\n    }\n    return formData;\n  }\n\n  uploadProgress(cb: (progress: number) => void) {\n    return tap((event: HttpEvent) => {\n      if (event.type === HttpEventType.UploadProgress) {\n        cb(Math.round((100 * event.loaded) / event.total));\n      }\n    });\n  }\n\n  private validationExist(func) {\n    const funcStr = func.toString().replace(/\\s/g, '');\n    const result =\n      funcStr.indexOf('{required:') > -1 ||\n      funcStr.indexOf(\"{'required':\") > -1 ||\n      funcStr.indexOf('multipleCheckboxesRequireOnlyOneChecked:') > -1 ||\n      funcStr.indexOf('multipleCheckboxRequireAtLeastOne:') > -1 ||\n      funcStr.indexOf('multipleCheckboxRequireMoreThanOne:') > -1;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalErrorHandler.html":{"url":"injectables/GlobalErrorHandler.html","title":"injectable - GlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/global-error.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatErrors\n                            \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/global-error.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formatErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatErrors(errors: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/global-error.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(errorResponse: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/global-error.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { ToastService } from './toast.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(private injector: Injector) {}\n\n  handleError(errorResponse: any): void {\n    if (errorResponse.status === 401) {\n      this.injector.get(ToastService).danger('Unauthorised: Please login again.');\n    } else if (errorResponse.status === 400) {\n      this.injector.get(ToastService).danger(this.formatErrors(errorResponse.error.errors));\n    } else {\n      // All other errors including 500\n      const error = errorResponse && errorResponse.rejection ? errorResponse.rejection.error : errorResponse;\n      this.injector.get(ToastService).danger(error);\n      // IMPORTANT: Don't Rethrow the error otherwise it will not emit errors after once\n      // https://stackoverflow.com/questions/44356040/angular-global-error-handler-working-only-once\n      // throw errorResponse;\n    }\n    console.error(errorResponse);\n  }\n\n  private formatErrors(errors: any) {\n    return errors ? errors.map((err: any) => err.message).join('') : '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridColumn.html":{"url":"interfaces/GridColumn.html","title":"interface - GridColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/grid.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        buttonType\n                                \n                                \n                                            Optional\n                                        cellRenderer\n                                \n                                \n                                            Optional\n                                        cellRendererParams\n                                \n                                \n                                            Optional\n                                        dropdownFilterOptions\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        filterParams\n                                \n                                \n                                            Optional\n                                        headerName\n                                \n                                \n                                            Optional\n                                        show\n                                \n                                \n                                            Optional\n                                        sortable\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueGetter\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonType\n                                    \n                                \n                                \n                                    \n                                        buttonType:         ButtonType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellRenderer\n                                    \n                                \n                                \n                                    \n                                        cellRenderer:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellRendererParams\n                                    \n                                \n                                \n                                    \n                                        cellRendererParams:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdownFilterOptions\n                                    \n                                \n                                \n                                    \n                                        dropdownFilterOptions:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterParams\n                                    \n                                \n                                \n                                    \n                                        filterParams:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerName\n                                    \n                                \n                                \n                                    \n                                        headerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        show\n                                    \n                                \n                                \n                                    \n                                        show:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         GridFieldType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GridFieldType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueGetter\n                                    \n                                \n                                \n                                    \n                                        valueGetter:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GridFieldType {\n  Text,\n  Number,\n  Boolean,\n  Currency,\n  Date,\n  Dropdown,\n  ActionButtons,\n  ActionButton,\n}\n\nexport enum ButtonType {\n  Primary,\n  Secondary,\n  Success,\n  Warning,\n  Danger,\n}\n\nexport interface GridColumn {\n  field?: string;\n  headerName?: string;\n  filter?: boolean;\n  sortable?: boolean;\n  type?: GridFieldType;\n  dropdownFilterOptions?: any[];\n  width?: number;\n  valueGetter?: any;\n  cellRenderer?: any;\n  cellRendererParams?: { primaryClicked?; secondaryClicked?; primaryLabel?; secondaryLabel? };\n  filterParams?: any;\n  show?: any;\n  buttonType?: ButtonType;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/grid/grid.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-grid\n            \n\n            \n                styleUrls\n                ./grid.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultColumnDef\n                            \n                            \n                                frameworkComponents\n                            \n                            \n                                    Private\n                                gridApi\n                            \n                            \n                                    Private\n                                gridColumnApi\n                            \n                            \n                                gridColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportSelectedToCsv\n                            \n                            \n                                exportToCsv\n                            \n                            \n                                    Private\n                                getFilterParams\n                            \n                            \n                                    Private\n                                getFilters\n                            \n                            \n                                    Private\n                                getValueGetter\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onGridReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                enableCsvExport\n                            \n                            \n                                rows\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rowsSelected\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(currencyPipe: CurrencyPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/grid/grid.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currencyPipe\n                                                  \n                                                        \n                                                                        CurrencyPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :         GridColumn[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/grid/grid.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableCsvExport\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/grid/grid.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/grid/grid.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            exportSelectedToCsv\n                        \n                        \n                    \n                \n            \n            \n                \nexportSelectedToCsv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/grid.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            exportToCsv\n                        \n                        \n                    \n                \n            \n            \n                \nexportToCsv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/grid.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilterParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilterParams(column: GridColumn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/grid.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                GridColumn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { comparator: (filterLocalDateAtMidnight: any, cellValue: any) => 0 | 1 | -1; } | { comparator?: ...\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilters(column: GridColumn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/grid.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                GridColumn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueGetter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueGetter(column: GridColumn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/grid.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                GridColumn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/grid.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGridReady\n                        \n                        \n                    \n                \n            \n            \n                \nonGridReady(params)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/grid/grid.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColumnDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    resizable: true,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/grid.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    actionButtons: ActionButtonsComponent,\n    agDateInput: DateFilterComponent,\n    customDropDownFilter: DropdownFloatingFilterComponent,\n    actionButton: ActionButtonComponent,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/grid.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gridApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GridApi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/grid.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gridColumnApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ColumnApi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/grid.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ColDef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/grid/grid.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rowsSelected\n                    \n                \n\n                \n                    \n                        getrowsSelected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/grid/grid.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, ViewEncapsulation, OnChanges } from '@angular/core';\nimport { ValueGetterParams, ColDef, GridApi, ColumnApi } from 'ag-grid-community';\nimport { CurrencyPipe } from '@angular/common';\nimport { format } from 'date-fns';\n\nimport { ActionButtonsComponent, ActionButtonComponent } from './renderers';\nimport { GridColumn, GridFieldType } from '../../models';\nimport { DateFilterComponent, DropdownFloatingFilterComponent } from './components';\n\n@Component({\n  selector: 'appc-grid',\n  styleUrls: ['./grid.component.scss'],\n  templateUrl: './grid.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GridComponent implements OnChanges {\n  private gridApi: GridApi;\n  private gridColumnApi: ColumnApi;\n  @Input() columns: GridColumn[];\n  @Input() rows: any[];\n  @Input() enableCsvExport: boolean;\n  gridColumns: ColDef[];\n\n  defaultColumnDef = {\n    resizable: true,\n  };\n\n  frameworkComponents = {\n    actionButtons: ActionButtonsComponent,\n    agDateInput: DateFilterComponent,\n    customDropDownFilter: DropdownFloatingFilterComponent,\n    actionButton: ActionButtonComponent,\n  };\n\n  constructor(private currencyPipe: CurrencyPipe) {}\n\n  get rowsSelected(): boolean {\n    return this.gridApi && this.gridApi.getSelectedRows() && this.gridApi.getSelectedRows().length > 0;\n  }\n  ngOnChanges() {\n    if (this.columns) {\n      this.gridColumns = this.columns.map(c => {\n        const col: ColDef = {\n          field: c.field,\n          width: c.width,\n          headerName: c.headerName,\n          filter: this.getFilters.call(this, c),\n          sortable: c.sortable,\n          filterParams: this.getFilterParams.call(this, c),\n          valueGetter: this.getValueGetter.call(this, c),\n        };\n\n        if (c.type === GridFieldType.Dropdown) {\n          col.floatingFilterComponent = 'customDropDownFilter';\n          col.floatingFilterComponentParams = { dropdownFilterOptions: c.dropdownFilterOptions };\n        }\n\n        if (c.type === GridFieldType.ActionButtons) {\n          col.cellRenderer = 'actionButtons';\n          col.cellRendererParams = {\n            primaryClicked: c.cellRendererParams.primaryClicked,\n            secondaryClicked: c.cellRendererParams.secondaryClicked,\n            primaryLabel: c.cellRendererParams.primaryLabel,\n            secondaryLabel: c.cellRendererParams.secondaryLabel,\n          };\n        }\n\n        if (c.type === GridFieldType.ActionButton) {\n          col.cellRenderer = 'actionButton';\n          col.cellRendererParams = {\n            click: c.cellRendererParams.primaryClicked,\n            show: c.show,\n            buttonType: c.buttonType,\n            buttonText: c.cellRendererParams.primaryLabel,\n          };\n        }\n\n        return col;\n      });\n    }\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n\n  private getFilters(column: GridColumn): string | boolean {\n    if (!column.filter) {\n      return false;\n    }\n\n    switch (column.type) {\n      case GridFieldType.Number:\n        return 'agNumberColumnFilter';\n      case GridFieldType.Date:\n        return 'agDateColumnFilter';\n      case GridFieldType.Text:\n      default:\n        return 'agTextColumnFilter';\n    }\n  }\n\n  exportToCsv() {\n    this.gridApi.exportDataAsCsv();\n  }\n\n  exportSelectedToCsv() {\n    this.gridApi.exportDataAsCsv({ onlySelected: true });\n  }\n\n  private getFilterParams(column: GridColumn) {\n    switch (column.type) {\n      case GridFieldType.Date:\n        return {\n          // browserDatePicker: true,\n          // provide comparator function\n          comparator: (filterLocalDateAtMidnight, cellValue) => {\n            const dateAsString = cellValue;\n            if (dateAsString == null) {\n              return 0;\n            }\n            // In the example application, dates are stored as dd/mm/yyyy\n            // We create a Date object for comparison against the filter date\n            const dateParts = dateAsString.split('/');\n            const day = Number(dateParts[2]);\n            const month = Number(dateParts[1]) - 1;\n            const year = Number(dateParts[0]);\n            const cellDate = new Date(day, month, year);\n            // Now that both parameters are Date objects, we can compare\n            if (cellDate  filterLocalDateAtMidnight) {\n              return 1;\n            } else {\n              return 0;\n            }\n          },\n        };\n      case GridFieldType.Number:\n      default:\n        return {};\n    }\n  }\n\n  private getValueGetter(column: GridColumn) {\n    if (column.valueGetter) {\n      return column.valueGetter;\n    }\n\n    switch (column.type) {\n      case GridFieldType.Number:\n        return null;\n      case GridFieldType.Currency:\n        return (params: ValueGetterParams) => {\n          return this.currencyPipe.transform(params.data[column.field], 'GBP');\n        };\n      case GridFieldType.Date:\n        return (params: ValueGetterParams) => {\n          return format(new Date(params.data[column.field]), 'dd/MM/yyyy');\n        };\n      default:\n        return null;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Export to CSV\n      \n      \n        \n        Export Selected to CSV\n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./grid.component.scss\n                \n                @import '~ag-grid-community/dist/styles/ag-grid.css';\n@import '~ag-grid-community/dist/styles/ag-theme-balham.css';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Export to CSV                            Export Selected to CSV            '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupByPipe.html":{"url":"pipes/GroupByPipe.html","title":"pipe - GroupByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/group-by.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        groupBy\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(collection: any[], property: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/group-by.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'groupBy', pure: false })\nexport class GroupByPipe implements PipeTransform {\n  transform(collection: any[], property: string): any[] {\n    // prevents the application from breaking if the array of objects doesn't exist yet\n    if (!collection) {\n      return null;\n    }\n\n    const groupedCollection = collection.reduce((previous, current) => {\n      if (!previous[current[property]]) {\n        previous[current[property]] = [current];\n      } else {\n        previous[current[property]].push(current);\n      }\n\n      return previous;\n    }, {});\n\n    // this will return an array of objects, each object containing a group of objects\n    return Object.keys(groupedCollection).map(key => ({\n      key,\n      value: groupedCollection[key],\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exampleRoutes\n                            \n                            \n                                isCollapsed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                                \n                                    user\n                                \n                                \n                                    cultures\n                                \n                                \n                                    currentCulture\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthorizeService, appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/header/header.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/header/header.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exampleRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...routes]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/header/header.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/header/header.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/header/header.component.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/header/header.component.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        cultures\n                    \n                \n\n                \n                    \n                        getcultures()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/header/header.component.ts:26\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentCulture\n                    \n                \n\n                \n                    \n                        getcurrentCulture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/header/header.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from 'oidc-client';\n\nimport { AppService, AuthorizeService } from '@app/shared';\n\nimport { routes } from '../../+examples/examples.routes';\n\n@Component({\n  selector: 'appc-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  isCollapsed = true;\n\n  exampleRoutes = [...routes];\n\n  constructor(private authService: AuthorizeService, private appService: AppService) {}\n\n  get isLoggedIn(): boolean {\n    return this.authService.isLoggedIn;\n  }\n  get user(): User {\n    return this.authService.user;\n  }\n  get cultures(): ICulture[] {\n    return this.appService.appData.cultures;\n  }\n  get currentCulture(): ICulture {\n    return this.cultures.filter(x => x.current)[0];\n  }\n  ngOnInit(): void {}\n\n  toggleMenu() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'app_title' | translate }}\n    \n    \n      \n    \n    \n      \n      \n        \n          \n            {{ 'app_nav_home' | translate }}\n          \n        \n\n        \n          \n            {{ 'app_nav_examples' | translate }}\n            \n              {{\n                route.data.displayText\n              }}\n            \n          \n        \n      \n\n      \n      \n        \n        \n          \n            {{ currentCulture?.text }}\n            \n              \n                {{ c.text }}\n              \n            \n          \n        \n\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                header {\n    margin-bottom: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'app_title\\' | translate }}                                                                {{ \\'app_nav_home\\' | translate }}                                                {{ \\'app_nav_examples\\' | translate }}                          {{                route.data.displayText              }}                                                                                      {{ currentCulture?.text }}                                          {{ c.text }}                                                                '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-home-component\n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'appc-home-component',\n  templateUrl: './home.component.html'\n})\n\nexport class HomeComponent { }\n\n    \n\n    \n        \n  {{'app_title' | translate}}\n  \n    {{'app_description' | translate}}\n  \n  \n    More\n      info\n  \n\n\n\n  Features\n\n\n\n\n\n\n  \n    \n    ASP.NET Core\n    ASP.NET is an open source web framework for building modern web apps and services with .NET. ASP.NET creates\n      websites based on HTML5, CSS, and JavaScript that are simple, fast, and can scale to millions of users.\n    \n    View details »\n  \n  \n    \n    Angular\n    Angular is a TypeScript-based open-source front-end web application platform led by the Angular Team at Google\n      and by a community of individuals and corporations. Angular is a complete rewrite from the same team that built\n      AngularJS.\n    \n    View details »\n  \n\n\n\n\n  \n    And lastly, this one. Checkmate.\n    Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id ligula porta felis euismod\n      semper. Praesent commodo cursus magna, vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus commodo.\n  \n  \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\\'app_title\\' | translate}}      {{\\'app_description\\' | translate}}        More      info    Features          ASP.NET Core    ASP.NET is an open source web framework for building modern web apps and services with .NET. ASP.NET creates      websites based on HTML5, CSS, and JavaScript that are simple, fast, and can scale to millions of users.        View details »            Angular    Angular is a TypeScript-based open-source front-end web application platform led by the Angular Team at Google      and by a community of individuals and corporations. Angular is a complete rewrite from the same team that built      AngularJS.        View details »        And lastly, this one. Checkmate.    Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id ligula porta felis euismod      semper. Praesent commodo cursus magna, vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus commodo.           -->'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccordionItem.html":{"url":"interfaces/IAccordionItem.html","title":"interface - IAccordionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAccordionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/accordion.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAccordionItem {\n  title: string;\n  description: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICard.html":{"url":"interfaces/ICard.html","title":"interface - ICard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/card.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                            Optional\n                                        footer\n                                \n                                \n                                            Optional\n                                        headerClass\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string | TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | TemplateRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                    \n                                \n                                \n                                    \n                                        footer:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerClass\n                                    \n                                \n                                \n                                    \n                                        headerClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\nexport interface ICard {\n  title: string;\n  headerClass?: string;\n  body: string | TemplateRef;\n  footer?: TemplateRef;\n}\n\nexport interface ICardEvent {\n  $event: Event;\n  data: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICardEvent.html":{"url":"interfaces/ICardEvent.html","title":"interface - ICardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/card.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $event\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $event\n                                    \n                                \n                                \n                                    \n                                        $event:         Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\nexport interface ICard {\n  title: string;\n  headerClass?: string;\n  body: string | TemplateRef;\n  footer?: TemplateRef;\n}\n\nexport interface ICardEvent {\n  $event: Event;\n  data: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEnableAuthenticatorModel.html":{"url":"interfaces/IEnableAuthenticatorModel.html","title":"interface - IEnableAuthenticatorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEnableAuthenticatorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authenticatorUri\n                                \n                                \n                                        code\n                                \n                                \n                                        sharedKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authenticatorUri\n                                    \n                                \n                                \n                                    \n                                        authenticatorUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sharedKey\n                                    \n                                \n                                \n                                    \n                                        sharedKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nexport const COOKIES = new InjectionToken('COOKIES');\nexport interface KeyValuePair {\n  key: string;\n  value: T;\n}\n\nexport interface ISocialLogins {\n  loginProvider: string;\n  providerKey: string;\n  providerDisplayName: string;\n  active: boolean;\n}\n\nexport interface ITwoFactorModel {\n  hasAuthenticator: boolean;\n\n  recoveryCodesLeft: number;\n\n  is2faEnabled: boolean;\n}\n\nexport interface IEnableAuthenticatorModel {\n  code: string;\n  sharedKey: string;\n  authenticatorUri: string;\n}\n\nexport interface IModalOptions {\n  title: string;\n  message?: string;\n  template?: any;\n}\nexport enum FieldTypes {\n  Textbox = 'input',\n  FileUpload = 'file',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  options?: IOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  validation?: ValidatorFn[];\n  value?: any;\n  onSubmit?: Function;\n  errorMessages?: Object;\n}\n\nexport interface IOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldConfig.html":{"url":"interfaces/IFieldConfig.html","title":"interface - IFieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        errorMessages\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        onSubmit\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                        type\n                                \n                                \n                                            Optional\n                                        validation\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                    \n                                \n                                \n                                    \n                                        errorMessages:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSubmit\n                                    \n                                \n                                \n                                    \n                                        onSubmit:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         IOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         FieldTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nexport const COOKIES = new InjectionToken('COOKIES');\nexport interface KeyValuePair {\n  key: string;\n  value: T;\n}\n\nexport interface ISocialLogins {\n  loginProvider: string;\n  providerKey: string;\n  providerDisplayName: string;\n  active: boolean;\n}\n\nexport interface ITwoFactorModel {\n  hasAuthenticator: boolean;\n\n  recoveryCodesLeft: number;\n\n  is2faEnabled: boolean;\n}\n\nexport interface IEnableAuthenticatorModel {\n  code: string;\n  sharedKey: string;\n  authenticatorUri: string;\n}\n\nexport interface IModalOptions {\n  title: string;\n  message?: string;\n  template?: any;\n}\nexport enum FieldTypes {\n  Textbox = 'input',\n  FileUpload = 'file',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  options?: IOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  validation?: ValidatorFn[];\n  value?: any;\n  onSubmit?: Function;\n  errorMessages?: Object;\n}\n\nexport interface IOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldConfig-1.html":{"url":"interfaces/IFieldConfig-1.html","title":"interface - IFieldConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cancelButtonLabel\n                                \n                                \n                                            Optional\n                                        cssClass\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        errorMessages\n                                \n                                \n                                            Optional\n                                        focus\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        inputGroupAddonHandler\n                                \n                                \n                                            Optional\n                                        inputGroupAddonLabel\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        onCancel\n                                \n                                \n                                            Optional\n                                        onSelectChange\n                                \n                                \n                                            Optional\n                                        onSubmit\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        tooltip\n                                \n                                \n                                        type\n                                \n                                \n                                            Optional\n                                        validation\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelButtonLabel\n                                    \n                                \n                                \n                                    \n                                        cancelButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cssClass\n                                    \n                                \n                                \n                                    \n                                        cssClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessages\n                                    \n                                \n                                \n                                    \n                                        errorMessages:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        focus\n                                    \n                                \n                                \n                                    \n                                        focus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputGroupAddonHandler\n                                    \n                                \n                                \n                                    \n                                        inputGroupAddonHandler:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputGroupAddonLabel\n                                    \n                                \n                                \n                                    \n                                        inputGroupAddonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onCancel\n                                    \n                                \n                                \n                                    \n                                        onCancel:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSelectChange\n                                    \n                                \n                                \n                                    \n                                        onSelectChange:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSubmit\n                                    \n                                \n                                \n                                    \n                                        onSubmit:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     FieldOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         FieldTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidatorFn } from '@angular/forms';\n\nexport enum FieldTypes {\n  Textbox = 'input',\n  InputGroup = 'inputgroup',\n  FileUpload = 'file',\n  FilePathUpload = 'filepath',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n  ButtonGroup = 'buttongroup',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  cancelButtonLabel?: string;\n  disabled?: boolean;\n  options?: FieldOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  cssClass?: string;\n  focus?: boolean;\n  validation?: ValidatorFn[];\n  value?: any;\n  hidden?: boolean;\n  tooltip?: string;\n  onSubmit?: Function;\n  onCancel?: Function;\n  errorMessages?: Object;\n  inputGroupAddonLabel?: string;\n  inputGroupAddonHandler?: Function;\n  onSelectChange?: Function;\n}\n\nexport interface FieldOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IListItem.html":{"url":"interfaces/IListItem.html","title":"interface - IListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/list.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        template\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\nexport interface IListItem {\n  text?: string;\n  template?: TemplateRef;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IModalOptions.html":{"url":"interfaces/IModalOptions.html","title":"interface - IModalOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IModalOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        template\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nexport const COOKIES = new InjectionToken('COOKIES');\nexport interface KeyValuePair {\n  key: string;\n  value: T;\n}\n\nexport interface ISocialLogins {\n  loginProvider: string;\n  providerKey: string;\n  providerDisplayName: string;\n  active: boolean;\n}\n\nexport interface ITwoFactorModel {\n  hasAuthenticator: boolean;\n\n  recoveryCodesLeft: number;\n\n  is2faEnabled: boolean;\n}\n\nexport interface IEnableAuthenticatorModel {\n  code: string;\n  sharedKey: string;\n  authenticatorUri: string;\n}\n\nexport interface IModalOptions {\n  title: string;\n  message?: string;\n  template?: any;\n}\nexport enum FieldTypes {\n  Textbox = 'input',\n  FileUpload = 'file',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  options?: IOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  validation?: ValidatorFn[];\n  value?: any;\n  onSubmit?: Function;\n  errorMessages?: Object;\n}\n\nexport interface IOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INavigationState.html":{"url":"interfaces/INavigationState.html","title":"interface - INavigationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INavigationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ReturnUrlType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ReturnUrlType\n                                    \n                                \n                                \n                                    \n                                        ReturnUrlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { AuthenticationResultStatus, AuthorizeService } from '../../services';\nimport { ApplicationPaths, ReturnUrlType, QueryParameterNames, LoginActions, ApplicationName } from '../../constants';\n\n// The main responsibility of this component is to handle the user's login process.\n// This is the starting point for the login process. Any component that needs to authenticate\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\n// let the component perform the login and return back to the return url.\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public message = new BehaviorSubject(null);\n\n  constructor(private authorizeService: AuthorizeService, private activatedRoute: ActivatedRoute, private router: Router) {}\n\n  async ngOnInit() {\n    const action = this.activatedRoute.snapshot.url[1];\n    switch (action.path) {\n      case LoginActions.Login:\n        await this.login(this.getReturnUrl());\n        break;\n      case LoginActions.LoginCallback:\n        await this.processLoginCallback();\n        break;\n      case LoginActions.LoginFailed:\n        const message = this.activatedRoute.snapshot.queryParamMap.get(QueryParameterNames.Message);\n        this.message.next(message);\n        break;\n      case LoginActions.Profile:\n        this.redirectToProfile();\n        break;\n      case LoginActions.Register:\n        this.redirectToRegister();\n        break;\n      default:\n        throw new Error(`Invalid action '${action}'`);\n    }\n  }\n\n  private async login(returnUrl: string): Promise {\n    const state: INavigationState = { returnUrl };\n    const result = await this.authorizeService.signIn(state);\n    this.message.next(undefined);\n    switch (result.status) {\n      case AuthenticationResultStatus.Redirect:\n        break;\n      case AuthenticationResultStatus.Success:\n        await this.navigateToReturnUrl(returnUrl);\n        break;\n      case AuthenticationResultStatus.Fail:\n        await this.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\n          queryParams: { [QueryParameterNames.Message]: result.message },\n        });\n        break;\n      default:\n        throw new Error(`Invalid status result ${(result as any).status}.`);\n    }\n  }\n\n  private async processLoginCallback(): Promise {\n    const url = window.location.href;\n    const result = await this.authorizeService.completeSignIn(url);\n    switch (result.status) {\n      case AuthenticationResultStatus.Redirect:\n        // There should not be any redirects as completeSignIn never redirects.\n        throw new Error('Should not redirect.');\n      case AuthenticationResultStatus.Success:\n        await this.navigateToReturnUrl(this.getReturnUrl(result.state));\n        break;\n      case AuthenticationResultStatus.Fail:\n        this.message.next(result.message);\n        break;\n    }\n  }\n\n  private redirectToRegister(): any {\n    this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${ReturnUrlType}=?client_id=${ApplicationName}`);\n  }\n\n  private redirectToProfile(): void {\n    this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityManagePath}?${ReturnUrlType}=?client_id=${ApplicationName}`);\n  }\n\n  private async navigateToReturnUrl(returnUrl: string) {\n    // It's important that we do a replace here so that we remove the callback uri with the\n    // fragment containing the tokens from the browser history.\n    await this.router.navigateByUrl(returnUrl, {\n      replaceUrl: true,\n    });\n  }\n\n  private getReturnUrl(state?: INavigationState): string {\n    const fromQuery = (this.activatedRoute.snapshot.queryParams as INavigationState).returnUrl;\n    // If the url is comming from the query string, check that is either\n    // a relative url or an absolute url\n    if (fromQuery && !(fromQuery.startsWith(`${window.location.origin}/`) || /\\/[^\\/].*/.test(fromQuery))) {\n      // This is an extra check to prevent open redirects.\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\n    }\n    return (state && state.returnUrl) || fromQuery || ApplicationPaths.DefaultLoginRedirectPath;\n  }\n\n  private redirectToApiAuthorizationPath(apiAuthorizationPath: string) {\n    // It's important that we do a replace here so that when the user hits the back arrow on the\n    // browser they get sent back to where it was on the app instead of to an endpoint on this\n    // component.\n    window.location.replace(apiAuthorizationPath);\n  }\n}\n\ninterface INavigationState {\n  [ReturnUrlType]: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INavigationState-1.html":{"url":"interfaces/INavigationState-1.html","title":"interface - INavigationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INavigationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/logout/logout.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ReturnUrlType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ReturnUrlType\n                                    \n                                \n                                \n                                    \n                                        ReturnUrlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { AuthenticationResultStatus, AuthorizeService } from '../../services';\nimport { LogoutActions, ApplicationPaths, ReturnUrlType } from '../../constants';\n\n// The main responsibility of this component is to handle the user's logout process.\n// This is the starting point for the logout process, which is usually initiated when a\n// user clicks on the logout button on the LoginMenu component.\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css'],\n})\nexport class LogoutComponent implements OnInit {\n  public message = new BehaviorSubject(null);\n\n  constructor(private authorizeService: AuthorizeService, private activatedRoute: ActivatedRoute, private router: Router) {}\n\n  async ngOnInit() {\n    const action = this.activatedRoute.snapshot.url[1];\n    switch (action.path) {\n      case LogoutActions.Logout:\n        if (!!window.history.state.local) {\n          await this.logout(this.getReturnUrl());\n        } else {\n          // This prevents regular links to /authentication/logout from triggering a logout\n          this.message.next('The logout was not initiated from within the page.');\n        }\n\n        break;\n      case LogoutActions.LogoutCallback:\n        await this.processLogoutCallback();\n        break;\n      case LogoutActions.LoggedOut:\n        this.message.next('You have successfully logged out!');\n        break;\n      default:\n        throw new Error(`Invalid action '${action}'`);\n    }\n  }\n\n  private async logout(returnUrl: string): Promise {\n    const state: INavigationState = { returnUrl };\n    const isAuthenticated = await this.authorizeService\n      .isAuthenticated()\n      .pipe(take(1))\n      .toPromise();\n    if (isAuthenticated) {\n      const result = await this.authorizeService.signOut(state);\n      switch (result.status) {\n        case AuthenticationResultStatus.Redirect:\n          break;\n        case AuthenticationResultStatus.Success:\n          await this.navigateToReturnUrl(returnUrl);\n          break;\n        case AuthenticationResultStatus.Fail:\n          this.message.next(result.message);\n          break;\n        default:\n          throw new Error('Invalid authentication result status.');\n      }\n    } else {\n      this.message.next('You have successfully logged out!');\n    }\n  }\n\n  private async processLogoutCallback(): Promise {\n    const result = await this.authorizeService.completeSignOut(window.location.href);\n    switch (result.status) {\n      case AuthenticationResultStatus.Redirect:\n        // There should not be any redirects as the only time completeAuthentication finishes\n        // is when we are doing a redirect sign in flow.\n        throw new Error('Should not redirect.');\n      case AuthenticationResultStatus.Success:\n        await this.navigateToReturnUrl(this.getReturnUrl(result.state));\n        break;\n      case AuthenticationResultStatus.Fail:\n        this.message.next(result.message);\n        break;\n      default:\n        throw new Error('Invalid authentication result status.');\n    }\n  }\n\n  private async navigateToReturnUrl(returnUrl: string) {\n    await this.router.navigateByUrl(returnUrl, {\n      replaceUrl: true,\n    });\n  }\n\n  private getReturnUrl(state?: INavigationState): string {\n    const fromQuery = (this.activatedRoute.snapshot.queryParams as INavigationState).returnUrl;\n    // If the url is coming from the query string, check that is either\n    // a relative url or an absolute url\n    if (fromQuery && !(fromQuery.startsWith(`${window.location.origin}/`) || /\\/[^\\/].*/.test(fromQuery))) {\n      // This is an extra check to prevent open redirects.\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\n    }\n    return (state && state.returnUrl) || fromQuery || ApplicationPaths.LoggedOut;\n  }\n}\n\ninterface INavigationState {\n  [ReturnUrlType]: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOption.html":{"url":"interfaces/IOption.html","title":"interface - IOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        selected\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nexport const COOKIES = new InjectionToken('COOKIES');\nexport interface KeyValuePair {\n  key: string;\n  value: T;\n}\n\nexport interface ISocialLogins {\n  loginProvider: string;\n  providerKey: string;\n  providerDisplayName: string;\n  active: boolean;\n}\n\nexport interface ITwoFactorModel {\n  hasAuthenticator: boolean;\n\n  recoveryCodesLeft: number;\n\n  is2faEnabled: boolean;\n}\n\nexport interface IEnableAuthenticatorModel {\n  code: string;\n  sharedKey: string;\n  authenticatorUri: string;\n}\n\nexport interface IModalOptions {\n  title: string;\n  message?: string;\n  template?: any;\n}\nexport enum FieldTypes {\n  Textbox = 'input',\n  FileUpload = 'file',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  options?: IOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  validation?: ValidatorFn[];\n  value?: any;\n  onSubmit?: Function;\n  errorMessages?: Object;\n}\n\nexport interface IOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISocialLogins.html":{"url":"interfaces/ISocialLogins.html","title":"interface - ISocialLogins","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISocialLogins\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        loginProvider\n                                \n                                \n                                        providerDisplayName\n                                \n                                \n                                        providerKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginProvider\n                                    \n                                \n                                \n                                    \n                                        loginProvider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerDisplayName\n                                    \n                                \n                                \n                                    \n                                        providerDisplayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerKey\n                                    \n                                \n                                \n                                    \n                                        providerKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nexport const COOKIES = new InjectionToken('COOKIES');\nexport interface KeyValuePair {\n  key: string;\n  value: T;\n}\n\nexport interface ISocialLogins {\n  loginProvider: string;\n  providerKey: string;\n  providerDisplayName: string;\n  active: boolean;\n}\n\nexport interface ITwoFactorModel {\n  hasAuthenticator: boolean;\n\n  recoveryCodesLeft: number;\n\n  is2faEnabled: boolean;\n}\n\nexport interface IEnableAuthenticatorModel {\n  code: string;\n  sharedKey: string;\n  authenticatorUri: string;\n}\n\nexport interface IModalOptions {\n  title: string;\n  message?: string;\n  template?: any;\n}\nexport enum FieldTypes {\n  Textbox = 'input',\n  FileUpload = 'file',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  options?: IOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  validation?: ValidatorFn[];\n  value?: any;\n  onSubmit?: Function;\n  errorMessages?: Object;\n}\n\nexport interface IOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITwoFactorModel.html":{"url":"interfaces/ITwoFactorModel.html","title":"interface - ITwoFactorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITwoFactorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hasAuthenticator\n                                \n                                \n                                        is2faEnabled\n                                \n                                \n                                        recoveryCodesLeft\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasAuthenticator\n                                    \n                                \n                                \n                                    \n                                        hasAuthenticator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is2faEnabled\n                                    \n                                \n                                \n                                    \n                                        is2faEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recoveryCodesLeft\n                                    \n                                \n                                \n                                    \n                                        recoveryCodesLeft:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nexport const COOKIES = new InjectionToken('COOKIES');\nexport interface KeyValuePair {\n  key: string;\n  value: T;\n}\n\nexport interface ISocialLogins {\n  loginProvider: string;\n  providerKey: string;\n  providerDisplayName: string;\n  active: boolean;\n}\n\nexport interface ITwoFactorModel {\n  hasAuthenticator: boolean;\n\n  recoveryCodesLeft: number;\n\n  is2faEnabled: boolean;\n}\n\nexport interface IEnableAuthenticatorModel {\n  code: string;\n  sharedKey: string;\n  authenticatorUri: string;\n}\n\nexport interface IModalOptions {\n  title: string;\n  message?: string;\n  template?: any;\n}\nexport enum FieldTypes {\n  Textbox = 'input',\n  FileUpload = 'file',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  options?: IOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  validation?: ValidatorFn[];\n  value?: any;\n  onSubmit?: Function;\n  errorMessages?: Object;\n}\n\nexport interface IOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/authorize.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User, UserManager, WebStorageStateStore } from 'oidc-client';\nimport { BehaviorSubject, concat, from, Observable } from 'rxjs';\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\nimport { ApplicationPaths, ApplicationName } from '../constants';\n\nexport type IAuthenticationResult = SuccessAuthenticationResult | FailureAuthenticationResult | RedirectAuthenticationResult;\n\nexport interface SuccessAuthenticationResult {\n  status: AuthenticationResultStatus.Success;\n  state: any;\n}\n\nexport interface FailureAuthenticationResult {\n  status: AuthenticationResultStatus.Fail;\n  message: string;\n}\n\nexport interface RedirectAuthenticationResult {\n  status: AuthenticationResultStatus.Redirect;\n}\n\nexport enum AuthenticationResultStatus {\n  Success,\n  Redirect,\n  Fail,\n}\n\nexport interface IUser extends User {\n  name: string;\n  role: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizeService {\n  // By default pop ups are disabled because they don't work properly on Edge.\n  // If you want to enable pop up authentication simply set this flag to false.\n  private _user: IUser;\n  private popUpDisabled = true;\n  private userManager: UserManager;\n  private userSubject: BehaviorSubject = new BehaviorSubject(null);\n\n  get isLoggedIn(): boolean {\n    return !!this.user;\n  }\n\n  get user(): IUser {\n    return this._user;\n  }\n\n  public hasRole(role: string): boolean {\n    return this._user && this._user.role && this._user.role.indexOf(role) > -1;\n  }\n\n  public isAuthenticated(): Observable {\n    return this.getUser().pipe(map(u => !!u));\n  }\n\n  public getUser(): Observable {\n    return concat(\n      this.userSubject.pipe(\n        take(1),\n        filter(u => !!u),\n      ),\n      this.getUserFromStorage().pipe(\n        filter(u => !!u),\n        tap(u => {\n          this._user = u;\n          this.userSubject.next(u);\n        }),\n      ),\n      this.userSubject.asObservable(),\n    );\n  }\n\n  public getAccessToken(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => from(this.userManager.getUser())),\n      map(user => user && user.access_token),\n    );\n  }\n\n  // We try to authenticate the user in three different ways:\n  // 1) We try to see if we can authenticate the user silently. This happens\n  //    when the user is already logged in on the IdP and is done using a hidden iframe\n  //    on the client.\n  // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\n  //    Pop-Up blocker or the user has disabled PopUps.\n  // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\n  //    redirect flow.\n  public async signIn(state: any): Promise {\n    await this.ensureUserManagerInitialized();\n    let user: User = null;\n    try {\n      user = await this.userManager.signinSilent(this.createArguments());\n      this.userSubject.next(user.profile as any);\n      return this.success(state);\n    } catch (silentError) {\n      // User might not be authenticated, fallback to popup authentication\n      console.log('Silent authentication error: ', silentError);\n\n      try {\n        if (this.popUpDisabled) {\n          throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n        }\n        user = await this.userManager.signinPopup(this.createArguments());\n        this.userSubject.next(user.profile as any);\n        return this.success(state);\n      } catch (popupError) {\n        if (popupError.message === 'Popup window closed') {\n          // The user explicitly cancelled the login action by closing an opened popup.\n          return this.error('The user closed the window.');\n        } else if (!this.popUpDisabled) {\n          console.log('Popup authentication error: ', popupError);\n        }\n\n        // PopUps might be blocked by the user, fallback to redirect\n        try {\n          await this.userManager.signinRedirect(this.createArguments(state));\n          return this.redirect();\n        } catch (redirectError) {\n          console.log('Redirect authentication error: ', redirectError);\n          return this.error(redirectError);\n        }\n      }\n    }\n  }\n\n  public async completeSignIn(url: string): Promise {\n    try {\n      await this.ensureUserManagerInitialized();\n      const user = await this.userManager.signinCallback(url);\n      this.userSubject.next(user && (user.profile as any));\n      return this.success(user && user.state);\n    } catch (error) {\n      console.log('There was an error signing in: ', error);\n      return this.error('There was an error signing in.');\n    }\n  }\n\n  public async signOut(state: any): Promise {\n    try {\n      if (this.popUpDisabled) {\n        throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n      }\n\n      await this.ensureUserManagerInitialized();\n      await this.userManager.signoutPopup(this.createArguments());\n      this.userSubject.next(null);\n      return this.success(state);\n    } catch (popupSignOutError) {\n      console.log('Popup signout error: ', popupSignOutError);\n      try {\n        await this.userManager.signoutRedirect(this.createArguments(state));\n        return this.redirect();\n      } catch (redirectSignOutError) {\n        console.log('Redirect signout error: ', popupSignOutError);\n        return this.error(redirectSignOutError);\n      }\n    }\n  }\n\n  public async completeSignOut(url: string): Promise {\n    await this.ensureUserManagerInitialized();\n    try {\n      const signoutResponse = await this.userManager.signoutCallback(url);\n      this.userSubject.next(null);\n      return this.success(signoutResponse && signoutResponse.state.data);\n    } catch (error) {\n      console.log(`There was an error trying to log out '${error}'.`);\n      return this.error(error);\n    }\n  }\n\n  private createArguments(state?: any): any {\n    return { useReplaceToNavigate: true, data: state };\n  }\n\n  private error(message: string): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Fail, message };\n  }\n\n  private success(state: any): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Success, state };\n  }\n\n  private redirect(): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Redirect };\n  }\n\n  private async ensureUserManagerInitialized(): Promise {\n    if (this.userManager !== undefined) {\n      return;\n    }\n    const response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\n    if (!response.ok) {\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\n    }\n\n    const settings: any = await response.json();\n    settings.automaticSilentRenew = true;\n    settings.includeIdTokenInSilentRenew = true;\n    this.userManager = new UserManager(settings);\n\n    this.userManager.events.addUserSignedOut(async () => {\n      await this.userManager.removeUser();\n      this.userSubject.next(null);\n    });\n  }\n\n  private getUserFromStorage(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => this.userManager.getUser()),\n      map(u => u && (u.profile as any)),\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageResizerComponent.html":{"url":"components/ImageResizerComponent.html","title":"component - ImageResizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageResizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/image-resizer/image-resizer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-image-resizer\n            \n\n            \n                styleUrls\n                ./image-resizer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-resizer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                file_src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRemove\n                            \n                            \n                                onSave\n                            \n                            \n                                readFile\n                            \n                            \n                                readFiles\n                            \n                            \n                                resize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                showUploadButton\n                            \n                            \n                                src\n                            \n                            \n                                title\n                            \n                            \n                                triggerSaveOnSelect\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imageSource\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: ModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showUploadButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        src\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerSaveOnSelect\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        remove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        save\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fileChange\n                        \n                        \n                    \n                \n            \n            \n                \nfileChange(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(input: HTMLInputElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            HTMLInputElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \nreadFile(file: File, reader: any, callback: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readFiles\n                        \n                        \n                    \n                \n            \n            \n                \nreadFiles(file: any, callback: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \nresize(img: any, MAX_WIDTH: number, MAX_HEIGHT: number, callback: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    img\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    MAX_WIDTH\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    MAX_HEIGHT\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     () => void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            file_src\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imageSource\n                    \n                \n\n                \n                    \n                        getimageSource()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/image-resizer/image-resizer.component.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ModalService } from '../../services';\n\n@Component({\n  selector: 'app-image-resizer',\n  templateUrl: './image-resizer.component.html',\n  styleUrls: ['./image-resizer.component.scss'],\n})\nexport class ImageResizerComponent implements OnInit {\n  @Input() width = 200;\n  @Input() height = 200;\n  @Input() title: string;\n  @Input() src: string;\n  @Input() showUploadButton: boolean;\n  @Input() triggerSaveOnSelect: boolean;\n  @Output() save = new EventEmitter();\n  @Output() remove = new EventEmitter();\n\n  public file_src: string;\n\n  constructor(private modalService: ModalService) {}\n\n  get imageSource(): string {\n    return this.file_src || this.src;\n  }\n  ngOnInit() {}\n\n  onSave() {\n    this.save.next(this.file_src);\n    this.file_src = null;\n  }\n\n  onRemove(input: HTMLInputElement) {\n    if (this.file_src) {\n      this.file_src = null;\n      input.value = '';\n      return;\n    }\n\n    if (this.src) {\n      this.modalService\n        .warn({\n          title: 'Confirm',\n          message: 'Are you sure you want to delete?',\n          okLabel: 'Yes',\n          cancelLabel: 'No',\n        })\n        .then(\n          () => {\n            input.value = '';\n            this.remove.next();\n          },\n          () => {},\n        );\n    }\n  }\n\n  // This is called when the user selects new files from the upload button\n  fileChange(input: any) {\n    this.readFiles(input.files[0], () => {\n      if (this.triggerSaveOnSelect) {\n        this.save.next(this.file_src);\n      }\n    });\n  }\n\n  readFile(file: File, reader: any, callback: any) {\n    // Set a callback funtion to fire after the file is fully loaded\n    reader.onload = () => {\n      // callback with the results\n      callback(reader.result);\n    };\n\n    // Read the file\n    reader.readAsDataURL(file);\n  }\n\n  readFiles(file: any, callback: any) {\n    // Create the file reader\n    const reader = new FileReader();\n\n    // If there is a file\n    // Start reading this file\n    this.readFile(file, reader, (result: any) => {\n      // Create an img element and add the image file data to it\n      const img = document.createElement('img');\n      img.src = result;\n\n      // Send this img to the resize function (and wait for callback)\n      this.resize(img, this.width, this.height, (resized_jpeg: any, before: any, after: any) => {\n        // Add the resized jpeg img source to a list for preview\n        // This is also the file you want to upload. (either as a\n        // base64 string or img.src = resized_jpeg if you prefer a file).\n        this.file_src = resized_jpeg;\n        callback();\n      });\n    });\n  }\n\n  resize(img: any, MAX_WIDTH: number, MAX_HEIGHT: number, callback: any) {\n    // This will wait until the img is loaded before calling this function\n    return (img.onload = () => {\n      // Get the images current width and height\n      let width = img.width;\n      let height = img.height;\n\n      // Set the WxH to fit the Max values (but maintain proportions)\n      if (width > height) {\n        if (width > MAX_WIDTH) {\n          height *= MAX_WIDTH / width;\n          width = MAX_WIDTH;\n        }\n      } else {\n        if (height > MAX_HEIGHT) {\n          width *= MAX_HEIGHT / height;\n          height = MAX_HEIGHT;\n        }\n      }\n\n      // create a canvas object\n      const canvas = document.createElement('canvas');\n\n      // Set the canvas to the new calculated dimensions\n      canvas.width = width;\n      canvas.height = height;\n      const ctx: any = canvas.getContext('2d');\n\n      ctx.drawImage(img, 0, 0, width, height);\n\n      // Get this encoded as a jpeg\n      // IMPORTANT: 'jpeg' NOT 'jpg'\n      const dataUrl = canvas.toDataURL('image/jpeg');\n\n      // callback with the results\n      callback(dataUrl, img.src.length, dataUrl.length);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ title }}\n    \n    \n      \n    \n  \n\n\n\n  \n    \n      Upload\n    \n    \n      \n      Browse\n    \n    \n      Remove\n    \n  \n\n\n    \n\n    \n                \n                    ./image-resizer.component.scss\n                \n                button {\n  margin-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}                                Upload                    Browse              Remove      '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImageResizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtHelperService.html":{"url":"classes/JwtHelperService.html","title":"class - JwtHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/jwt-decode/jwthelper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tokenGetter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b64decode\n                            \n                            \n                                    Private\n                                b64DecodeUnicode\n                            \n                            \n                                    Public\n                                decodeToken\n                            \n                            \n                                    Public\n                                getTokenExpirationDate\n                            \n                            \n                                    Public\n                                isTokenExpired\n                            \n                            \n                                    Public\n                                urlBase64Decode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenGetter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/jwt-decode/jwthelper.service.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            b64decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b64decode(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/jwt-decode/jwthelper.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            b64DecodeUnicode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b64DecodeUnicode(str: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/jwt-decode/jwthelper.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            decodeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/jwt-decode/jwthelper.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTokenExpirationDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenExpirationDate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/jwt-decode/jwthelper.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.tokenGetter()\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Date | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTokenExpired\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTokenExpired(token: string, offsetSeconds?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/jwt-decode/jwthelper.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.tokenGetter()\n                                    \n\n                                \n                                \n                                    offsetSeconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            urlBase64Decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    urlBase64Decode(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/jwt-decode/jwthelper.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class JwtHelperService {\n  tokenGetter: () => string;\n  public urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n      case 0: {\n        break;\n      }\n      case 2: {\n        output += '==';\n        break;\n      }\n      case 3: {\n        output += '=';\n        break;\n      }\n      default: {\n        throw new Error('Illegal base64url string!');\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  // credits for decoder goes to https://github.com/atk\n  private b64decode(str: string): string {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output = '';\n\n    str = String(str).replace(/=+$/, '');\n\n    if (str.length % 4 === 1) {\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n\n    for (\n      // initialize result and counters\n      let bc = 0, bs: any, buffer: any, idx = 0;\n      // get next character\n      (buffer = str.charAt(idx++));\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer &&\n      ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4)\n        ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n        : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(\n      Array.prototype.map\n        .call(this.b64decode(str), (c: any) => {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join(''),\n    );\n  }\n\n  public decodeToken(token: string): any {\n    if (!token || token === '') {\n      return null;\n    }\n\n    const parts = token.split('.');\n\n    if (parts.length !== 3) {\n      throw new Error(\n        \"The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.\",\n      );\n    }\n\n    const decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error('Cannot decode the token.');\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  public getTokenExpirationDate(token: string = this.tokenGetter()): Date | null {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded || !decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  public isTokenExpired(token: string = this.tokenGetter(), offsetSeconds?: number): boolean {\n    if (!token || token === '') {\n      return true;\n    }\n    const date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date === null) {\n      return false;\n    }\n\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/interceptors/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                isSameOriginUrl\n                            \n                            \n                                    Private\n                                processRequestWithToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorize: AuthorizeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/interceptors/jwt.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorize\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/interceptors/jwt.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isSameOriginUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSameOriginUrl(req: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/interceptors/jwt.interceptor.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processRequestWithToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processRequestWithToken(token: string, req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/interceptors/jwt.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AuthorizeService } from '../authorize.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authorize: AuthorizeService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return this.authorize.getAccessToken().pipe(mergeMap(token => this.processRequestWithToken(token, req, next)));\n  }\n\n  // Checks if there is an access_token available in the authorize service\n  // and adds it to the request in case it's targeted at the same origin as the\n  // single page application.\n  private processRequestWithToken(token: string, req: HttpRequest, next: HttpHandler) {\n    if (!!token && this.isSameOriginUrl(req)) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n\n    return next.handle(req);\n  }\n\n  private isSameOriginUrl(req: any) {\n    // It's an absolute url with the same origin.\n    if (req.url.startsWith(`${window.location.origin}/`)) {\n      return true;\n    }\n\n    // It's a protocol relative url with the same origin.\n    // For example: //www.example.com/api/Products\n    if (req.url.startsWith(`//${window.location.host}/`)) {\n      return true;\n    }\n\n    // It's a relative url like /api/Products\n    if (/^\\/[^\\/].*/.test(req.url)) {\n      return true;\n    }\n\n    // It's an absolute or protocol relative url that\n    // doesn't have the same origin.\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyValuePair.html":{"url":"interfaces/KeyValuePair.html","title":"interface - KeyValuePair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyValuePair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nexport const COOKIES = new InjectionToken('COOKIES');\nexport interface KeyValuePair {\n  key: string;\n  value: T;\n}\n\nexport interface ISocialLogins {\n  loginProvider: string;\n  providerKey: string;\n  providerDisplayName: string;\n  active: boolean;\n}\n\nexport interface ITwoFactorModel {\n  hasAuthenticator: boolean;\n\n  recoveryCodesLeft: number;\n\n  is2faEnabled: boolean;\n}\n\nexport interface IEnableAuthenticatorModel {\n  code: string;\n  sharedKey: string;\n  authenticatorUri: string;\n}\n\nexport interface IModalOptions {\n  title: string;\n  message?: string;\n  template?: any;\n}\nexport enum FieldTypes {\n  Textbox = 'input',\n  FileUpload = 'file',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n  Date = 'date',\n  Time = 'time',\n  Textarea = 'textarea',\n  Radiolist = 'radiolist',\n  Select = 'select',\n  Checkbox = 'checkbox',\n  Checkboxlist = 'checkboxlist',\n  Button = 'button',\n}\n\nexport interface Field {\n  config: IFieldConfig;\n}\nexport interface IFieldConfig {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  options?: IOption[];\n  placeholder?: string;\n  type: FieldTypes;\n  validation?: ValidatorFn[];\n  value?: any;\n  onSubmit?: Function;\n  errorMessages?: Object;\n}\n\nexport interface IOption {\n  key: string | number;\n  value: string;\n  selected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/list/list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list\n            \n\n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/list/list.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         IListItem[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index, item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { IListItem } from '../../models';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n})\nexport class ListComponent implements OnInit {\n  @Input() list: IListItem[];\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  trackByFn(index, item) {\n    return index;\n  }\n}\n\n    \n\n    \n        \n  \n    \n       \n    \n    \n      {{ item.text }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                           {{ item.text }}      '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/loading/loading.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-loading\n            \n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingScreenService: LoadingService, _elmRef: ElementRef, _changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/loading/loading.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingScreenService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/loading/loading.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/loading/loading.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/loading/loading.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, ChangeDetectorRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { LoadingService } from '../../services';\n\n@Component({\n  selector: 'appc-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements AfterViewInit, OnDestroy {\n  loadingSubscription: Subscription;\n\n  constructor(private loadingScreenService: LoadingService, private _elmRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this._elmRef.nativeElement.style.display = 'none';\n    this.loadingSubscription = this.loadingScreenService.loading$.pipe().subscribe((status: boolean) => {\n      this._elmRef.nativeElement.style.display = status ? 'block' : 'none';\n      this._changeDetectorRef.detectChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n  Loading...\n\n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                #overlay {\n  background: #ffffff;\n  color: #666666;\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  float: left;\n  text-align: center;\n  padding-top: 25%;\n  opacity: 0.8;\n}\n\n.spinner {\n  margin: 0 auto;\n  height: 64px;\n  width: 64px;\n  animation: rotate 0.8s infinite linear;\n  border: 5px solid #005774;\n  border-right-color: transparent;\n  border-radius: 50%;\n}\n@keyframes rotate {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Loading...'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingInterceptor.html":{"url":"interceptors/LoadingInterceptor.html","title":"interceptor - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/interceptors/loading.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                totalRequests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decreaseRequests\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/interceptors/loading.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            decreaseRequests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decreaseRequests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/interceptors/loading.interceptor.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/interceptors/loading.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            totalRequests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/interceptors/loading.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpInterceptor, HttpResponse } from '@angular/common/http';\nimport { tap, catchError } from 'rxjs/operators';\n\nimport { LoadingService } from '../loading.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingInterceptor implements HttpInterceptor {\n  private totalRequests = 0;\n\n  constructor(private loadingService: LoadingService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler) {\n    this.totalRequests++;\n    this.loadingService.startLoading();\n    return next.handle(request).pipe(\n      tap(res => {\n        if (res instanceof HttpResponse) {\n          this.decreaseRequests();\n        }\n      }),\n      catchError(err => {\n        this.decreaseRequests();\n        throw err;\n      }),\n    );\n  }\n\n  private decreaseRequests() {\n    this.totalRequests--;\n    if (this.totalRequests === 0) {\n      this.loadingService.stopLoading();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/loading.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startLoading\n                            \n                            \n                                stopLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startLoading\n                        \n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopLoading\n                        \n                        \n                    \n                \n            \n            \n                \nstopLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/loading.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  loading$: Subject = new Subject();\n\n  startLoading() {\n    this.loading$.next(true);\n  }\n\n  stopLoading() {\n    this.loading$.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getReturnUrl\n                            \n                            \n                                    Private\n                                    Async\n                                login\n                            \n                            \n                                    Private\n                                    Async\n                                navigateToReturnUrl\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                processLoginCallback\n                            \n                            \n                                    Private\n                                redirectToApiAuthorizationPath\n                            \n                            \n                                    Private\n                                redirectToProfile\n                            \n                            \n                                    Private\n                                redirectToRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizeService: AuthorizeService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizeService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getReturnUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReturnUrl(state?: INavigationState)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login/login.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                INavigationState\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(returnUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login/login.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            navigateToReturnUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToReturnUrl(returnUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login/login.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login/login.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            processLoginCallback\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processLoginCallback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login/login.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirectToApiAuthorizationPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectToApiAuthorizationPath(apiAuthorizationPath: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login/login.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiAuthorizationPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirectToProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectToProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login/login.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirectToRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectToRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login/login.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { AuthenticationResultStatus, AuthorizeService } from '../../services';\nimport { ApplicationPaths, ReturnUrlType, QueryParameterNames, LoginActions, ApplicationName } from '../../constants';\n\n// The main responsibility of this component is to handle the user's login process.\n// This is the starting point for the login process. Any component that needs to authenticate\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\n// let the component perform the login and return back to the return url.\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public message = new BehaviorSubject(null);\n\n  constructor(private authorizeService: AuthorizeService, private activatedRoute: ActivatedRoute, private router: Router) {}\n\n  async ngOnInit() {\n    const action = this.activatedRoute.snapshot.url[1];\n    switch (action.path) {\n      case LoginActions.Login:\n        await this.login(this.getReturnUrl());\n        break;\n      case LoginActions.LoginCallback:\n        await this.processLoginCallback();\n        break;\n      case LoginActions.LoginFailed:\n        const message = this.activatedRoute.snapshot.queryParamMap.get(QueryParameterNames.Message);\n        this.message.next(message);\n        break;\n      case LoginActions.Profile:\n        this.redirectToProfile();\n        break;\n      case LoginActions.Register:\n        this.redirectToRegister();\n        break;\n      default:\n        throw new Error(`Invalid action '${action}'`);\n    }\n  }\n\n  private async login(returnUrl: string): Promise {\n    const state: INavigationState = { returnUrl };\n    const result = await this.authorizeService.signIn(state);\n    this.message.next(undefined);\n    switch (result.status) {\n      case AuthenticationResultStatus.Redirect:\n        break;\n      case AuthenticationResultStatus.Success:\n        await this.navigateToReturnUrl(returnUrl);\n        break;\n      case AuthenticationResultStatus.Fail:\n        await this.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\n          queryParams: { [QueryParameterNames.Message]: result.message },\n        });\n        break;\n      default:\n        throw new Error(`Invalid status result ${(result as any).status}.`);\n    }\n  }\n\n  private async processLoginCallback(): Promise {\n    const url = window.location.href;\n    const result = await this.authorizeService.completeSignIn(url);\n    switch (result.status) {\n      case AuthenticationResultStatus.Redirect:\n        // There should not be any redirects as completeSignIn never redirects.\n        throw new Error('Should not redirect.');\n      case AuthenticationResultStatus.Success:\n        await this.navigateToReturnUrl(this.getReturnUrl(result.state));\n        break;\n      case AuthenticationResultStatus.Fail:\n        this.message.next(result.message);\n        break;\n    }\n  }\n\n  private redirectToRegister(): any {\n    this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${ReturnUrlType}=?client_id=${ApplicationName}`);\n  }\n\n  private redirectToProfile(): void {\n    this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityManagePath}?${ReturnUrlType}=?client_id=${ApplicationName}`);\n  }\n\n  private async navigateToReturnUrl(returnUrl: string) {\n    // It's important that we do a replace here so that we remove the callback uri with the\n    // fragment containing the tokens from the browser history.\n    await this.router.navigateByUrl(returnUrl, {\n      replaceUrl: true,\n    });\n  }\n\n  private getReturnUrl(state?: INavigationState): string {\n    const fromQuery = (this.activatedRoute.snapshot.queryParams as INavigationState).returnUrl;\n    // If the url is comming from the query string, check that is either\n    // a relative url or an absolute url\n    if (fromQuery && !(fromQuery.startsWith(`${window.location.origin}/`) || /\\/[^\\/].*/.test(fromQuery))) {\n      // This is an extra check to prevent open redirects.\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\n    }\n    return (state && state.returnUrl) || fromQuery || ApplicationPaths.DefaultLoginRedirectPath;\n  }\n\n  private redirectToApiAuthorizationPath(apiAuthorizationPath: string) {\n    // It's important that we do a replace here so that when the user hits the back arrow on the\n    // browser they get sent back to where it was on the app instead of to an endpoint on this\n    // component.\n    window.location.replace(apiAuthorizationPath);\n  }\n}\n\ninterface INavigationState {\n  [ReturnUrlType]: string;\n}\n\n    \n\n    \n        {{ message | async }}\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ message | async }}'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginMenuComponent.html":{"url":"components/LoginMenuComponent.html","title":"component - LoginMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/login-menu/login-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-menu\n            \n\n            \n                styleUrls\n                ./login-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizeService: AuthorizeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/login-menu/login-menu.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizeService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login-menu/login-menu.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/login-menu/login-menu.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/login-menu/login-menu.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { AuthorizeService } from '../../services';\n\n@Component({\n  selector: 'app-login-menu',\n  templateUrl: './login-menu.component.html',\n  styleUrls: ['./login-menu.component.scss'],\n})\nexport class LoginMenuComponent implements OnInit {\n  public isAuthenticated: Observable;\n  public userName: Observable;\n\n  constructor(private authorizeService: AuthorizeService) {}\n\n  ngOnInit() {\n    this.isAuthenticated = this.authorizeService.isAuthenticated();\n    this.userName = this.authorizeService.getUser().pipe(map(u => u && u.name));\n  }\n}\n\n    \n\n    \n        \n  \n    {{ userName | async }}\n  \n  \n    Logout\n  \n\n\n  \n    Register\n  \n  \n    Login\n  \n\n\n    \n\n    \n                \n                    ./login-menu.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ userName | async }}        Logout        Register        Login  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getReturnUrl\n                            \n                            \n                                    Private\n                                    Async\n                                logout\n                            \n                            \n                                    Private\n                                    Async\n                                navigateToReturnUrl\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                processLogoutCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizeService: AuthorizeService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/logout/logout.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizeService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getReturnUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReturnUrl(state?: INavigationState)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/logout/logout.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                INavigationState\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(returnUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/logout/logout.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            navigateToReturnUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToReturnUrl(returnUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/logout/logout.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/logout/logout.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            processLogoutCallback\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processLogoutCallback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/logout/logout.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/logout/logout.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { AuthenticationResultStatus, AuthorizeService } from '../../services';\nimport { LogoutActions, ApplicationPaths, ReturnUrlType } from '../../constants';\n\n// The main responsibility of this component is to handle the user's logout process.\n// This is the starting point for the logout process, which is usually initiated when a\n// user clicks on the logout button on the LoginMenu component.\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css'],\n})\nexport class LogoutComponent implements OnInit {\n  public message = new BehaviorSubject(null);\n\n  constructor(private authorizeService: AuthorizeService, private activatedRoute: ActivatedRoute, private router: Router) {}\n\n  async ngOnInit() {\n    const action = this.activatedRoute.snapshot.url[1];\n    switch (action.path) {\n      case LogoutActions.Logout:\n        if (!!window.history.state.local) {\n          await this.logout(this.getReturnUrl());\n        } else {\n          // This prevents regular links to /authentication/logout from triggering a logout\n          this.message.next('The logout was not initiated from within the page.');\n        }\n\n        break;\n      case LogoutActions.LogoutCallback:\n        await this.processLogoutCallback();\n        break;\n      case LogoutActions.LoggedOut:\n        this.message.next('You have successfully logged out!');\n        break;\n      default:\n        throw new Error(`Invalid action '${action}'`);\n    }\n  }\n\n  private async logout(returnUrl: string): Promise {\n    const state: INavigationState = { returnUrl };\n    const isAuthenticated = await this.authorizeService\n      .isAuthenticated()\n      .pipe(take(1))\n      .toPromise();\n    if (isAuthenticated) {\n      const result = await this.authorizeService.signOut(state);\n      switch (result.status) {\n        case AuthenticationResultStatus.Redirect:\n          break;\n        case AuthenticationResultStatus.Success:\n          await this.navigateToReturnUrl(returnUrl);\n          break;\n        case AuthenticationResultStatus.Fail:\n          this.message.next(result.message);\n          break;\n        default:\n          throw new Error('Invalid authentication result status.');\n      }\n    } else {\n      this.message.next('You have successfully logged out!');\n    }\n  }\n\n  private async processLogoutCallback(): Promise {\n    const result = await this.authorizeService.completeSignOut(window.location.href);\n    switch (result.status) {\n      case AuthenticationResultStatus.Redirect:\n        // There should not be any redirects as the only time completeAuthentication finishes\n        // is when we are doing a redirect sign in flow.\n        throw new Error('Should not redirect.');\n      case AuthenticationResultStatus.Success:\n        await this.navigateToReturnUrl(this.getReturnUrl(result.state));\n        break;\n      case AuthenticationResultStatus.Fail:\n        this.message.next(result.message);\n        break;\n      default:\n        throw new Error('Invalid authentication result status.');\n    }\n  }\n\n  private async navigateToReturnUrl(returnUrl: string) {\n    await this.router.navigateByUrl(returnUrl, {\n      replaceUrl: true,\n    });\n  }\n\n  private getReturnUrl(state?: INavigationState): string {\n    const fromQuery = (this.activatedRoute.snapshot.queryParams as INavigationState).returnUrl;\n    // If the url is coming from the query string, check that is either\n    // a relative url or an absolute url\n    if (fromQuery && !(fromQuery.startsWith(`${window.location.origin}/`) || /\\/[^\\/].*/.test(fromQuery))) {\n      // This is an extra check to prevent open redirects.\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\n    }\n    return (state && state.returnUrl) || fromQuery || ApplicationPaths.LoggedOut;\n  }\n}\n\ninterface INavigationState {\n  [ReturnUrlType]: string;\n}\n\n    \n\n    \n        \n  {{ message | async }}\n\n\n    \n\n    \n                \n                    ./logout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ message | async }}'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockAppService.html":{"url":"classes/MockAppService.html","title":"class - MockAppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockAppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            __mocks__/MockAppService.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appData\n                    \n                \n\n                \n                    \n                        getappData()\n                    \n                \n                            \n                                \n                                    Defined in __mocks__/MockAppService.ts:2\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class MockAppService {\n  public get appData(): IApplicationConfig {\n    return {\n      content: {},\n      cultures: [{}],\n      cookieConsent: {},\n      loginProviders: {}\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockAuthService.html":{"url":"classes/MockAuthService.html","title":"class - MockAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            __mocks__/MockAuthService.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MockAuthService { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/modal/modal.component.ts\n\n\n    \n        Description\n    \n    \n        The component displayed in the confirmation modal opened by the ModalService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-modal-component\n            \n\n            \n                styleUrls\n                modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                no\n                            \n                            \n                                yes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: ModalStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/modal/modal.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        ModalStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            no\n                        \n                        \n                    \n                \n            \n            \n                \nno()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modal/modal.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            yes\n                        \n                        \n                    \n                \n            \n            \n                \nyes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modal/modal.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modal/modal.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalStateService } from '../../services';\nimport { ModalOptions } from '../../models';\n\n/**\n * The component displayed in the confirmation modal opened by the ModalService.\n */\n@Component({\n  selector: 'appc-modal-component',\n  styleUrls: ['modal.component.scss'],\n  templateUrl: './modal.component.html',\n})\nexport class ModalComponent {\n  options: ModalOptions;\n\n  constructor(private state: ModalStateService) {\n    this.options = state.options;\n  }\n\n  yes() {\n    this.state.modal.close('confirmed');\n  }\n\n  no() {\n    this.state.modal.dismiss('not confirmed');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ options.title }}\n  \n  \n    &times;\n  \n\n\n\n  \n\n  \n    \n  \n\n\n\n  \n    {{ options.cancelLabel || 'Cancel' }}\n  \n  \n    {{ options.okLabel || 'Save' }}\n  \n\n\n    \n\n    \n                \n                    modal.component.scss\n                \n                .modal-body {\n  /* Restrict Modal width to 90% */\n  overflow-x: auto !important;\n}\n\n.modal-body ::ng-deep .list-group {\n  height: 60vh;\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ options.title }}        ×                  {{ options.cancelLabel || \\'Cancel\\' }}        {{ options.okLabel || \\'Save\\' }}  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalOptions.html":{"url":"interfaces/ModalOptions.html","title":"interface - ModalOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/modal.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bodyClass\n                                \n                                \n                                            Optional\n                                        cancelLabel\n                                \n                                \n                                            Optional\n                                        component\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideCancel\n                                \n                                \n                                            Optional\n                                        hideSubmit\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        okLabel\n                                \n                                \n                                            Optional\n                                        showButtons\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        template\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bodyClass\n                                    \n                                \n                                \n                                    \n                                        bodyClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cancelLabel\n                                    \n                                \n                                \n                                    \n                                        cancelLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideCancel\n                                    \n                                \n                                \n                                    \n                                        hideCancel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideSubmit\n                                    \n                                \n                                \n                                    \n                                        hideSubmit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        okLabel\n                                    \n                                \n                                \n                                    \n                                        okLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showButtons\n                                    \n                                \n                                \n                                    \n                                        showButtons:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ModalOptions {\n  title: string;\n  message?: string;\n  showButtons?: boolean;\n  template?: any;\n  size?: string;\n  component?: any;\n  data?: any;\n  okLabel?: string;\n  cancelLabel?: string;\n  hideCancel?: boolean;\n  hideSubmit?: boolean;\n  bodyClass?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalService.html":{"url":"injectables/ModalService.html","title":"injectable - ModalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/modal.service.ts\n        \n\n            \n                Description\n            \n            \n                A confirmation service, allowing to open a confirmation modal from anywhere and get back a promise.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismiss\n                            \n                            \n                                open\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasOpenModals\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal, state: ModalStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/modal.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        ModalStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(data?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/modal.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss(data?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/modal.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(options: ModalOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/modal.service.ts:22\n                \n            \n\n\n            \n                \n                    Opens a confirmation modal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ModalOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the options for the modal (title and message)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a promise that is fulfilled when the user chooses to confirm, and rejected when\nthe user chooses not to confirm, or closes the modal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(options: ModalOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/modal.service.ts:50\n                \n            \n\n\n            \n                \n                    Opens a warning modal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ModalOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the options for the modal (title and message)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a promise that is fulfilled when the user chooses to confirm, and rejected when\nthe user chooses not to confirm, or closes the modal\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasOpenModals\n                    \n                \n\n                \n                    \n                        gethasOpenModals()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/modal.service.ts:75\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ModalStateService } from './modal-state.service';\nimport { ModalOptions } from '../models';\n\n/**\n * A confirmation service, allowing to open a confirmation modal from anywhere and get back a promise.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  constructor(private modalService: NgbModal, private state: ModalStateService) {}\n\n  /**\n   * Opens a confirmation modal\n   * @param options the options for the modal (title and message)\n   * @returns {Promise} a promise that is fulfilled when the user chooses to confirm, and rejected when\n   * the user chooses not to confirm, or closes the modal\n   */\n  open(options: ModalOptions): Promise {\n    this.state.options = options;\n    const size: any = options.size ? options.size : this.state.options.template || this.state.options.component ? 'lg' : 'sm';\n    this.state.modal = this.modalService.open(this.state.options.component || this.state.template, {\n      centered: true,\n      windowClass: 'modal-holder',\n      size,\n      // Whether a backdrop element should be created for a given modal (true by default).\n      // Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n      // backdrop: options.sticky ? \"static\" : true,\n      // keyboard: options.sticky ? false : true\n    });\n\n    // Pass additional data to modal component as `data` input property\n    // This will be available as @Input from within component that is passed as content of the modal.\n    if (this.state.options.data) {\n      this.state.modal.componentInstance.data = this.state.options.data;\n    }\n\n    return this.state.modal.result;\n  }\n\n  /**\n   * Opens a warning modal\n   * @param options the options for the modal (title and message)\n   * @returns {Promise} a promise that is fulfilled when the user chooses to confirm, and rejected when\n   * the user chooses not to confirm, or closes the modal\n   */\n  warn(options: ModalOptions): Promise {\n    options.showButtons = false;\n    options.okLabel = options.okLabel || 'Ok';\n    options.cancelLabel = options.cancelLabel || 'Close';\n    this.state.options = options;\n    this.state.modal = this.modalService.open(this.state.template, {\n      centered: true,\n      size: this.state.options.template ? 'lg' : 'sm',\n      // Whether a backdrop element should be created for a given modal (true by default).\n      // Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n      // backdrop: options.sticky ? \"static\" : true,\n      // keyboard: options.sticky ? false : true\n    });\n\n    return this.state.modal.result;\n  }\n\n  close(data?: any) {\n    this.state.modal.close(data);\n  }\n\n  dismiss(data?: any) {\n    this.state.modal.dismiss(data);\n  }\n\n  get hasOpenModals(): boolean {\n    return this.modalService.hasOpenModals();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalStateService.html":{"url":"injectables/ModalStateService.html","title":"injectable - ModalStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/modal-state.service.ts\n        \n\n            \n                Description\n            \n            \n                An internal service allowing to access, from the confirm modal component, the options and the modal reference.\nIt also allows registering the TemplateRef containing the confirm modal component.\nIt must be declared in the providers of the NgModule, but is not supposed to be used in application code\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modal\n                            \n                            \n                                options\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgbModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/modal-state.service.ts:24\n                            \n                        \n\n                \n                    \n                        The last opened confirmation modal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/modal-state.service.ts:19\n                            \n                        \n\n                \n                    \n                        The last options passed ConfirmService.confirm()\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/modal-state.service.ts:29\n                            \n                        \n\n                \n                    \n                        The template containing the confirmation modal component\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ModalOptions } from '../models';\n\n/**\n * An internal service allowing to access, from the confirm modal component, the options and the modal reference.\n * It also allows registering the TemplateRef containing the confirm modal component.\n *\n * It must be declared in the providers of the NgModule, but is not supposed to be used in application code\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalStateService {\n  /**\n   * The last options passed ConfirmService.confirm()\n   */\n  options: ModalOptions;\n\n  /**\n   * The last opened confirmation modal\n   */\n  modal: NgbModalRef;\n\n  /**\n   * The template containing the confirmation modal component\n   */\n  template: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ModalTemplateDirective.html":{"url":"directives/ModalTemplateDirective.html","title":"directive - ModalTemplateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ModalTemplateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/modal/modal-template.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive allowing to get a reference to the template containing the modal component,\nand to store it into the internal modal state service. Somewhere in the view, there must be\n```\n\n\n\n\n\n\nin order to register the modal template to the internal modal state\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ng-template[modal]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modalTemplate: TemplateRef, state: ModalStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/modal/modal-template.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalTemplate\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        ModalStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\nimport { ModalStateService } from '../../services';\n\n/**\n * Directive allowing to get a reference to the template containing the modal component,\n * and to store it into the internal modal state service. Somewhere in the view, there must be\n *\n * ```\n * \n *   \n * \n * ```\n *\n * in order to register the modal template to the internal modal state\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'ng-template[modal]',\n})\nexport class ModalTemplateDirective {\n  constructor(modalTemplate: TemplateRef, state: ModalStateService) {\n    state.template = modalTemplate;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoveShapeComponent.html":{"url":"components/MoveShapeComponent.html","title":"component - MoveShapeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MoveShapeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/+examples/examples/signalr/move-shape/move-shape.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-move-shape\n            \n\n            \n                styleUrls\n                ./move-shape.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./move-shape.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                    Private\n                                hub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/+examples/examples/signalr/move-shape/move-shape.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/signalr/move-shape/move-shape.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('draggable', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/move-shape/move-shape.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HubConnection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/signalr/move-shape/move-shape.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\nimport { HubConnectionBuilder, HubConnection } from '@microsoft/signalr';\nimport { fromEvent } from 'rxjs';\nimport { map, takeUntil, flatMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'appc-move-shape',\n  templateUrl: './move-shape.component.html',\n  styleUrls: ['./move-shape.component.scss'],\n})\nexport class MoveShapeComponent implements AfterViewInit {\n  @ViewChild('draggable', { static: true }) element: ElementRef;\n  private hub: HubConnection;\n  constructor(@Inject('BASE_URL') private baseUrl: string) {}\n\n  ngAfterViewInit() {\n    const target = this.element.nativeElement;\n    this.hub = new HubConnectionBuilder().withUrl(`${this.baseUrl}shapeHub`).build();\n    this.hub.on('shapeMoved', (x, y) => {\n      target.style.left = x;\n      target.style.top = y;\n    });\n\n    const mouseup = fromEvent(target, 'mouseup');\n    const mousemove = fromEvent(document, 'mousemove');\n    const mousedown = fromEvent(target, 'mousedown');\n\n    const mousedrag = mousedown.pipe(\n      flatMap((md: any) => {\n        const startX = md.clientX + window.scrollX;\n        const startY = md.clientY + window.scrollY;\n        const startLeft = parseInt(md.target.style.left, 10) || 0;\n        const startTop = parseInt(md.target.style.top, 10) || 0;\n\n        return mousemove.pipe(\n          map((mm: any) => {\n            mm.preventDefault();\n\n            return {\n              left: startLeft + mm.clientX - startX,\n              top: startTop + mm.clientY - startY,\n            };\n          }),\n          takeUntil(mouseup),\n        );\n      }),\n    );\n\n    this.hub\n      .start()\n      .then(() => {\n        mousedrag.subscribe(pos => {\n          target.style.top = pos.top + 'px';\n          target.style.left = pos.left + 'px';\n          this.hub.invoke('MoveShape', pos.left, pos.top || 0);\n        });\n      })\n      .catch(err => console.log('Error while establishing connection: ' + err));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./move-shape.component.scss\n                \n                .draggable {\n    position: relative;\n    width: 150px;\n    height: 150px;\n    background: black;\n    cursor: pointer;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'MoveShapeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavItem.html":{"url":"interfaces/NavItem.html","title":"interface - NavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/nav.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        handler\n                                \n                                \n                                            Optional\n                                        hide\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        navItemTemplate\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hide\n                                    \n                                \n                                \n                                    \n                                        hide:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navItemTemplate\n                                    \n                                \n                                \n                                    \n                                        navItemTemplate:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\nexport interface PageNav {\n  leftNav: NavItem[];\n  rightNav: NavItem[];\n}\n\nexport interface NavItem {\n  text?: string;\n  icon?: string;\n  hide?: boolean;\n  disabled?: boolean;\n  link?: string;\n  handler?: Function;\n  navItemTemplate?: TemplateRef;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageHeadingComponent.html":{"url":"components/PageHeadingComponent.html","title":"component - PageHeadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageHeadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/page-heading/page-heading.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-heading\n            \n\n            \n                styleUrls\n                ./page-heading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-heading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/page-heading/page-heading.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/page-heading/page-heading.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-heading',\n  templateUrl: './page-heading.component.html',\n  styleUrls: ['./page-heading.component.scss'],\n})\nexport class PageHeadingComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./page-heading.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageHeadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageNav.html":{"url":"interfaces/PageNav.html","title":"interface - PageNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/nav.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        leftNav\n                                \n                                \n                                        rightNav\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        leftNav\n                                    \n                                \n                                \n                                    \n                                        leftNav:         NavItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NavItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightNav\n                                    \n                                \n                                \n                                    \n                                        rightNav:         NavItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NavItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\nexport interface PageNav {\n  leftNav: NavItem[];\n  rightNav: NavItem[];\n}\n\nexport interface NavItem {\n  text?: string;\n  icon?: string;\n  hide?: boolean;\n  disabled?: boolean;\n  link?: string;\n  handler?: Function;\n  navItemTemplate?: TemplateRef;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyComponent.html":{"url":"components/PrivacyComponent.html","title":"component - PrivacyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PrivacyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/privacy/privacy.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-privacy-component\n            \n\n\n\n\n            \n                templateUrl\n                ./privacy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'appc-privacy-component',\n  templateUrl: './privacy.component.html'\n})\n\nexport class PrivacyComponent { }\n\n    \n\n    \n        \n  \n    Privacy policy\n    Content here...\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Privacy policy    Content here...  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductsComponent.html":{"url":"components/ProductsComponent.html","title":"component - ProductsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProductsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/+examples/examples/shop/products/products.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-products\n            \n\n            \n                styleUrls\n                ./products.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./products.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                products\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProduct\n                            \n                            \n                                editProduct\n                            \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productsClient: ProductsClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/+examples/examples/shop/products/products.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsClient\n                                                  \n                                                        \n                                                                        ProductsClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProduct\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProduct(product: ProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/shop/products/products.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editProduct\n                        \n                        \n                    \n                \n            \n            \n                \neditProduct(product: ProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/shop/products/products.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/shop/products/products.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/+examples/examples/shop/products/products.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridColumn[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      field: 'productId',\n      type: GridFieldType.Number,\n      filter: true,\n      sortable: true,\n      width: 100,\n    },\n    {\n      field: 'productName',\n      filter: true,\n      sortable: true,\n      width: 180,\n    },\n    {\n      field: 'unitPrice',\n      type: GridFieldType.Number,\n      filter: true,\n      sortable: true,\n      width: 120,\n    },\n    {\n      field: 'supplierCompanyName',\n      filter: true,\n      sortable: true,\n    },\n    {\n      field: 'categoryName',\n      filter: true,\n      sortable: true,\n      width: 160,\n    },\n    {\n      field: 'discontinued',\n      type: GridFieldType.Boolean,\n      filter: true,\n      sortable: true,\n      width: 120,\n    },\n    {\n      type: GridFieldType.ActionButtons,\n      cellRendererParams: {\n        primaryClicked: this.editProduct.bind(this),\n        secondaryClicked: this.deleteProduct.bind(this),\n        primaryLabel: 'Edit Product',\n        secondaryLabel: 'Delete Product',\n      },\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/shop/products/products.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/+examples/examples/shop/products/products.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ProductsClient, ProductDto } from '@app/api-client';\nimport { GridColumn, GridFieldType } from '@app/shared';\nimport { LargeTextCellEditor } from 'ag-grid-community';\n\n@Component({\n  selector: 'appc-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\nexport class ProductsComponent implements OnInit {\n  constructor(private productsClient: ProductsClient) {}\n  products: ProductDto[];\n  columns: GridColumn[] = [\n    {\n      field: 'productId',\n      type: GridFieldType.Number,\n      filter: true,\n      sortable: true,\n      width: 100,\n    },\n    {\n      field: 'productName',\n      filter: true,\n      sortable: true,\n      width: 180,\n    },\n    {\n      field: 'unitPrice',\n      type: GridFieldType.Number,\n      filter: true,\n      sortable: true,\n      width: 120,\n    },\n    {\n      field: 'supplierCompanyName',\n      filter: true,\n      sortable: true,\n    },\n    {\n      field: 'categoryName',\n      filter: true,\n      sortable: true,\n      width: 160,\n    },\n    {\n      field: 'discontinued',\n      type: GridFieldType.Boolean,\n      filter: true,\n      sortable: true,\n      width: 120,\n    },\n    {\n      type: GridFieldType.ActionButtons,\n      cellRendererParams: {\n        primaryClicked: this.editProduct.bind(this),\n        secondaryClicked: this.deleteProduct.bind(this),\n        primaryLabel: 'Edit Product',\n        secondaryLabel: 'Delete Product',\n      },\n    },\n  ];\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {\n    this.productsClient.getAll().subscribe(res => {\n      this.products = res.products;\n    });\n  }\n  editProduct(product: ProductDto) {\n    console.log(product);\n\n    // this.productsClient.delete(product.productId).subscribe(this.getData);\n  }\n\n  deleteProduct(product: ProductDto) {\n    this.productsClient.delete(product.productId).subscribe(this.getData);\n  }\n}\n\n    \n\n    \n        Products \n\n    \n\n    \n                \n                    ./products.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Products '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProductsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedirectAuthenticationResult.html":{"url":"interfaces/RedirectAuthenticationResult.html","title":"interface - RedirectAuthenticationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RedirectAuthenticationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/authorize.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         AuthenticationResultStatus.Redirect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticationResultStatus.Redirect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User, UserManager, WebStorageStateStore } from 'oidc-client';\nimport { BehaviorSubject, concat, from, Observable } from 'rxjs';\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\nimport { ApplicationPaths, ApplicationName } from '../constants';\n\nexport type IAuthenticationResult = SuccessAuthenticationResult | FailureAuthenticationResult | RedirectAuthenticationResult;\n\nexport interface SuccessAuthenticationResult {\n  status: AuthenticationResultStatus.Success;\n  state: any;\n}\n\nexport interface FailureAuthenticationResult {\n  status: AuthenticationResultStatus.Fail;\n  message: string;\n}\n\nexport interface RedirectAuthenticationResult {\n  status: AuthenticationResultStatus.Redirect;\n}\n\nexport enum AuthenticationResultStatus {\n  Success,\n  Redirect,\n  Fail,\n}\n\nexport interface IUser extends User {\n  name: string;\n  role: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizeService {\n  // By default pop ups are disabled because they don't work properly on Edge.\n  // If you want to enable pop up authentication simply set this flag to false.\n  private _user: IUser;\n  private popUpDisabled = true;\n  private userManager: UserManager;\n  private userSubject: BehaviorSubject = new BehaviorSubject(null);\n\n  get isLoggedIn(): boolean {\n    return !!this.user;\n  }\n\n  get user(): IUser {\n    return this._user;\n  }\n\n  public hasRole(role: string): boolean {\n    return this._user && this._user.role && this._user.role.indexOf(role) > -1;\n  }\n\n  public isAuthenticated(): Observable {\n    return this.getUser().pipe(map(u => !!u));\n  }\n\n  public getUser(): Observable {\n    return concat(\n      this.userSubject.pipe(\n        take(1),\n        filter(u => !!u),\n      ),\n      this.getUserFromStorage().pipe(\n        filter(u => !!u),\n        tap(u => {\n          this._user = u;\n          this.userSubject.next(u);\n        }),\n      ),\n      this.userSubject.asObservable(),\n    );\n  }\n\n  public getAccessToken(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => from(this.userManager.getUser())),\n      map(user => user && user.access_token),\n    );\n  }\n\n  // We try to authenticate the user in three different ways:\n  // 1) We try to see if we can authenticate the user silently. This happens\n  //    when the user is already logged in on the IdP and is done using a hidden iframe\n  //    on the client.\n  // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\n  //    Pop-Up blocker or the user has disabled PopUps.\n  // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\n  //    redirect flow.\n  public async signIn(state: any): Promise {\n    await this.ensureUserManagerInitialized();\n    let user: User = null;\n    try {\n      user = await this.userManager.signinSilent(this.createArguments());\n      this.userSubject.next(user.profile as any);\n      return this.success(state);\n    } catch (silentError) {\n      // User might not be authenticated, fallback to popup authentication\n      console.log('Silent authentication error: ', silentError);\n\n      try {\n        if (this.popUpDisabled) {\n          throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n        }\n        user = await this.userManager.signinPopup(this.createArguments());\n        this.userSubject.next(user.profile as any);\n        return this.success(state);\n      } catch (popupError) {\n        if (popupError.message === 'Popup window closed') {\n          // The user explicitly cancelled the login action by closing an opened popup.\n          return this.error('The user closed the window.');\n        } else if (!this.popUpDisabled) {\n          console.log('Popup authentication error: ', popupError);\n        }\n\n        // PopUps might be blocked by the user, fallback to redirect\n        try {\n          await this.userManager.signinRedirect(this.createArguments(state));\n          return this.redirect();\n        } catch (redirectError) {\n          console.log('Redirect authentication error: ', redirectError);\n          return this.error(redirectError);\n        }\n      }\n    }\n  }\n\n  public async completeSignIn(url: string): Promise {\n    try {\n      await this.ensureUserManagerInitialized();\n      const user = await this.userManager.signinCallback(url);\n      this.userSubject.next(user && (user.profile as any));\n      return this.success(user && user.state);\n    } catch (error) {\n      console.log('There was an error signing in: ', error);\n      return this.error('There was an error signing in.');\n    }\n  }\n\n  public async signOut(state: any): Promise {\n    try {\n      if (this.popUpDisabled) {\n        throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n      }\n\n      await this.ensureUserManagerInitialized();\n      await this.userManager.signoutPopup(this.createArguments());\n      this.userSubject.next(null);\n      return this.success(state);\n    } catch (popupSignOutError) {\n      console.log('Popup signout error: ', popupSignOutError);\n      try {\n        await this.userManager.signoutRedirect(this.createArguments(state));\n        return this.redirect();\n      } catch (redirectSignOutError) {\n        console.log('Redirect signout error: ', popupSignOutError);\n        return this.error(redirectSignOutError);\n      }\n    }\n  }\n\n  public async completeSignOut(url: string): Promise {\n    await this.ensureUserManagerInitialized();\n    try {\n      const signoutResponse = await this.userManager.signoutCallback(url);\n      this.userSubject.next(null);\n      return this.success(signoutResponse && signoutResponse.state.data);\n    } catch (error) {\n      console.log(`There was an error trying to log out '${error}'.`);\n      return this.error(error);\n    }\n  }\n\n  private createArguments(state?: any): any {\n    return { useReplaceToNavigate: true, data: state };\n  }\n\n  private error(message: string): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Fail, message };\n  }\n\n  private success(state: any): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Success, state };\n  }\n\n  private redirect(): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Redirect };\n  }\n\n  private async ensureUserManagerInitialized(): Promise {\n    if (this.userManager !== undefined) {\n      return;\n    }\n    const response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\n    if (!response.ok) {\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\n    }\n\n    const settings: any = await response.json();\n    settings.automaticSilentRenew = true;\n    settings.includeIdTokenInSilentRenew = true;\n    this.userManager = new UserManager(settings);\n\n    this.userManager.events.addUserSignedOut(async () => {\n      await this.userManager.removeUser();\n      this.userSubject.next(null);\n    });\n  }\n\n  private getUserFromStorage(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => this.userManager.getUser()),\n      map(u => u && (u.profile as any)),\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordToken.html":{"url":"interfaces/ResetPasswordToken.html","title":"interface - ResetPasswordToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResetPasswordToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ConfirmPassword\n                                \n                                \n                                        NewPassword\n                                \n                                \n                                        Token\n                                \n                                \n                                        UserId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ConfirmPassword\n                                    \n                                \n                                \n                                    \n                                        ConfirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NewPassword\n                                    \n                                \n                                \n                                    \n                                        NewPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Token\n                                    \n                                \n                                \n                                    \n                                        Token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                    \n                                \n                                \n                                    \n                                        UserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordToken {\n  UserId: string;\n  Token: string;\n  NewPassword: string;\n  ConfirmPassword: string;\n}\n\nexport interface ForgotPassword {\n  email: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafePipe.html":{"url":"pipes/SafePipe.html","title":"pipe - SafePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/safe.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(url)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/safe.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safe' })\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInputComponent.html":{"url":"components/SearchInputComponent.html","title":"component - SearchInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/search-input/search-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-search-input\n            \n\n            \n                styleUrls\n                ./search-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debounceTime\n                            \n                            \n                                formatter\n                            \n                            \n                                listSize\n                            \n                            \n                                search\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dynamicAction\n                            \n                            \n                                id\n                            \n                            \n                                initialData\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                model\n                            \n                            \n                                placeholder\n                            \n                            \n                                staticAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectItem\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/search-input/search-input.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dynamicAction\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialData\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        staticAction\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/search-input/search-input.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/search-input/search-input.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectItem\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectItem(ngbItem: NgbTypeaheadSelectItemEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/search-input/search-input.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ngbItem\n                                    \n                                            NgbTypeaheadSelectItemEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debounceTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/search-input/search-input.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { debounceTime, distinctUntilChanged, tap, switchMap, catchError, map } from 'rxjs/operators';\nimport { Observable, of, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'appc-search-input',\n  styleUrls: ['./search-input.component.scss'],\n  templateUrl: './search-input.component.html',\n})\nexport class SearchInputComponent implements OnInit, OnDestroy {\n  @Input() id: string;\n  @Input() key: string;\n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() model = '';\n  @Input() initialData: any[];\n  @Input() staticAction: Function;\n  @Input() dynamicAction: Function;\n  @Output() selectItem = new EventEmitter();\n  subscription: Subscription;\n  debounceTime = 300;\n  // https://github.com/ng-bootstrap/ng-bootstrap/issues/1119\n  listSize = 10;\n  formatter = (result: string) => result[this.key] || this.model;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.model) {\n      this.subscription = this.search(of(this.model)).subscribe();\n    }\n  }\n\n  search = (text$: Observable) => {\n    const textObservable = text$.pipe(debounceTime(this.debounceTime), distinctUntilChanged());\n\n    if (this.staticAction) {\n      return textObservable.pipe(\n        map(term => {\n          return this.staticAction(term).slice(0, this.listSize);\n        }),\n      );\n    } else if (this.dynamicAction) {\n      return textObservable.pipe(\n        switchMap(term => {\n          return this.dynamicAction(term).pipe(\n            map(x => (x).slice(0, this.listSize)),\n            catchError(() => {\n              return of([]);\n            }),\n          );\n        }),\n      );\n    }\n\n    throw Error('Provide either \"staticAction\" OR \"dynamicAction\" to perform search');\n  };\n\n  onSelectItem(ngbItem: NgbTypeaheadSelectItemEvent) {\n    this.selectItem.next(ngbItem.item);\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ label || 'Search' }}\n  \n\n\n    \n\n    \n                \n                    ./search-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label || \\'Search\\' }}  '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAccordionComponent\n\nAccordionComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAccordionComponent->SharedModule\n\n\n\n\n\nActionButtonComponent\n\nActionButtonComponent\n\nSharedModule -->\n\nActionButtonComponent->SharedModule\n\n\n\n\n\nActionButtonsComponent\n\nActionButtonsComponent\n\nSharedModule -->\n\nActionButtonsComponent->SharedModule\n\n\n\n\n\nAppFileInputDirective\n\nAppFileInputDirective\n\nSharedModule -->\n\nAppFileInputDirective->SharedModule\n\n\n\n\n\nAppFormComponent\n\nAppFormComponent\n\nSharedModule -->\n\nAppFormComponent->SharedModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSharedModule -->\n\nCardComponent->SharedModule\n\n\n\n\n\nCardDeckComponent\n\nCardDeckComponent\n\nSharedModule -->\n\nCardDeckComponent->SharedModule\n\n\n\n\n\nDateFilterComponent\n\nDateFilterComponent\n\nSharedModule -->\n\nDateFilterComponent->SharedModule\n\n\n\n\n\nDropdownFloatingFilterComponent\n\nDropdownFloatingFilterComponent\n\nSharedModule -->\n\nDropdownFloatingFilterComponent->SharedModule\n\n\n\n\n\nFieldColorValidationDirective\n\nFieldColorValidationDirective\n\nSharedModule -->\n\nFieldColorValidationDirective->SharedModule\n\n\n\n\n\nFormButtonComponent\n\nFormButtonComponent\n\nSharedModule -->\n\nFormButtonComponent->SharedModule\n\n\n\n\n\nFormButtonGroupComponent\n\nFormButtonGroupComponent\n\nSharedModule -->\n\nFormButtonGroupComponent->SharedModule\n\n\n\n\n\nFormCheckboxComponent\n\nFormCheckboxComponent\n\nSharedModule -->\n\nFormCheckboxComponent->SharedModule\n\n\n\n\n\nFormCheckboxListComponent\n\nFormCheckboxListComponent\n\nSharedModule -->\n\nFormCheckboxListComponent->SharedModule\n\n\n\n\n\nFormDateComponent\n\nFormDateComponent\n\nSharedModule -->\n\nFormDateComponent->SharedModule\n\n\n\n\n\nFormFieldDirective\n\nFormFieldDirective\n\nSharedModule -->\n\nFormFieldDirective->SharedModule\n\n\n\n\n\nFormFieldErrorComponent\n\nFormFieldErrorComponent\n\nSharedModule -->\n\nFormFieldErrorComponent->SharedModule\n\n\n\n\n\nFormFileComponent\n\nFormFileComponent\n\nSharedModule -->\n\nFormFileComponent->SharedModule\n\n\n\n\n\nFormFilePathComponent\n\nFormFilePathComponent\n\nSharedModule -->\n\nFormFilePathComponent->SharedModule\n\n\n\n\n\nFormInputComponent\n\nFormInputComponent\n\nSharedModule -->\n\nFormInputComponent->SharedModule\n\n\n\n\n\nFormInputGroupComponent\n\nFormInputGroupComponent\n\nSharedModule -->\n\nFormInputGroupComponent->SharedModule\n\n\n\n\n\nFormRadioListComponent\n\nFormRadioListComponent\n\nSharedModule -->\n\nFormRadioListComponent->SharedModule\n\n\n\n\n\nFormSelectComponent\n\nFormSelectComponent\n\nSharedModule -->\n\nFormSelectComponent->SharedModule\n\n\n\n\n\nFormTextareaComponent\n\nFormTextareaComponent\n\nSharedModule -->\n\nFormTextareaComponent->SharedModule\n\n\n\n\n\nFormTimeComponent\n\nFormTimeComponent\n\nSharedModule -->\n\nFormTimeComponent->SharedModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nSharedModule -->\n\nGridComponent->SharedModule\n\n\n\n\n\nGroupByPipe\n\nGroupByPipe\n\nSharedModule -->\n\nGroupByPipe->SharedModule\n\n\n\n\n\nImageResizerComponent\n\nImageResizerComponent\n\nSharedModule -->\n\nImageResizerComponent->SharedModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nSharedModule -->\n\nListComponent->SharedModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nSharedModule -->\n\nLoadingComponent->SharedModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nSharedModule -->\n\nLoginComponent->SharedModule\n\n\n\n\n\nLoginMenuComponent\n\nLoginMenuComponent\n\nSharedModule -->\n\nLoginMenuComponent->SharedModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nSharedModule -->\n\nLogoutComponent->SharedModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nSharedModule -->\n\nModalComponent->SharedModule\n\n\n\n\n\nModalTemplateDirective\n\nModalTemplateDirective\n\nSharedModule -->\n\nModalTemplateDirective->SharedModule\n\n\n\n\n\nPageHeadingComponent\n\nPageHeadingComponent\n\nSharedModule -->\n\nPageHeadingComponent->SharedModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nSharedModule -->\n\nSafePipe->SharedModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nSharedModule -->\n\nSearchInputComponent->SharedModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nSharedModule -->\n\nToastComponent->SharedModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nSharedModule -->\n\nToggleSwitchComponent->SharedModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nSharedModule -->\n\nTranslatePipe->SharedModule\n\n\n\n\n\nTypeaheadComponent\n\nTypeaheadComponent\n\nSharedModule -->\n\nTypeaheadComponent->SharedModule\n\n\n\n\n\nUppercasePipe\n\nUppercasePipe\n\nSharedModule -->\n\nUppercasePipe->SharedModule\n\n\n\n\n\nAccordionComponent \n\nAccordionComponent \n\nAccordionComponent  -->\n\nSharedModule->AccordionComponent \n\n\n\n\n\nActionButtonComponent \n\nActionButtonComponent \n\nActionButtonComponent  -->\n\nSharedModule->ActionButtonComponent \n\n\n\n\n\nActionButtonsComponent \n\nActionButtonsComponent \n\nActionButtonsComponent  -->\n\nSharedModule->ActionButtonsComponent \n\n\n\n\n\nAppFileInputDirective \n\nAppFileInputDirective \n\nAppFileInputDirective  -->\n\nSharedModule->AppFileInputDirective \n\n\n\n\n\nAppFormComponent \n\nAppFormComponent \n\nAppFormComponent  -->\n\nSharedModule->AppFormComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSharedModule->CardComponent \n\n\n\n\n\nCardDeckComponent \n\nCardDeckComponent \n\nCardDeckComponent  -->\n\nSharedModule->CardDeckComponent \n\n\n\n\n\nDateFilterComponent \n\nDateFilterComponent \n\nDateFilterComponent  -->\n\nSharedModule->DateFilterComponent \n\n\n\n\n\nDropdownFloatingFilterComponent \n\nDropdownFloatingFilterComponent \n\nDropdownFloatingFilterComponent  -->\n\nSharedModule->DropdownFloatingFilterComponent \n\n\n\n\n\nFieldColorValidationDirective \n\nFieldColorValidationDirective \n\nFieldColorValidationDirective  -->\n\nSharedModule->FieldColorValidationDirective \n\n\n\n\n\nFormButtonComponent \n\nFormButtonComponent \n\nFormButtonComponent  -->\n\nSharedModule->FormButtonComponent \n\n\n\n\n\nFormButtonGroupComponent \n\nFormButtonGroupComponent \n\nFormButtonGroupComponent  -->\n\nSharedModule->FormButtonGroupComponent \n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nSharedModule->FormCheckboxComponent \n\n\n\n\n\nFormCheckboxListComponent \n\nFormCheckboxListComponent \n\nFormCheckboxListComponent  -->\n\nSharedModule->FormCheckboxListComponent \n\n\n\n\n\nFormDateComponent \n\nFormDateComponent \n\nFormDateComponent  -->\n\nSharedModule->FormDateComponent \n\n\n\n\n\nFormFieldDirective \n\nFormFieldDirective \n\nFormFieldDirective  -->\n\nSharedModule->FormFieldDirective \n\n\n\n\n\nFormFieldErrorComponent \n\nFormFieldErrorComponent \n\nFormFieldErrorComponent  -->\n\nSharedModule->FormFieldErrorComponent \n\n\n\n\n\nFormFileComponent \n\nFormFileComponent \n\nFormFileComponent  -->\n\nSharedModule->FormFileComponent \n\n\n\n\n\nFormFilePathComponent \n\nFormFilePathComponent \n\nFormFilePathComponent  -->\n\nSharedModule->FormFilePathComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nSharedModule->FormInputComponent \n\n\n\n\n\nFormInputGroupComponent \n\nFormInputGroupComponent \n\nFormInputGroupComponent  -->\n\nSharedModule->FormInputGroupComponent \n\n\n\n\n\nFormRadioListComponent \n\nFormRadioListComponent \n\nFormRadioListComponent  -->\n\nSharedModule->FormRadioListComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nSharedModule->FormSelectComponent \n\n\n\n\n\nFormTextareaComponent \n\nFormTextareaComponent \n\nFormTextareaComponent  -->\n\nSharedModule->FormTextareaComponent \n\n\n\n\n\nFormTimeComponent \n\nFormTimeComponent \n\nFormTimeComponent  -->\n\nSharedModule->FormTimeComponent \n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nSharedModule->GridComponent \n\n\n\n\n\nGroupByPipe \n\nGroupByPipe \n\nGroupByPipe  -->\n\nSharedModule->GroupByPipe \n\n\n\n\n\nImageResizerComponent \n\nImageResizerComponent \n\nImageResizerComponent  -->\n\nSharedModule->ImageResizerComponent \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nSharedModule->ListComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nSharedModule->LoadingComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nSharedModule->LoginComponent \n\n\n\n\n\nLoginMenuComponent \n\nLoginMenuComponent \n\nLoginMenuComponent  -->\n\nSharedModule->LoginMenuComponent \n\n\n\n\n\nLogoutComponent \n\nLogoutComponent \n\nLogoutComponent  -->\n\nSharedModule->LogoutComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nSharedModule->ModalComponent \n\n\n\n\n\nModalTemplateDirective \n\nModalTemplateDirective \n\nModalTemplateDirective  -->\n\nSharedModule->ModalTemplateDirective \n\n\n\n\n\nPageHeadingComponent \n\nPageHeadingComponent \n\nPageHeadingComponent  -->\n\nSharedModule->PageHeadingComponent \n\n\n\n\n\nSafePipe \n\nSafePipe \n\nSafePipe  -->\n\nSharedModule->SafePipe \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nSharedModule->SearchInputComponent \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nSharedModule->ToastComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nSharedModule->ToggleSwitchComponent \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nSharedModule->TranslatePipe \n\n\n\n\n\nTypeaheadComponent \n\nTypeaheadComponent \n\nTypeaheadComponent  -->\n\nSharedModule->TypeaheadComponent \n\n\n\n\n\nUppercasePipe \n\nUppercasePipe \n\nUppercasePipe  -->\n\nSharedModule->UppercasePipe \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nSharedModule -->\n\nAuthInterceptor->SharedModule\n\n\n\n\n\nFormsService\n\nFormsService\n\nSharedModule -->\n\nFormsService->SharedModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nSharedModule -->\n\nJwtInterceptor->SharedModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nSharedModule -->\n\nLoadingInterceptor->SharedModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nSharedModule -->\n\nTimingInterceptor->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionComponent\n                        \n                        \n                            ActionButtonComponent\n                        \n                        \n                            ActionButtonsComponent\n                        \n                        \n                            AppFileInputDirective\n                        \n                        \n                            AppFormComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDeckComponent\n                        \n                        \n                            DateFilterComponent\n                        \n                        \n                            DropdownFloatingFilterComponent\n                        \n                        \n                            FieldColorValidationDirective\n                        \n                        \n                            FormButtonComponent\n                        \n                        \n                            FormButtonGroupComponent\n                        \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormCheckboxListComponent\n                        \n                        \n                            FormDateComponent\n                        \n                        \n                            FormFieldDirective\n                        \n                        \n                            FormFieldErrorComponent\n                        \n                        \n                            FormFileComponent\n                        \n                        \n                            FormFilePathComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormInputGroupComponent\n                        \n                        \n                            FormRadioListComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            FormTextareaComponent\n                        \n                        \n                            FormTimeComponent\n                        \n                        \n                            GridComponent\n                        \n                        \n                            GroupByPipe\n                        \n                        \n                            ImageResizerComponent\n                        \n                        \n                            ListComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LoginMenuComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            ModalTemplateDirective\n                        \n                        \n                            PageHeadingComponent\n                        \n                        \n                            SafePipe\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                        \n                            TranslatePipe\n                        \n                        \n                            TypeaheadComponent\n                        \n                        \n                            UppercasePipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppFormComponent\n                        \n                        \n                            FormButtonComponent\n                        \n                        \n                            FormButtonGroupComponent\n                        \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormCheckboxListComponent\n                        \n                        \n                            FormDateComponent\n                        \n                        \n                            FormFileComponent\n                        \n                        \n                            FormFilePathComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormInputGroupComponent\n                        \n                        \n                            FormRadioListComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            FormTextareaComponent\n                        \n                        \n                            FormTimeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            FormsService\n                        \n                        \n                            JwtInterceptor\n                        \n                        \n                            LoadingInterceptor\n                        \n                        \n                            TimingInterceptor\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionComponent\n                        \n                        \n                            ActionButtonComponent\n                        \n                        \n                            ActionButtonsComponent\n                        \n                        \n                            AppFileInputDirective\n                        \n                        \n                            AppFormComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDeckComponent\n                        \n                        \n                            DateFilterComponent\n                        \n                        \n                            DropdownFloatingFilterComponent\n                        \n                        \n                            FieldColorValidationDirective\n                        \n                        \n                            FormButtonComponent\n                        \n                        \n                            FormButtonGroupComponent\n                        \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormCheckboxListComponent\n                        \n                        \n                            FormDateComponent\n                        \n                        \n                            FormFieldDirective\n                        \n                        \n                            FormFieldErrorComponent\n                        \n                        \n                            FormFileComponent\n                        \n                        \n                            FormFilePathComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormInputGroupComponent\n                        \n                        \n                            FormRadioListComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            FormTextareaComponent\n                        \n                        \n                            FormTimeComponent\n                        \n                        \n                            GridComponent\n                        \n                        \n                            GroupByPipe\n                        \n                        \n                            ImageResizerComponent\n                        \n                        \n                            ListComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LoginMenuComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            ModalTemplateDirective\n                        \n                        \n                            PageHeadingComponent\n                        \n                        \n                            SafePipe\n                        \n                        \n                            SearchInputComponent\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                        \n                            TranslatePipe\n                        \n                        \n                            TypeaheadComponent\n                        \n                        \n                            UppercasePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, APP_INITIALIZER, ErrorHandler } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule, CurrencyPipe, DatePipe } from '@angular/common';\nimport { NgbModule, NgbDateParserFormatter, NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\n\nimport {\n  CustomDateFormatter,\n  CustomNgbDateNativeUTCAdapter,\n  AuthInterceptor,\n  LoadingInterceptor,\n  JwtInterceptor,\n  TimingInterceptor,\n  GlobalErrorHandler,\n  AppService,\n} from './services';\n\n// Components\nimport {\n  // Forms\n  AppFormComponent,\n  FormFieldDirective,\n  FormButtonComponent,\n  FormInputComponent,\n  FormFileComponent,\n  FormDateComponent,\n  FormTimeComponent,\n  FormTextareaComponent,\n  FormCheckboxComponent,\n  FormCheckboxListComponent,\n  FormRadioListComponent,\n  FormSelectComponent,\n  FormFieldErrorComponent,\n  FormsService,\n  FieldColorValidationDirective,\n  FormButtonGroupComponent,\n  FormInputGroupComponent,\n  FormFilePathComponent,\n  // Custom components\n  AccordionComponent,\n  PageHeadingComponent,\n  CardDeckComponent,\n  CardComponent,\n  ToggleSwitchComponent,\n  SearchInputComponent,\n  TypeaheadComponent,\n  ListComponent,\n  ModalComponent,\n  ModalTemplateDirective,\n  ToastComponent,\n  AppFileInputDirective,\n  ImageResizerComponent,\n  LoadingComponent,\n  LoginComponent,\n  LogoutComponent,\n  LoginMenuComponent,\n  // Grid\n  GridComponent,\n  ActionButtonsComponent,\n  ActionButtonComponent,\n  DateFilterComponent,\n  DropdownFloatingFilterComponent,\n} from './components';\nimport { ApplicationPaths } from './constants';\n// Pipes\nimport { UppercasePipe, TranslatePipe, GroupByPipe, SafePipe } from './pipes';\n\nexport function appServiceFactory(appService: AppService): () => Promise {\n  return () => appService.getAppData();\n}\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgbModule,\n    AgGridModule.withComponents([ActionButtonsComponent, ActionButtonComponent, DateFilterComponent, DropdownFloatingFilterComponent]),\n    RouterModule.forChild([\n      { path: ApplicationPaths.Register, component: LoginComponent },\n      { path: ApplicationPaths.Profile, component: LoginComponent },\n      { path: ApplicationPaths.Login, component: LoginComponent },\n      { path: ApplicationPaths.LoginFailed, component: LoginComponent },\n      { path: ApplicationPaths.LoginCallback, component: LoginComponent },\n      { path: ApplicationPaths.LogOut, component: LogoutComponent },\n      { path: ApplicationPaths.LoggedOut, component: LogoutComponent },\n      { path: ApplicationPaths.LogOutCallback, component: LogoutComponent },\n    ]),\n    // No need to export as these modules don't expose any components/directive etc'\n  ],\n  declarations: [\n    // pipes\n    UppercasePipe,\n    TranslatePipe,\n    GroupByPipe,\n    SafePipe,\n    // Forms\n    FormFieldDirective,\n    FieldColorValidationDirective,\n    AppFormComponent,\n    FormButtonComponent,\n    FormButtonGroupComponent,\n    FormInputComponent,\n    FormInputGroupComponent,\n    FormFileComponent,\n    AppFileInputDirective,\n    FormFilePathComponent,\n    FormDateComponent,\n    FormTimeComponent,\n    FormTextareaComponent,\n    FormCheckboxComponent,\n    FormCheckboxListComponent,\n    FormRadioListComponent,\n    FormSelectComponent,\n    FormFieldErrorComponent,\n    // Custom comonents\n    LoginComponent,\n    LogoutComponent,\n    LoginMenuComponent,\n    AccordionComponent,\n    PageHeadingComponent,\n    CardDeckComponent,\n    CardComponent,\n    ToggleSwitchComponent,\n    SearchInputComponent,\n    TypeaheadComponent,\n    ListComponent,\n    ModalComponent,\n    ModalTemplateDirective,\n    ToastComponent,\n    ImageResizerComponent,\n    LoadingComponent,\n    // Grid\n    GridComponent,\n    DateFilterComponent,\n    DropdownFloatingFilterComponent,\n    ActionButtonsComponent,\n    ActionButtonComponent,\n  ],\n  exports: [\n    // Modules\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    // pipes\n    UppercasePipe,\n    TranslatePipe,\n    GroupByPipe,\n    SafePipe,\n    // Forms\n    FormFieldDirective,\n    FieldColorValidationDirective,\n    AppFormComponent,\n    FormButtonComponent,\n    FormButtonGroupComponent,\n    FormInputComponent,\n    FormInputGroupComponent,\n    FormFileComponent,\n    AppFileInputDirective,\n    FormFilePathComponent,\n    FormDateComponent,\n    FormTimeComponent,\n    FormTextareaComponent,\n    FormCheckboxComponent,\n    FormCheckboxListComponent,\n    FormRadioListComponent,\n    FormSelectComponent,\n    FormFieldErrorComponent,\n    // Custom comonents\n    LoginComponent,\n    LogoutComponent,\n    LoginMenuComponent,\n    AccordionComponent,\n    PageHeadingComponent,\n    CardDeckComponent,\n    CardComponent,\n    ToggleSwitchComponent,\n    SearchInputComponent,\n    TypeaheadComponent,\n    ListComponent,\n    ModalComponent,\n    ModalTemplateDirective,\n    ToastComponent,\n    ImageResizerComponent,\n    LoadingComponent,\n    // Grid\n    GridComponent,\n    DateFilterComponent,\n    DropdownFloatingFilterComponent,\n    ActionButtonsComponent,\n    ActionButtonComponent,\n  ],\n  entryComponents: [\n    AppFormComponent,\n    FormButtonComponent,\n    FormButtonGroupComponent,\n    FormInputComponent,\n    FormInputGroupComponent,\n    FormFileComponent,\n    FormFilePathComponent,\n    FormDateComponent,\n    FormTimeComponent,\n    FormTextareaComponent,\n    FormCheckboxComponent,\n    FormCheckboxListComponent,\n    FormRadioListComponent,\n    FormSelectComponent,\n  ],\n  providers: [\n    CurrencyPipe,\n    DatePipe,\n    FormsService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: TimingInterceptor, multi: true },\n    { provide: APP_INITIALIZER, useFactory: appServiceFactory, deps: [AppService], multi: true },\n    { provide: ErrorHandler, useClass: GlobalErrorHandler },\n    { provide: NgbDateParserFormatter, useClass: CustomDateFormatter },\n    { provide: NgbDateAdapter, useClass: CustomNgbDateNativeUTCAdapter },\n  ],\n})\nexport class SharedModule {}\n\n// Public apis\nexport * from './components';\nexport * from './constants';\nexport * from './models';\nexport * from './pipes';\nexport * from './services';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShopComponent.html":{"url":"components/ShopComponent.html","title":"component - ShopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/+examples/examples/shop/shop.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-shop\n            \n\n            \n                styleUrls\n                ./shop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'appc-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.scss'],\n})\nexport class ShopComponent {}\n\n    \n\n    \n        \n  \n    \n      \n        Shop (current)\n      \n      \n        Customers\n      \n      \n        Products\n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./shop.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Shop (current)                    Customers                    Products            '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShopModule.html":{"url":"modules/ShopModule.html","title":"module - ShopModule","body":"\n                   \n\n\n\n\n    Modules\n    ShopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShopModule\n\n\n\ncluster_ShopModule_declarations\n\n\n\ncluster_ShopModule_imports\n\n\n\n\nCustomersComponent\n\nCustomersComponent\n\n\n\nShopModule\n\nShopModule\n\nShopModule -->\n\nCustomersComponent->ShopModule\n\n\n\n\n\nProductsComponent\n\nProductsComponent\n\nShopModule -->\n\nProductsComponent->ShopModule\n\n\n\n\n\nShopComponent\n\nShopComponent\n\nShopModule -->\n\nShopComponent->ShopModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nShopModule -->\n\nSharedModule->ShopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/+examples/examples/shop/shop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CustomersComponent\n                        \n                        \n                            ProductsComponent\n                        \n                        \n                            ShopComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '@app/shared';\n\nimport { routes } from './shop.routes';\nimport { ShopComponent } from './shop.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { ProductsComponent } from './products/products.component';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(routes)],\n  declarations: [ShopComponent, CustomersComponent, ProductsComponent],\n})\nexport class ShopModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignalrComponent.html":{"url":"components/SignalrComponent.html","title":"component - SignalrComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignalrComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/+examples/examples/signalr/signalr.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                appc-signalr\n            \n\n            \n                styleUrls\n                ./signalr.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signalr.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'appc-signalr',\n  templateUrl: './signalr.component.html',\n  styleUrls: ['./signalr.component.scss'],\n})\nexport class SignalrComponent {}\n\n    \n\n    \n        \n    \n        Chat\n    \n    \n        Move shape\n    \n\n\n\n    \n\n    \n                \n                    ./signalr.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Chat                Move shape    '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignalrComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignalrModule.html":{"url":"modules/SignalrModule.html","title":"module - SignalrModule","body":"\n                   \n\n\n\n\n    Modules\n    SignalrModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignalrModule\n\n\n\ncluster_SignalrModule_declarations\n\n\n\ncluster_SignalrModule_imports\n\n\n\n\nChatComponent\n\nChatComponent\n\n\n\nSignalrModule\n\nSignalrModule\n\nSignalrModule -->\n\nChatComponent->SignalrModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nSignalrModule -->\n\nDraggableDirective->SignalrModule\n\n\n\n\n\nMoveShapeComponent\n\nMoveShapeComponent\n\nSignalrModule -->\n\nMoveShapeComponent->SignalrModule\n\n\n\n\n\nSignalrComponent\n\nSignalrComponent\n\nSignalrModule -->\n\nSignalrComponent->SignalrModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSignalrModule -->\n\nSharedModule->SignalrModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/+examples/examples/signalr/signalr.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChatComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            MoveShapeComponent\n                        \n                        \n                            SignalrComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '@app/shared';\nimport { SignalrComponent } from './signalr.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { MoveShapeComponent } from './move-shape/move-shape.component';\nimport { DraggableDirective } from './move-shape/draggable.directive';\n\nimport { routes } from './signalr.routes';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        SignalrComponent,\n        ChatComponent,\n        MoveShapeComponent,\n        DraggableDirective\n    ]\n})\nexport class SignalrModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SuccessAuthenticationResult.html":{"url":"interfaces/SuccessAuthenticationResult.html","title":"interface - SuccessAuthenticationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SuccessAuthenticationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/authorize.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        state\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         AuthenticationResultStatus.Success\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticationResultStatus.Success\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User, UserManager, WebStorageStateStore } from 'oidc-client';\nimport { BehaviorSubject, concat, from, Observable } from 'rxjs';\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\nimport { ApplicationPaths, ApplicationName } from '../constants';\n\nexport type IAuthenticationResult = SuccessAuthenticationResult | FailureAuthenticationResult | RedirectAuthenticationResult;\n\nexport interface SuccessAuthenticationResult {\n  status: AuthenticationResultStatus.Success;\n  state: any;\n}\n\nexport interface FailureAuthenticationResult {\n  status: AuthenticationResultStatus.Fail;\n  message: string;\n}\n\nexport interface RedirectAuthenticationResult {\n  status: AuthenticationResultStatus.Redirect;\n}\n\nexport enum AuthenticationResultStatus {\n  Success,\n  Redirect,\n  Fail,\n}\n\nexport interface IUser extends User {\n  name: string;\n  role: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizeService {\n  // By default pop ups are disabled because they don't work properly on Edge.\n  // If you want to enable pop up authentication simply set this flag to false.\n  private _user: IUser;\n  private popUpDisabled = true;\n  private userManager: UserManager;\n  private userSubject: BehaviorSubject = new BehaviorSubject(null);\n\n  get isLoggedIn(): boolean {\n    return !!this.user;\n  }\n\n  get user(): IUser {\n    return this._user;\n  }\n\n  public hasRole(role: string): boolean {\n    return this._user && this._user.role && this._user.role.indexOf(role) > -1;\n  }\n\n  public isAuthenticated(): Observable {\n    return this.getUser().pipe(map(u => !!u));\n  }\n\n  public getUser(): Observable {\n    return concat(\n      this.userSubject.pipe(\n        take(1),\n        filter(u => !!u),\n      ),\n      this.getUserFromStorage().pipe(\n        filter(u => !!u),\n        tap(u => {\n          this._user = u;\n          this.userSubject.next(u);\n        }),\n      ),\n      this.userSubject.asObservable(),\n    );\n  }\n\n  public getAccessToken(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => from(this.userManager.getUser())),\n      map(user => user && user.access_token),\n    );\n  }\n\n  // We try to authenticate the user in three different ways:\n  // 1) We try to see if we can authenticate the user silently. This happens\n  //    when the user is already logged in on the IdP and is done using a hidden iframe\n  //    on the client.\n  // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\n  //    Pop-Up blocker or the user has disabled PopUps.\n  // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\n  //    redirect flow.\n  public async signIn(state: any): Promise {\n    await this.ensureUserManagerInitialized();\n    let user: User = null;\n    try {\n      user = await this.userManager.signinSilent(this.createArguments());\n      this.userSubject.next(user.profile as any);\n      return this.success(state);\n    } catch (silentError) {\n      // User might not be authenticated, fallback to popup authentication\n      console.log('Silent authentication error: ', silentError);\n\n      try {\n        if (this.popUpDisabled) {\n          throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n        }\n        user = await this.userManager.signinPopup(this.createArguments());\n        this.userSubject.next(user.profile as any);\n        return this.success(state);\n      } catch (popupError) {\n        if (popupError.message === 'Popup window closed') {\n          // The user explicitly cancelled the login action by closing an opened popup.\n          return this.error('The user closed the window.');\n        } else if (!this.popUpDisabled) {\n          console.log('Popup authentication error: ', popupError);\n        }\n\n        // PopUps might be blocked by the user, fallback to redirect\n        try {\n          await this.userManager.signinRedirect(this.createArguments(state));\n          return this.redirect();\n        } catch (redirectError) {\n          console.log('Redirect authentication error: ', redirectError);\n          return this.error(redirectError);\n        }\n      }\n    }\n  }\n\n  public async completeSignIn(url: string): Promise {\n    try {\n      await this.ensureUserManagerInitialized();\n      const user = await this.userManager.signinCallback(url);\n      this.userSubject.next(user && (user.profile as any));\n      return this.success(user && user.state);\n    } catch (error) {\n      console.log('There was an error signing in: ', error);\n      return this.error('There was an error signing in.');\n    }\n  }\n\n  public async signOut(state: any): Promise {\n    try {\n      if (this.popUpDisabled) {\n        throw new Error(\"Popup disabled. Change 'authorize.service.ts:AuthorizeService.popupDisabled' to false to enable it.\");\n      }\n\n      await this.ensureUserManagerInitialized();\n      await this.userManager.signoutPopup(this.createArguments());\n      this.userSubject.next(null);\n      return this.success(state);\n    } catch (popupSignOutError) {\n      console.log('Popup signout error: ', popupSignOutError);\n      try {\n        await this.userManager.signoutRedirect(this.createArguments(state));\n        return this.redirect();\n      } catch (redirectSignOutError) {\n        console.log('Redirect signout error: ', popupSignOutError);\n        return this.error(redirectSignOutError);\n      }\n    }\n  }\n\n  public async completeSignOut(url: string): Promise {\n    await this.ensureUserManagerInitialized();\n    try {\n      const signoutResponse = await this.userManager.signoutCallback(url);\n      this.userSubject.next(null);\n      return this.success(signoutResponse && signoutResponse.state.data);\n    } catch (error) {\n      console.log(`There was an error trying to log out '${error}'.`);\n      return this.error(error);\n    }\n  }\n\n  private createArguments(state?: any): any {\n    return { useReplaceToNavigate: true, data: state };\n  }\n\n  private error(message: string): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Fail, message };\n  }\n\n  private success(state: any): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Success, state };\n  }\n\n  private redirect(): IAuthenticationResult {\n    return { status: AuthenticationResultStatus.Redirect };\n  }\n\n  private async ensureUserManagerInitialized(): Promise {\n    if (this.userManager !== undefined) {\n      return;\n    }\n    const response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\n    if (!response.ok) {\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\n    }\n\n    const settings: any = await response.json();\n    settings.automaticSilentRenew = true;\n    settings.includeIdTokenInSilentRenew = true;\n    this.userManager = new UserManager(settings);\n\n    this.userManager.events.addUserSignedOut(async () => {\n      await this.userManager.removeUser();\n      this.userSubject.next(null);\n    });\n  }\n\n  private getUserFromStorage(): Observable {\n    return from(this.ensureUserManagerInitialized()).pipe(\n      mergeMap(() => this.userManager.getUser()),\n      map(u => u && (u.profile as any)),\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/interceptors/timing.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/interceptors/timing.interceptor.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/interceptors/timing.interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          const elapsed = Date.now() - started;\n          console.log(`%c ${req.method}-${req.urlWithParams}%c - ${elapsed} ms.`, 'color: blue;', 'font-weight:bold;');\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toast/toast.comonent.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toastService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/toast/toast.comonent.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nisTemplate(toast)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toast/toast.comonent.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToastService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/toast/toast.comonent.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, TemplateRef } from '@angular/core';\nimport { ToastService } from '../../services';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  host: { '[class.ngb-toasts]': 'true' },\n})\nexport class ToastComponent {\n  constructor(public toastService: ToastService) {}\n\n  isTemplate(toast) {\n    return toast.textOrTpl instanceof TemplateRef;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  {{ toast.textOrTpl }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ toast.textOrTpl }}'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/toast.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toasts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                danger\n                            \n                            \n                                info\n                            \n                            \n                                remove\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                success\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            danger\n                        \n                        \n                    \n                \n            \n            \n                \ndanger(message: string | TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            string | TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string | TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            string | TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(toast)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(textOrTpl: string | TemplateRef, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    textOrTpl\n                                    \n                                            string | TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(message: string | TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            string | TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string | TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            string | TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/toast.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  toasts: any[] = [];\n\n  success(message: string | TemplateRef) {\n    this.show(message, { classname: 'bg-success' });\n  }\n\n  info(message: string | TemplateRef) {\n    this.show(message, { classname: 'bg-info' });\n  }\n\n  warn(message: string | TemplateRef) {\n    this.show(message, { classname: 'bg-warning' });\n  }\n\n  danger(message: string | TemplateRef) {\n    this.show(message, { classname: 'bg-danger' });\n  }\n\n  private show(textOrTpl: string | TemplateRef, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n\n  remove(toast) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleSwitchComponent.html":{"url":"components/ToggleSwitchComponent.html","title":"component - ToggleSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toggle-switch/toggle-switch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toggle-switch\n            \n\n            \n                styleUrls\n                ./toggle-switch.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeHandler\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/toggle-switch/toggle-switch.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/toggle-switch/toggle-switch.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/toggle-switch/toggle-switch.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/toggle-switch/toggle-switch.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/toggle-switch/toggle-switch.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeHandler\n                        \n                        \n                    \n                \n            \n            \n                \nchangeHandler(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toggle-switch/toggle-switch.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toggle-switch/toggle-switch.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n// Uage\n// \n@Component({\n  selector: 'app-toggle-switch',\n  styleUrls: ['./toggle-switch.component.scss'],\n  templateUrl: './toggle-switch.component.html',\n})\nexport class ToggleSwitchComponent implements OnInit {\n  constructor() {}\n\n  @Input() checked: boolean;\n  @Input() label: string;\n  @Input() disabled: boolean;\n  @Output() onChange = new EventEmitter();\n\n  ngOnInit(): void {}\n\n  changeHandler(e) {\n    this.onChange.next(e.target.checked);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  {{ label }}\n\n\n    \n\n    \n                \n                    ./toggle-switch.component.scss\n                \n                .switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n  margin-bottom: 0;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.switch .label {\n  position: absolute;\n  left: 73px;\n  top: 5px;\n  font-size: 16px;\n  white-space: nowrap;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: '';\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196f3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196f3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ label }}'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslatePipe.html":{"url":"injectables/TranslatePipe.html","title":"injectable - TranslatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/pipes/translate.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pipes/translate.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/translate.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Pipe, Injectable } from '@angular/core';\n\nimport { AppService } from '../services';\n\n@Injectable()\n@Pipe({\n  name: 'translate',\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private appService: AppService) {}\n  transform(query: string): any {\n    return this.appService.appData.content[query] || query;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeaheadComponent.html":{"url":"components/TypeaheadComponent.html","title":"component - TypeaheadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeaheadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/typeahead/typeahead.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-typeahead\n            \n\n\n\n\n            \n                templateUrl\n                ./typeahead.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/typeahead/typeahead.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/typeahead/typeahead.component.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/typeahead/typeahead.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/typeahead/typeahead.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(terms)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/typeahead/typeahead.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    terms\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-typeahead',\n  templateUrl: './typeahead.component.html',\n})\nexport class TypeaheadComponent implements OnInit {\n  @Input() label: string;\n  @Input() model: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  search(terms) {}\n}\n\n    \n\n    \n        {{ label || 'Search' }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ label || \\'Search\\' }}'\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'ActionButtonComponent', 'selector': 'appc-action-button'},{'name': 'ActionButtonsComponent', 'selector': 'appc-action-buttons'},{'name': 'AppComponent', 'selector': 'appc-root'},{'name': 'AppFormComponent', 'selector': 'app-form'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDeckComponent', 'selector': 'app-card-deck'},{'name': 'ChatComponent', 'selector': 'appc-chat'},{'name': 'CustomersComponent', 'selector': 'appc-customers'},{'name': 'DateFilterComponent', 'selector': 'app-date-filter'},{'name': 'DropdownFloatingFilterComponent', 'selector': 'appc-dropdown-filter'},{'name': 'ExamplesComponent', 'selector': 'appc-examples'},{'name': 'FooterComponent', 'selector': 'appc-footer'},{'name': 'FormButtonComponent', 'selector': 'app-form-button'},{'name': 'FormButtonGroupComponent', 'selector': 'app-form-button-group'},{'name': 'FormCheckboxComponent', 'selector': 'app-form-checkbox'},{'name': 'FormCheckboxListComponent', 'selector': 'app-form-checkbox-list'},{'name': 'FormDateComponent', 'selector': 'app-form-date'},{'name': 'FormFieldErrorComponent', 'selector': 'app-form-field-error, [appFormFieldError]'},{'name': 'FormFileComponent', 'selector': 'app-form-file'},{'name': 'FormFilePathComponent', 'selector': 'app-form-file-path'},{'name': 'FormInputComponent', 'selector': 'app-form-input'},{'name': 'FormInputGroupComponent', 'selector': 'app-form-input-group'},{'name': 'FormRadioListComponent', 'selector': 'app-form-radio-list'},{'name': 'FormSelectComponent', 'selector': 'app-form-select'},{'name': 'FormsPlaygroundComponent', 'selector': 'appc-forms-playground'},{'name': 'FormTextareaComponent', 'selector': 'app-form-textarea'},{'name': 'FormTimeComponent', 'selector': 'app-form-time'},{'name': 'GridComponent', 'selector': 'appc-grid'},{'name': 'HeaderComponent', 'selector': 'appc-header'},{'name': 'HomeComponent', 'selector': 'appc-home-component'},{'name': 'ImageResizerComponent', 'selector': 'app-image-resizer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'LoadingComponent', 'selector': 'appc-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ModalComponent', 'selector': 'appc-modal-component'},{'name': 'MoveShapeComponent', 'selector': 'appc-move-shape'},{'name': 'PageHeadingComponent', 'selector': 'app-page-heading'},{'name': 'PrivacyComponent', 'selector': 'appc-privacy-component'},{'name': 'ProductsComponent', 'selector': 'appc-products'},{'name': 'SearchInputComponent', 'selector': 'appc-search-input'},{'name': 'ShopComponent', 'selector': 'appc-shop'},{'name': 'SignalrComponent', 'selector': 'appc-signalr'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'ToggleSwitchComponent', 'selector': 'app-toggle-switch'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [{'name': 'AppFileInputDirective', 'selector': '[appFileInput][type=file]'},{'name': 'DraggableDirective', 'selector': '[draggable]'},{'name': 'FieldColorValidationDirective', 'selector': '[formControlName]:not(.checkbox-list-item),[ngModel]:not([ngbTypeahead]),[formControl]'},{'name': 'FormFieldDirective', 'selector': '[appFormField]'},{'name': 'ModalTemplateDirective', 'selector': 'ng-template[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeaheadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UppercasePipe.html":{"url":"pipes/UppercasePipe.html","title":"pipe - UppercasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UppercasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/uppercase.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        appfUppercase\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/uppercase.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'appfUppercase'\n})\nexport class UppercasePipe implements PipeTransform {\n    public transform(value: string) {\n        return value.toUpperCase();\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/utils.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToPairwise\n                            \n                            \n                                base64ToBlob\n                            \n                            \n                                imageToFormData\n                            \n                            \n                                parseQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arrayToPairwise\n                        \n                        \n                    \n                \n            \n            \n                \narrayToPairwise(arr: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/utils.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            base64ToBlob\n                        \n                        \n                    \n                \n            \n            \n                \nbase64ToBlob(base64, mime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/utils.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    base64\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            imageToFormData\n                        \n                        \n                    \n                \n            \n            \n                \nimageToFormData(image: any, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/utils.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseQuery\n                        \n                        \n                    \n                \n            \n            \n                \nparseQuery(queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/utils.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilsService {\n  imageToFormData(image: any, name: string) {\n    const base64ImageContent = image.replace(/^data:image\\/(png|jpg|jpeg);base64,/, '');\n    const blob = this.base64ToBlob(base64ImageContent, 'image/jpeg');\n    const formData = new FormData();\n    formData.append(name, blob);\n\n    return formData;\n  }\n\n  base64ToBlob(base64, mime) {\n    mime = mime || '';\n    const sliceSize = 1024;\n    const byteChars = window.atob(base64);\n    const byteArrays = [];\n\n    for (let offset = 0, len = byteChars.length; offset  {\n      if (index % 2 === 0) {\n        result.push(array.slice(index, index + 2));\n      }\n      return result;\n    }, []);\n\n    return objs;\n  }\n\n  parseQuery(queryString: string): { [key: string]: string } {\n    const query = {};\n    const pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                __mocks__/MockAppService.ts\n            \n            class\n            MockAppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                __mocks__/MockAuthService.ts\n            \n            class\n            MockAuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+examples/examples.component.ts\n            \n            component\n            ExamplesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/forms-playground/forms-playground.component.ts\n            \n            component\n            FormsPlaygroundComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/shop/customers/customers.component.ts\n            \n            component\n            CustomersComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/shop/products/products.component.ts\n            \n            component\n            ProductsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/shop/shop.component.ts\n            \n            component\n            ShopComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/shop/shop.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/signalr/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/signalr/move-shape/draggable.directive.ts\n            \n            directive\n            DraggableDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/signalr/move-shape/move-shape.component.ts\n            \n            component\n            MoveShapeComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/signalr/signalr.component.ts\n            \n            component\n            SignalrComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+examples/examples/signalr/signalr.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            ApplicationDataViewModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            CategoriesListVm\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            CreateCustomerCommand\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            CreateProductCommand\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            CulturesDisplayViewModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            CustomerDetailVm\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            CustomerLookupDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            CustomersListVm\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            EmployeeDetailVm\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            EmployeeLookupDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            EmployeeTerritoryDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            EnvironmentInformation\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            ProblemDetails\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            ProductDetailVm\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            ProductDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            ProductsListVm\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            SwaggerException\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            UpdateCustomerCommand\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            UpdateProductCommand\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            UpsertCategoryCommand\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            class\n            UpsertEmployeeCommand\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            injectable\n            AppClient\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            injectable\n            CategoriesClient\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            injectable\n            CustomersClient\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            injectable\n            EmployeesClient\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            injectable\n            ProductsClient\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            FileResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IAppClient\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IApplicationDataViewModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICategoriesClient\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICategoriesListVm\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICategoryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICreateCustomerCommand\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICreateProductCommand\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICulturesDisplayViewModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICustomerDetailVm\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICustomerLookupDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICustomersClient\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            ICustomersListVm\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IEmployeeDetailVm\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IEmployeeLookupDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IEmployeesClient\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IEmployeeTerritoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IEnvironmentInformation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IProblemDetails\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IProductDetailVm\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IProductDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IProductsClient\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IProductsListVm\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IUpdateCustomerCommand\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IUpdateProductCommand\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IUpsertCategoryCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            interface\n            IUpsertEmployeeCommand\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            function\n            blobToText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            function\n            throwException\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/api-client.ts\n            \n            variable\n            API_BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/privacy/privacy.component.ts\n            \n            component\n            PrivacyComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            interface\n            Field\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            interface\n            IEnableAuthenticatorModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            interface\n            IFieldConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            interface\n            IModalOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            interface\n            IOption\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            interface\n            ISocialLogins\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            interface\n            ITwoFactorModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            interface\n            KeyValuePair\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models.ts\n            \n            variable\n            COOKIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/router.animations.ts\n            \n            variable\n            routerTransition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/accordion/accordion.component.ts\n            \n            component\n            AccordionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/card-deck/card-deck.component.ts\n            \n            component\n            CardDeckComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/field-base/field-base.ts\n            \n            injectable\n            FieldBaseComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-button-group/form-button-group.component.ts\n            \n            component\n            FormButtonGroupComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-button/form-button.component.ts\n            \n            component\n            FormButtonComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-checkbox-list/form-checkbox-list.component.ts\n            \n            component\n            FormCheckboxListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-checkbox/form-checkbox.component.ts\n            \n            component\n            FormCheckboxComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-date/form-date.component.ts\n            \n            component\n            FormDateComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-field-error/form-field-error.component.ts\n            \n            component\n            FormFieldErrorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-file-path/form-file-path.component.ts\n            \n            component\n            FormFilePathComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-file/file-input.directive.ts\n            \n            directive\n            AppFileInputDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-file/file-input.directive.ts\n            \n            variable\n            APP_FILE_INPUT_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-file/form-file.component.ts\n            \n            component\n            FormFileComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-input-group/form-input-group.component.ts\n            \n            component\n            FormInputGroupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-input/form-input.component.ts\n            \n            component\n            FormInputComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-radio-list/form-radio-list.component.ts\n            \n            component\n            FormRadioListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-select/form-select.component.ts\n            \n            component\n            FormSelectComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-textarea/form-textarea.component.ts\n            \n            component\n            FormTextareaComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form-time/form-time.component.ts\n            \n            component\n            FormTimeComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/components/form/form.component.ts\n            \n            component\n            AppFormComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/directives/field-color-validation.directive.ts\n            \n            directive\n            FieldColorValidationDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/directives/form-field.directive.ts\n            \n            directive\n            FormFieldDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/directives/form-field.directive.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/forms/forms.service.ts\n            \n            injectable\n            FormsService\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/shared/components/grid/components/date-filter/date-filter.component.ts\n            \n            component\n            DateFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts\n            \n            component\n            DropdownFloatingFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/grid/components/dropdown-filter/dropdown-filter.component.ts\n            \n            interface\n            DropdownFloatingFilterParams\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/grid/grid.component.ts\n            \n            component\n            GridComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/shared/components/grid/renderers/action-button/action-button.component.ts\n            \n            component\n            ActionButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/grid/renderers/action-buttons/action-buttons.component.ts\n            \n            component\n            ActionButtonsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/image-resizer/image-resizer.component.ts\n            \n            component\n            ImageResizerComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/components/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/login-menu/login-menu.component.ts\n            \n            component\n            LoginMenuComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/login/login.component.ts\n            \n            interface\n            INavigationState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/logout/logout.component.ts\n            \n            interface\n            INavigationState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/modal/modal-template.directive.ts\n            \n            directive\n            ModalTemplateDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/page-heading/page-heading.component.ts\n            \n            component\n            PageHeadingComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/search-input/search-input.component.ts\n            \n            component\n            SearchInputComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/shared/components/toast/toast.comonent.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/toggle-switch/toggle-switch.component.ts\n            \n            component\n            ToggleSwitchComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/typeahead/typeahead.component.ts\n            \n            component\n            TypeaheadComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/constants/auth.constants.ts\n            \n            interface\n            ApplicationPathsType\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/shared/constants/auth.constants.ts\n            \n            variable\n            ApplicationName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/auth.constants.ts\n            \n            variable\n            applicationPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/auth.constants.ts\n            \n            variable\n            ApplicationPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/auth.constants.ts\n            \n            variable\n            LoginActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/auth.constants.ts\n            \n            variable\n            LogoutActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/auth.constants.ts\n            \n            variable\n            QueryParameterNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/auth.constants.ts\n            \n            variable\n            ReturnUrlType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/models/accordion.ts\n            \n            interface\n            IAccordionItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/auth.ts\n            \n            interface\n            ForgotPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/auth.ts\n            \n            interface\n            ResetPasswordToken\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/card.ts\n            \n            interface\n            ICard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/card.ts\n            \n            interface\n            ICardEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/forms.ts\n            \n            interface\n            Field\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/forms.ts\n            \n            interface\n            FieldOption\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/forms.ts\n            \n            interface\n            IFieldConfig\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/shared/models/grid.ts\n            \n            interface\n            GridColumn\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/shared/models/list.ts\n            \n            interface\n            IListItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/modal.ts\n            \n            interface\n            ModalOptions\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/models/nav.ts\n            \n            interface\n            NavItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/nav.ts\n            \n            interface\n            PageNav\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/group-by.pipe.ts\n            \n            pipe\n            GroupByPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/safe.pipe.ts\n            \n            pipe\n            SafePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/translate.pipe.ts\n            \n            injectable\n            TranslatePipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/translate.pipe.ts\n            \n            pipe\n            TranslatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/uppercase.pipe.ts\n            \n            pipe\n            UppercasePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/app.service.ts\n            \n            variable\n            APP_DATA_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/authorize.service.ts\n            \n            injectable\n            AuthorizeService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/shared/services/authorize.service.ts\n            \n            interface\n            FailureAuthenticationResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/authorize.service.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/authorize.service.ts\n            \n            interface\n            RedirectAuthenticationResult\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/services/authorize.service.ts\n            \n            interface\n            SuccessAuthenticationResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/custom-date-adapter.service.ts\n            \n            injectable\n            CustomNgbDateNativeUTCAdapter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/custom-date-formatter.service.ts\n            \n            injectable\n            CustomDateFormatter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/custom-date-formatter.service.ts\n            \n            function\n            isNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/custom-date-formatter.service.ts\n            \n            function\n            padNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/custom-date-formatter.service.ts\n            \n            function\n            toInteger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/services/global-error.service.ts\n            \n            injectable\n            GlobalErrorHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/guards/authorize.guard.ts\n            \n            guard\n            AuthorizeGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/interceptors/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/interceptors/loading.interceptor.ts\n            \n            interceptor\n            LoadingInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/interceptors/timing.interceptor.ts\n            \n            interceptor\n            TimingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/jwt-decode/jwthelper.service.ts\n            \n            class\n            JwtHelperService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/modal-state.service.ts\n            \n            injectable\n            ModalStateService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/modal.service.ts\n            \n            injectable\n            ModalService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/utils.service.ts\n            \n            injectable\n            UtilsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            function\n            appServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jestGlobalMocks.ts\n            \n            variable\n            mock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            getBaseUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 10.0.6\n        \n            @angular/common : 10.0.6\n        \n            @angular/compiler : 10.0.6\n        \n            @angular/compiler-cli : 10.0.6\n        \n            @angular/core : 10.0.6\n        \n            @angular/forms : 10.0.6\n        \n            @angular/localize : ^10.0.6\n        \n            @angular/platform-browser : 10.0.6\n        \n            @angular/platform-browser-dynamic : 10.0.6\n        \n            @angular/platform-server : 10.0.6\n        \n            @angular/router : 10.0.6\n        \n            @microsoft/signalr : 3.1.0\n        \n            @microsoft/signalr-protocol-msgpack : 3.1.0\n        \n            @ng-bootstrap/ng-bootstrap : 5.1.4\n        \n            ag-grid-angular : ^22.1.1\n        \n            ag-grid-community : ^22.1.1\n        \n            aspnet-prerendering : 3.0.1\n        \n            bootstrap : 4.4.1\n        \n            date-fns : 2.8.1\n        \n            lodash : 4.17.15\n        \n            oidc-client : 1.10.1\n        \n            preboot : 7.0.0\n        \n            rxjs : 6.5.3\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationResultStatus   (src/.../authorize.service.ts)\n                        \n                        \n                            ButtonType   (src/.../grid.ts)\n                        \n                        \n                            FieldTypes   (src/.../models.ts)\n                        \n                        \n                            FieldTypes   (src/.../forms.ts)\n                        \n                        \n                            GridFieldType   (src/.../grid.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/services/authorize.service.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationResultStatus\n                    \n                \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Redirect\n                            \n                        \n                        \n                            \n                                 Fail\n                            \n                        \n            \n        \n\n    src/app/shared/models/grid.ts\n    \n        \n            \n                \n                    \n                        \n                        ButtonType\n                    \n                \n                        \n                            \n                                 Primary\n                            \n                        \n                        \n                            \n                                 Secondary\n                            \n                        \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n                        \n                            \n                                 Danger\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GridFieldType\n                    \n                \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                 Number\n                            \n                        \n                        \n                            \n                                 Boolean\n                            \n                        \n                        \n                            \n                                 Currency\n                            \n                        \n                        \n                            \n                                 Date\n                            \n                        \n                        \n                            \n                                 Dropdown\n                            \n                        \n                        \n                            \n                                 ActionButtons\n                            \n                        \n                        \n                            \n                                 ActionButton\n                            \n                        \n            \n        \n\n    src/app/models.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldTypes\n                    \n                \n                        \n                            \n                                 Textbox\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 FileUpload\n                            \n                        \n                        \n                            \n                                Value : file\n                            \n                        \n                        \n                            \n                                 Password\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n                        \n                            \n                                 Email\n                            \n                        \n                        \n                            \n                                Value : email\n                            \n                        \n                        \n                            \n                                 Number\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 Date\n                            \n                        \n                        \n                            \n                                Value : date\n                            \n                        \n                        \n                            \n                                 Time\n                            \n                        \n                        \n                            \n                                Value : time\n                            \n                        \n                        \n                            \n                                 Textarea\n                            \n                        \n                        \n                            \n                                Value : textarea\n                            \n                        \n                        \n                            \n                                 Radiolist\n                            \n                        \n                        \n                            \n                                Value : radiolist\n                            \n                        \n                        \n                            \n                                 Select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 Checkbox\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 Checkboxlist\n                            \n                        \n                        \n                            \n                                Value : checkboxlist\n                            \n                        \n                        \n                            \n                                 Button\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n            \n        \n\n    src/app/shared/models/forms.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldTypes\n                    \n                \n                        \n                            \n                                 Textbox\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 InputGroup\n                            \n                        \n                        \n                            \n                                Value : inputgroup\n                            \n                        \n                        \n                            \n                                 FileUpload\n                            \n                        \n                        \n                            \n                                Value : file\n                            \n                        \n                        \n                            \n                                 FilePathUpload\n                            \n                        \n                        \n                            \n                                Value : filepath\n                            \n                        \n                        \n                            \n                                 Password\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n                        \n                            \n                                 Email\n                            \n                        \n                        \n                            \n                                Value : email\n                            \n                        \n                        \n                            \n                                 Number\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 Date\n                            \n                        \n                        \n                            \n                                Value : date\n                            \n                        \n                        \n                            \n                                 Time\n                            \n                        \n                        \n                            \n                                Value : time\n                            \n                        \n                        \n                            \n                                 Textarea\n                            \n                        \n                        \n                            \n                                Value : textarea\n                            \n                        \n                        \n                            \n                                 Radiolist\n                            \n                        \n                        \n                            \n                                Value : radiolist\n                            \n                        \n                        \n                            \n                                 Select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 Checkbox\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 Checkboxlist\n                            \n                        \n                        \n                            \n                                Value : checkboxlist\n                            \n                        \n                        \n                            \n                                 Button\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n                        \n                            \n                                 ButtonGroup\n                            \n                        \n                        \n                            \n                                Value : buttongroup\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appServiceFactory   (src/.../shared.module.ts)\n                        \n                        \n                            blobToText   (src/.../api-client.ts)\n                        \n                        \n                            getBaseUrl   (src/.../main.ts)\n                        \n                        \n                            isNumber   (src/.../custom-date-formatter.service.ts)\n                        \n                        \n                            padNumber   (src/.../custom-date-formatter.service.ts)\n                        \n                        \n                            throwException   (src/.../api-client.ts)\n                        \n                        \n                            toInteger   (src/.../custom-date-formatter.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nappServiceFactory(appService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/api-client.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            blobToText\n                        \n                        \n                    \n                \n            \n            \n                \nblobToText(blob: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blob\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            throwException\n                        \n                        \n                    \n                \n            \n            \n                \nthrowException(message, status, response, headers, result?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headers\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getBaseUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetBaseUrl()\n                \n            \n\n\n\n\n        \n    \n    src/app/shared/services/custom-date-formatter.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisNumber(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            padNumber\n                        \n                        \n                    \n                \n            \n            \n                \npadNumber(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toInteger\n                        \n                        \n                    \n                \n            \n            \n                \ntoInteger(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ExamplesModule\n\n\n\ncluster_ExamplesModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_ShopModule\n\n\n\ncluster_ShopModule_declarations\n\n\n\ncluster_SignalrModule\n\n\n\ncluster_SignalrModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nExamplesModule\n\nExamplesModule\n\nExamplesModule -->\n\nSharedModule->ExamplesModule\n\n\n\n\n\nAccordionComponent \n\nAccordionComponent \n\nAccordionComponent  -->\n\nSharedModule->AccordionComponent \n\n\n\n\n\nActionButtonComponent \n\nActionButtonComponent \n\nActionButtonComponent  -->\n\nSharedModule->ActionButtonComponent \n\n\n\n\n\nActionButtonsComponent \n\nActionButtonsComponent \n\nActionButtonsComponent  -->\n\nSharedModule->ActionButtonsComponent \n\n\n\n\n\nAppFileInputDirective \n\nAppFileInputDirective \n\nAppFileInputDirective  -->\n\nSharedModule->AppFileInputDirective \n\n\n\n\n\nAppFormComponent \n\nAppFormComponent \n\nAppFormComponent  -->\n\nSharedModule->AppFormComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSharedModule->CardComponent \n\n\n\n\n\nCardDeckComponent \n\nCardDeckComponent \n\nCardDeckComponent  -->\n\nSharedModule->CardDeckComponent \n\n\n\n\n\nDateFilterComponent \n\nDateFilterComponent \n\nDateFilterComponent  -->\n\nSharedModule->DateFilterComponent \n\n\n\n\n\nDropdownFloatingFilterComponent \n\nDropdownFloatingFilterComponent \n\nDropdownFloatingFilterComponent  -->\n\nSharedModule->DropdownFloatingFilterComponent \n\n\n\n\n\nFieldColorValidationDirective \n\nFieldColorValidationDirective \n\nFieldColorValidationDirective  -->\n\nSharedModule->FieldColorValidationDirective \n\n\n\n\n\nFormButtonComponent \n\nFormButtonComponent \n\nFormButtonComponent  -->\n\nSharedModule->FormButtonComponent \n\n\n\n\n\nFormButtonGroupComponent \n\nFormButtonGroupComponent \n\nFormButtonGroupComponent  -->\n\nSharedModule->FormButtonGroupComponent \n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nSharedModule->FormCheckboxComponent \n\n\n\n\n\nFormCheckboxListComponent \n\nFormCheckboxListComponent \n\nFormCheckboxListComponent  -->\n\nSharedModule->FormCheckboxListComponent \n\n\n\n\n\nFormDateComponent \n\nFormDateComponent \n\nFormDateComponent  -->\n\nSharedModule->FormDateComponent \n\n\n\n\n\nFormFieldDirective \n\nFormFieldDirective \n\nFormFieldDirective  -->\n\nSharedModule->FormFieldDirective \n\n\n\n\n\nFormFieldErrorComponent \n\nFormFieldErrorComponent \n\nFormFieldErrorComponent  -->\n\nSharedModule->FormFieldErrorComponent \n\n\n\n\n\nFormFileComponent \n\nFormFileComponent \n\nFormFileComponent  -->\n\nSharedModule->FormFileComponent \n\n\n\n\n\nFormFilePathComponent \n\nFormFilePathComponent \n\nFormFilePathComponent  -->\n\nSharedModule->FormFilePathComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nSharedModule->FormInputComponent \n\n\n\n\n\nFormInputGroupComponent \n\nFormInputGroupComponent \n\nFormInputGroupComponent  -->\n\nSharedModule->FormInputGroupComponent \n\n\n\n\n\nFormRadioListComponent \n\nFormRadioListComponent \n\nFormRadioListComponent  -->\n\nSharedModule->FormRadioListComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nSharedModule->FormSelectComponent \n\n\n\n\n\nFormTextareaComponent \n\nFormTextareaComponent \n\nFormTextareaComponent  -->\n\nSharedModule->FormTextareaComponent \n\n\n\n\n\nFormTimeComponent \n\nFormTimeComponent \n\nFormTimeComponent  -->\n\nSharedModule->FormTimeComponent \n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nSharedModule->GridComponent \n\n\n\n\n\nGroupByPipe \n\nGroupByPipe \n\nGroupByPipe  -->\n\nSharedModule->GroupByPipe \n\n\n\n\n\nImageResizerComponent \n\nImageResizerComponent \n\nImageResizerComponent  -->\n\nSharedModule->ImageResizerComponent \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nSharedModule->ListComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nSharedModule->LoadingComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nSharedModule->LoginComponent \n\n\n\n\n\nLoginMenuComponent \n\nLoginMenuComponent \n\nLoginMenuComponent  -->\n\nSharedModule->LoginMenuComponent \n\n\n\n\n\nLogoutComponent \n\nLogoutComponent \n\nLogoutComponent  -->\n\nSharedModule->LogoutComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nSharedModule->ModalComponent \n\n\n\n\n\nModalTemplateDirective \n\nModalTemplateDirective \n\nModalTemplateDirective  -->\n\nSharedModule->ModalTemplateDirective \n\n\n\n\n\nPageHeadingComponent \n\nPageHeadingComponent \n\nPageHeadingComponent  -->\n\nSharedModule->PageHeadingComponent \n\n\n\n\n\nSafePipe \n\nSafePipe \n\nSafePipe  -->\n\nSharedModule->SafePipe \n\n\n\n\n\nSearchInputComponent \n\nSearchInputComponent \n\nSearchInputComponent  -->\n\nSharedModule->SearchInputComponent \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nSharedModule->ToastComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nSharedModule->ToggleSwitchComponent \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nSharedModule->TranslatePipe \n\n\n\n\n\nTypeaheadComponent \n\nTypeaheadComponent \n\nTypeaheadComponent  -->\n\nSharedModule->TypeaheadComponent \n\n\n\n\n\nUppercasePipe \n\nUppercasePipe \n\nUppercasePipe  -->\n\nSharedModule->UppercasePipe \n\n\n\n\n\nShopModule\n\nShopModule\n\nShopModule -->\n\nSharedModule->ShopModule\n\n\n\n\n\nSignalrModule\n\nSignalrModule\n\nSignalrModule -->\n\nSharedModule->SignalrModule\n\n\n\n\n\nExamplesComponent\n\nExamplesComponent\n\nExamplesModule -->\n\nExamplesComponent->ExamplesModule\n\n\n\n\n\nFormsPlaygroundComponent\n\nFormsPlaygroundComponent\n\nExamplesModule -->\n\nFormsPlaygroundComponent->ExamplesModule\n\n\n\n\n\nAccordionComponent\n\nAccordionComponent\n\nSharedModule -->\n\nAccordionComponent->SharedModule\n\n\n\n\n\nActionButtonComponent\n\nActionButtonComponent\n\nSharedModule -->\n\nActionButtonComponent->SharedModule\n\n\n\n\n\nActionButtonsComponent\n\nActionButtonsComponent\n\nSharedModule -->\n\nActionButtonsComponent->SharedModule\n\n\n\n\n\nAppFileInputDirective\n\nAppFileInputDirective\n\nSharedModule -->\n\nAppFileInputDirective->SharedModule\n\n\n\n\n\nAppFormComponent\n\nAppFormComponent\n\nSharedModule -->\n\nAppFormComponent->SharedModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSharedModule -->\n\nCardComponent->SharedModule\n\n\n\n\n\nCardDeckComponent\n\nCardDeckComponent\n\nSharedModule -->\n\nCardDeckComponent->SharedModule\n\n\n\n\n\nDateFilterComponent\n\nDateFilterComponent\n\nSharedModule -->\n\nDateFilterComponent->SharedModule\n\n\n\n\n\nDropdownFloatingFilterComponent\n\nDropdownFloatingFilterComponent\n\nSharedModule -->\n\nDropdownFloatingFilterComponent->SharedModule\n\n\n\n\n\nFieldColorValidationDirective\n\nFieldColorValidationDirective\n\nSharedModule -->\n\nFieldColorValidationDirective->SharedModule\n\n\n\n\n\nFormButtonComponent\n\nFormButtonComponent\n\nSharedModule -->\n\nFormButtonComponent->SharedModule\n\n\n\n\n\nFormButtonGroupComponent\n\nFormButtonGroupComponent\n\nSharedModule -->\n\nFormButtonGroupComponent->SharedModule\n\n\n\n\n\nFormCheckboxComponent\n\nFormCheckboxComponent\n\nSharedModule -->\n\nFormCheckboxComponent->SharedModule\n\n\n\n\n\nFormCheckboxListComponent\n\nFormCheckboxListComponent\n\nSharedModule -->\n\nFormCheckboxListComponent->SharedModule\n\n\n\n\n\nFormDateComponent\n\nFormDateComponent\n\nSharedModule -->\n\nFormDateComponent->SharedModule\n\n\n\n\n\nFormFieldDirective\n\nFormFieldDirective\n\nSharedModule -->\n\nFormFieldDirective->SharedModule\n\n\n\n\n\nFormFieldErrorComponent\n\nFormFieldErrorComponent\n\nSharedModule -->\n\nFormFieldErrorComponent->SharedModule\n\n\n\n\n\nFormFileComponent\n\nFormFileComponent\n\nSharedModule -->\n\nFormFileComponent->SharedModule\n\n\n\n\n\nFormFilePathComponent\n\nFormFilePathComponent\n\nSharedModule -->\n\nFormFilePathComponent->SharedModule\n\n\n\n\n\nFormInputComponent\n\nFormInputComponent\n\nSharedModule -->\n\nFormInputComponent->SharedModule\n\n\n\n\n\nFormInputGroupComponent\n\nFormInputGroupComponent\n\nSharedModule -->\n\nFormInputGroupComponent->SharedModule\n\n\n\n\n\nFormRadioListComponent\n\nFormRadioListComponent\n\nSharedModule -->\n\nFormRadioListComponent->SharedModule\n\n\n\n\n\nFormSelectComponent\n\nFormSelectComponent\n\nSharedModule -->\n\nFormSelectComponent->SharedModule\n\n\n\n\n\nFormTextareaComponent\n\nFormTextareaComponent\n\nSharedModule -->\n\nFormTextareaComponent->SharedModule\n\n\n\n\n\nFormTimeComponent\n\nFormTimeComponent\n\nSharedModule -->\n\nFormTimeComponent->SharedModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nSharedModule -->\n\nGridComponent->SharedModule\n\n\n\n\n\nGroupByPipe\n\nGroupByPipe\n\nSharedModule -->\n\nGroupByPipe->SharedModule\n\n\n\n\n\nImageResizerComponent\n\nImageResizerComponent\n\nSharedModule -->\n\nImageResizerComponent->SharedModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nSharedModule -->\n\nListComponent->SharedModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nSharedModule -->\n\nLoadingComponent->SharedModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nSharedModule -->\n\nLoginComponent->SharedModule\n\n\n\n\n\nLoginMenuComponent\n\nLoginMenuComponent\n\nSharedModule -->\n\nLoginMenuComponent->SharedModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nSharedModule -->\n\nLogoutComponent->SharedModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nSharedModule -->\n\nModalComponent->SharedModule\n\n\n\n\n\nModalTemplateDirective\n\nModalTemplateDirective\n\nSharedModule -->\n\nModalTemplateDirective->SharedModule\n\n\n\n\n\nPageHeadingComponent\n\nPageHeadingComponent\n\nSharedModule -->\n\nPageHeadingComponent->SharedModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nSharedModule -->\n\nSafePipe->SharedModule\n\n\n\n\n\nSearchInputComponent\n\nSearchInputComponent\n\nSharedModule -->\n\nSearchInputComponent->SharedModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nSharedModule -->\n\nToastComponent->SharedModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nSharedModule -->\n\nToggleSwitchComponent->SharedModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nSharedModule -->\n\nTranslatePipe->SharedModule\n\n\n\n\n\nTypeaheadComponent\n\nTypeaheadComponent\n\nSharedModule -->\n\nTypeaheadComponent->SharedModule\n\n\n\n\n\nUppercasePipe\n\nUppercasePipe\n\nSharedModule -->\n\nUppercasePipe->SharedModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nSharedModule -->\n\nAuthInterceptor->SharedModule\n\n\n\n\n\nFormsService\n\nFormsService\n\nSharedModule -->\n\nFormsService->SharedModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nSharedModule -->\n\nJwtInterceptor->SharedModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nSharedModule -->\n\nLoadingInterceptor->SharedModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nSharedModule -->\n\nTimingInterceptor->SharedModule\n\n\n\n\n\nCustomersComponent\n\nCustomersComponent\n\nShopModule -->\n\nCustomersComponent->ShopModule\n\n\n\n\n\nProductsComponent\n\nProductsComponent\n\nShopModule -->\n\nProductsComponent->ShopModule\n\n\n\n\n\nShopComponent\n\nShopComponent\n\nShopModule -->\n\nShopComponent->ShopModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nSignalrModule -->\n\nChatComponent->SignalrModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nSignalrModule -->\n\nDraggableDirective->SignalrModule\n\n\n\n\n\nMoveShapeComponent\n\nMoveShapeComponent\n\nSignalrModule -->\n\nMoveShapeComponent->SignalrModule\n\n\n\n\n\nSignalrComponent\n\nSignalrComponent\n\nSignalrModule -->\n\nSignalrComponent->SignalrModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    48 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    56 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExamplesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignalrModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IAuthenticationResult   (src/.../authorize.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/services/authorize.service.ts\n    \n    \n        \n            \n                \n                    \n                    IAuthenticationResult\n                \n            \n            \n                \n                        SuccessAuthenticationResult | FailureAuthenticationResult | RedirectAuthenticationResult\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_BASE_URL   (src/.../api-client.ts)\n                        \n                        \n                            APP_DATA_KEY   (src/.../app.service.ts)\n                        \n                        \n                            APP_FILE_INPUT_ACCESSOR   (src/.../file-input.directive.ts)\n                        \n                        \n                            ApplicationName   (src/.../auth.constants.ts)\n                        \n                        \n                            applicationPaths   (src/.../auth.constants.ts)\n                        \n                        \n                            ApplicationPaths   (src/.../auth.constants.ts)\n                        \n                        \n                            components   (src/.../form-field.directive.ts)\n                        \n                        \n                            COOKIES   (src/.../models.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LoginActions   (src/.../auth.constants.ts)\n                        \n                        \n                            LogoutActions   (src/.../auth.constants.ts)\n                        \n                        \n                            mock   (src/.../jestGlobalMocks.ts)\n                        \n                        \n                            providers   (src/.../main.ts)\n                        \n                        \n                            QueryParameterNames   (src/.../auth.constants.ts)\n                        \n                        \n                            ReturnUrlType   (src/.../auth.constants.ts)\n                        \n                        \n                            routerTransition   (src/.../router.animations.ts)\n                        \n                        \n                            routes   (src/.../shop.routes.ts)\n                        \n                        \n                            routes   (src/.../signalr.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api-client.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('API_BASE_URL')\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/services/app.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APP_DATA_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeStateKey('appData')\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/components/forms/components/form-file/file-input.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APP_FILE_INPUT_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AppFileInputDirective),\n  multi: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/constants/auth.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApplicationName\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : document.baseURI\n  .replace(/\\//g, '')\n  .replace(/:/g, '')\n  .split('.')\n  .join('')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applicationPaths\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationPathsType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  DefaultLoginRedirectPath: '/',\n  ApiAuthorizationClientConfigurationUrl: `${environment.stsUrl}_configuration/${ApplicationName}`,\n  Login: `authentication/${LoginActions.Login}`,\n  LoginFailed: `authentication/${LoginActions.LoginFailed}`,\n  LoginCallback: `authentication/${LoginActions.LoginCallback}`,\n  Register: `authentication/${LoginActions.Register}`,\n  Profile: `authentication/${LoginActions.Profile}`,\n  LogOut: `authentication/${LogoutActions.Logout}`,\n  LoggedOut: `authentication/${LogoutActions.LoggedOut}`,\n  LogOutCallback: `authentication/${LogoutActions.LogoutCallback}`,\n  LoginPathComponents: [],\n  LoginFailedPathComponents: [],\n  LoginCallbackPathComponents: [],\n  RegisterPathComponents: [],\n  ProfilePathComponents: [],\n  LogOutPathComponents: [],\n  LoggedOutPathComponents: [],\n  LogOutCallbackPathComponents: [],\n  IdentityRegisterPath: `${environment.stsUrl}Identity/Account/Register`,\n  IdentityManagePath: `${environment.stsUrl}Identity/Account/Manage`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ApplicationPaths\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationPathsType\n\n                        \n                    \n                    \n                        \n                            Default value : applicationPaths\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LoginActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  Login: 'login',\n  LoginCallback: 'login-callback',\n  LoginFailed: 'login-failed',\n  Profile: 'profile',\n  Register: 'register',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LogoutActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  LogoutCallback: 'logout-callback',\n  Logout: 'logout',\n  LoggedOut: 'logged-out',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            QueryParameterNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ReturnUrl: ReturnUrlType,\n  Message: 'message',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ReturnUrlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'returnUrl'\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/components/forms/directives/form-field.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  button: FormButtonComponent,\n  buttongroup: FormButtonGroupComponent,\n  input: FormInputComponent,\n  inputgroup: FormInputGroupComponent,\n  number: FormInputComponent,\n  file: FormFileComponent,\n  filepath: FormFilePathComponent,\n  password: FormInputComponent,\n  email: FormInputComponent,\n  date: FormDateComponent,\n  time: FormTimeComponent,\n  textarea: FormTextareaComponent,\n  checkbox: FormCheckboxComponent,\n  checkboxlist: FormCheckboxListComponent,\n  radiolist: FormRadioListComponent,\n  select: FormSelectComponent,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/models.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COOKIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('COOKIES')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  stsUrl: 'https://identityserver.fullstackpro.xyz/',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  stsUrl: 'https://localhost:5007/',\n}\n                        \n                    \n\n\n            \n        \n\n    src/jestGlobalMocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mock\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n    let storage = {};\n    return {\n        getItem: key => key in storage ? storage[key] : null,\n        setItem: (key, value) => storage[key] = value || '',\n        removeItem: key => delete storage[key],\n        clear: () => storage = {},\n    };\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] },\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/router.animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routerTransition\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : trigger('routerTransition', [\n    transition('*  *', [\n        query(':enter, :leave', style({ position: 'fixed', width: '100%' })\n            , { optional: true }),\n        query('.block', style({ opacity: 0 })\n            , { optional: true }),\n        group([\n            query(':enter', [\n                style({ transform: 'translateX(100%)' }),\n                animate('0.5s ease-in-out', style({ transform: 'translateX(0%)' }))\n            ], { optional: true }),\n            query(':leave', [\n                style({ transform: 'translateX(0%)' }),\n                animate('0.5s ease-in-out', style({ transform: 'translateX(-100%)' }))\n            ], { optional: true }),\n        ]),\n        query(':enter .block', stagger(400, [\n            style({ transform: 'translateY(100px)' }),\n            animate('1s ease-in-out', style({ transform: 'translateY(0px)', opacity: 1 })),\n        ]), { optional: true }),\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/+examples/examples/shop/shop.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    component: ShopComponent,\n    data: { displayText: 'Shop' },\n    children: [\n      { path: '', redirectTo: 'customers' },\n      { path: 'customers', component: CustomersComponent, data: { state: 'customers', displayText: 'Customers' } },\n      { path: 'products', component: ProductsComponent, data: { state: 'products', displayText: 'Products' } },\n    ],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/+examples/examples/signalr/signalr.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        path: '', component: SignalrComponent, data: { displayText: 'SignalR' },\n        children: [\n            { path: '', redirectTo: 'chat' },\n            { path: 'chat', component: ChatComponent, data: { state: 'chat', displayText: 'Chat' } },\n            { path: 'moveshape', component: MoveShapeComponent, data: { state: 'moveshape', displayText: 'Move shape' } },\n        ]\n    }\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
